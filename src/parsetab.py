
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND AO_AND AO_DIV AO_MOD AO_MUL AO_OR AO_PLUS AO_SL AO_SR AO_SUB AO_XOR AUTO BOOL BREAK CASE CHAR CONST CONSTANCE CONTINUE DEC DEFAULT DO DOUBLE ELLIPSIS ELSE ENUM EQUAL EXTERN FLOAT FOR GE GOTO ID IF INC INLINE INT LE LONG NE OR PTR REGISTER RESTRICT RETURN SHIFT_LEFT SHIFT_RIGHT SHORT SIGNED SIZEOF STATIC STRING_LITERAL STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE start_node : start_node global_declaration\n                         |  global_declaration global_declaration : function_definition\n                             | declaration   declaration : declaration_specifiers ';'\n                    | declaration_specifiers init_declarator_list ';'  init_declarator_list : init_declarator\n                             | init_declarator_list ',' init_declarator  init_declarator : declarator\n                        | declarator '=' initializer  declaration_specifiers \t: storage_class_specifier declaration_specifiers_no_s\n                                | type_specifier\n                                | type_specifier declaration_specifiers_no_ts\n                                | type_qualifier declaration_specifiers declaration_specifiers_no_s : type_specifier\n                                | type_specifier declaration_specifiers_no_ts_s\n                                | type_qualifier declaration_specifiers_no_s declaration_specifiers_no_ts : storage_class_specifier\n                                | storage_class_specifier declaration_specifiers_no_ts_s\n                                | type_qualifier\n                                | type_qualifier declaration_specifiers_no_ts declaration_specifiers_no_ts_s : type_qualifier\n                                | type_qualifier declaration_specifiers_no_ts_s storage_class_specifier : TYPEDEF\n                                | EXTERN\n                                | STATIC\n                                | AUTO\n                                | REGISTER  type_specifier : VOID\n                       | CHAR\n                       | SHORT\n                       | SHORT INT\n                       | INT SHORT\n                       | INT\n                       | LONG\n                       | LONG INT\n                       | INT LONG\n                       | FLOAT\n                       | DOUBLE\n                       | FLOAT LONG\n                       | LONG FLOAT\n                       | DOUBLE LONG\n                       | LONG DOUBLE\n                       | SIGNED\n                       | SIGNED INT\n                       | SIGNED SHORT\n                       | SIGNED SHORT INT\n                       | SIGNED INT SHORT\n                       | SIGNED LONG\n                       | SIGNED LONG INT\n                       | SIGNED INT LONG\n                       | UNSIGNED\n                       | UNSIGNED INT\n                       | UNSIGNED SHORT\n                       | UNSIGNED SHORT INT\n                       | UNSIGNED INT SHORT\n                       | UNSIGNED LONG\n                       | UNSIGNED LONG INT\n                       | UNSIGNED INT LONG\n                       | struct_or_union_specifier\n                       | enum_specifier\n                       | BOOL  type_qualifier : CONST\n                       | VOLATILE\n                       | RESTRICT  enum_specifier : ENUM '{' enumerator_list '}'\n                        | ENUM identifier '{' enumerator_list '}'\n                        | ENUM '{' enumerator_list ',' '}'\n                        | ENUM identifier '{' enumerator_list ',' '}'\n                        | ENUM identifier  enumerator_list : enumerator\n                        | enumerator_list ',' enumerator  enumerator : identifier\n                   | identifier '=' constant_expression  struct_or_union_specifier : struct_or_union identifier '{' struct_declaration_list '}'\n                                  | struct_or_union '{' struct_declaration_list '}'\n                                  | struct_or_union identifier  struct_or_union : STRUCT\n                        | UNION  struct_declaration_list : struct_declaration\n                                | struct_declaration_list struct_declaration  struct_declaration : specifier_qualifier_list struct_declarator_list ';'  specifier_qualifier_list : type_specifier specifier_qualifier_list_no_ts\n                                 | type_specifier\n                                 | type_qualifier specifier_qualifier_list\n                                 | type_qualifier   specifier_qualifier_list_no_ts : type_qualifier specifier_qualifier_list_no_ts\n                                        | type_qualifier   struct_declarator_list : struct_declarator\n                               | struct_declarator_list ',' struct_declarator  struct_declarator : declarator\n                          | ':' constant_expression\n                          | declarator ':' constant_expression  declarator : pointer direct_declarator\n                   | direct_declarator  pointer : '*'\n                | '*' type_qualifier_list\n                | '*' pointer\n                | '*' type_qualifier_list pointer  type_qualifier_list : type_qualifier\n                            | type_qualifier_list type_qualifier  direct_declarator : direct_declarator_forlist\n                        | '(' declarator ')'\n                        | direct_function_declarator  direct_declarator_forlist : identifier\n                                | '(' pointer direct_declarator_forlist ')'\n                                | '(' direct_declarator_forlist ')'\n                                | direct_declarator_forlist '[' constant_expression ']'\n                                | identifier '[' constant_expression ']'\n                                | identifier '[' ']'  parameter_list : parameter_list_definition\n                       | parameter_declaration\n                       | parameter_declaration ',' parameter_list  parameter_declaration : declaration_specifiers declarator\n                              | declaration_specifiers abstract_declarator\n                              | declaration_specifiers  constant_expression : conditional_expression  conditional_expression : logical_or_expression\n                               | logical_or_expression '?' expression ':' conditional_expression  logical_or_expression : logical_and_expression\n                              | logical_or_expression OR logical_and_expression  logical_and_expression : inclusive_or_expression\n                               | logical_and_expression AND inclusive_or_expression  inclusive_or_expression : exclusive_or_expression\n                                | inclusive_or_expression '|' exclusive_or_expression  exclusive_or_expression : and_expression\n                                | exclusive_or_expression '^' and_expression  and_expression : equality_expression\n                       | and_expression '&' equality_expression  equality_expression : relational_expression\n                            | equality_expression EQUAL relational_expression\n                            | equality_expression NE relational_expression  relational_expression : shift_expression\n                              | relational_expression '<' shift_expression\n                              | relational_expression '>' shift_expression\n                              | relational_expression LE shift_expression\n                              | relational_expression GE shift_expression  shift_expression : additive_expression\n                         | shift_expression SHIFT_LEFT additive_expression\n                         | shift_expression SHIFT_RIGHT additive_expression  additive_expression : multiplicative_expression\n                            | additive_expression '+' multiplicative_expression\n                            | additive_expression '-' multiplicative_expression  multiplicative_expression : cast_expression\n                                  | multiplicative_expression '*' cast_expression\n                                  | multiplicative_expression '/' cast_expression\n                                  | multiplicative_expression '%' cast_expression  cast_expression : unary_expression\n                        | '(' specifier_qualifier_list ')' cast_expression  unary_expression : primary_expression\n                         | unary_operator cast_expression\n                         | SIZEOF unary_expression\n                         | SIZEOF '(' specifier_qualifier_list ')'  unary_operator : '+'\n                       | '-'\n                       | '~'\n                       | '!'  primary_expression : CONSTANCE\n                           | STRING_LITERAL\n                           | '(' expression ')'  expression : constant_expression\n                   | expression ',' constant_expression  abstract_declarator : pointer\n                            | direct_abstract_declarator\n                            | pointer direct_abstract_declarator  direct_abstract_declarator : '(' abstract_declarator ')'\n                                   | '[' ']'\n                                   | '[' constant_expression ']'\n                                   | direct_abstract_declarator '[' constant_expression ']'\n                                   | parameter_type_list_definition  function_definition : declaration_specifiers pointer direct_function_declarator compound_statement\n                            | declaration_specifiers direct_function_declarator compound_statement  direct_function_declarator : '(' direct_function_declarator ')'\n                                    | identifier parameter_type_list_definition  identifier : '(' identifier ')'\n                    | ID  parameter_type_list_definition : '(' ')'\n                                       | '(' parameter_type_list_definition ')'\n                                       | '(' parameter_list ')'  parameter_list_definition : parameter_declaration '=' constant_expression  ',' parameter_list_definition\n                                  | parameter_declaration '=' constant_expression \n                                  | ELLIPSIS  compound_statement : '{' '}'\n                           | '{' block_item_list '}'  block_item_list : block_item\n                        | block_item_list block_item  block_item : declaration\n                   | statement  statement : labeled_statement\n                  | compound_statement\n                  | expression_statement\n                  | selection_statement\n                  | iteration_statement\n                  | jump_statement  labeled_statement : identifier ':'  expression_statement : ';'\n                             | expression_variable ';'  expression_variable : assignment_expression\n                            | expression_variable ',' assignment_expression  assignment_expression : conditional_expression_v\n                              | unary_expression_v assignment_operator assignment_expression  assignment_operator : '='\n                            | AO_MUL\n                            | AO_DIV\n                            | AO_MOD\n                            | AO_PLUS\n                            | AO_SUB\n                            | AO_SL\n                            | AO_SR\n                            | AO_AND\n                            | AO_XOR\n                            | AO_OR  conditional_expression_v : logical_or_expression_v\n                               | logical_or_expression_v '?' expression_variable ':' conditional_expression_v  logical_or_expression_v : logical_and_expression_v\n                              | logical_or_expression_v OR logical_and_expression_v  logical_and_expression_v : inclusive_or_expression_v\n                               | logical_and_expression_v AND inclusive_or_expression_v  inclusive_or_expression_v : exclusive_or_expression_v\n                                | inclusive_or_expression_v '|' exclusive_or_expression_v  exclusive_or_expression_v : and_expression_v\n                                | exclusive_or_expression_v '^' and_expression_v and_expression_v : equality_expression_v\n                       | and_expression_v '&' equality_expression_v  equality_expression_v : relational_expression_v\n                            | equality_expression_v EQUAL relational_expression_v\n                            | equality_expression_v NE relational_expression_v  relational_expression_v : shift_expression_v\n                              | relational_expression_v '<' shift_expression_v\n                              | relational_expression_v '>' shift_expression_v\n                              | relational_expression_v LE shift_expression_v\n                              | relational_expression_v GE shift_expression_v  shift_expression_v : additive_expression_v\n                         | shift_expression_v SHIFT_LEFT additive_expression_v\n                         | shift_expression_v SHIFT_RIGHT additive_expression_v  additive_expression_v : multiplicative_expression_v\n                            | additive_expression_v '+' multiplicative_expression_v\n                            | additive_expression_v '-' multiplicative_expression_v  multiplicative_expression_v : cast_expression_v\n                                  | multiplicative_expression_v '*' cast_expression_v\n                                  | multiplicative_expression_v '/' cast_expression_v\n                                  | multiplicative_expression_v '%' cast_expression_v  cast_expression_v : unary_expression_v\n                        | unary_expression_v_constance\n                        | '(' specifier_qualifier_list ')' cast_expression_v  unary_expression_v_constance : primary_expression_v\n                         | SIZEOF unary_expression_v_constance\n                         | SIZEOF '(' specifier_qualifier_list ')'  unary_expression_v : postfix_expression_v\n                         | INC unary_expression_v\n                         | DEC unary_expression_v\n                         | unary_operator_v cast_expression_v\n                         | SIZEOF unary_expression_v  unary_operator_v : '&'\n                       | '*'\n                       | '+'\n                       | '-'\n                       | '~'\n                       | '!'  postfix_expression_v : postfix_expression_v_no_func\n                           | postfix_expression_v '[' expression ']'\n                           | identifier '(' ')'\n                           | identifier '(' argument_expression_list ')'\n                           | postfix_expression_v '.' ID\n                           | postfix_expression_v PTR ID\n                           | postfix_expression_v_no_func INC\n                           | postfix_expression_v_no_func DEC  postfix_expression_v_no_func : identifier\n                                | '(' postfix_expression_v_no_func ')'\n                                | postfix_expression_v_no_func '[' expression ']'\n                                | postfix_expression_v_no_func '.' ID\n                                | postfix_expression_v_no_func PTR ID   primary_expression_v : CONSTANCE\n                           | STRING_LITERAL\n                           | '(' expression_variable ')'  selection_statement : IF '(' expression_variable ')' statement ELSE statement\n                            | IF '(' expression_variable ')' statement\n                            | SWITCH '(' expression_variable ')' statement_switch  compound_statement_switch : '{' '}'\n                           | '{' block_item_list_switch '}'  block_item_list_switch : block_item_switch\n                        | block_item_list_switch block_item_switch  block_item_switch : declaration\n                   | statement_switch  statement_switch : labeled_statement_switch\n                        | compound_statement_switch\n                        | expression_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement  labeled_statement_switch : ID ':'\n                            | CASE constant_expression ':' statement\n                            | DEFAULT ':' statement  iteration_statement : WHILE '(' expression_variable ')' statement\n                            | DO statement WHILE '(' expression_variable ')' ';'\n                            | FOR '(' expression_statement expression_statement ')' statement\n                            | FOR '(' expression_statement expression_statement expression_variable ')' statement\n                            | FOR '(' declaration expression_statement ')' statement\n                            | FOR '(' declaration expression_statement expression_variable ')' statement  jump_statement : GOTO ID ';'\n                       | CONTINUE ';'\n                       | BREAK ';'\n                       | RETURN ';'\n                       | RETURN expression_variable ';'  argument_expression_list : assignment_expression\n                                 | argument_expression_list ',' assignment_expression  initializer_list : initializer\n                         | designation initializer\n                         | initializer_list ',' initializer\n                         | initializer_list ',' designation initializer  initializer : assignment_expression\n                    | '{' initializer_list '}'\n                    | '{' initializer_list ',' '}'  designation : designator_list '='  designator_list : designator\n                        | designator_list designator  designator : '[' constant_expression ']'\n                   | '.' ID "
    
_lr_action_items = {'TYPEDEF':([0,1,2,3,4,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,33,36,42,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,75,76,77,90,98,99,100,101,102,103,104,105,117,118,119,120,121,122,124,125,126,127,128,129,130,181,226,235,239,240,241,243,253,255,256,257,340,346,357,363,366,381,382,439,454,472,475,482,483,484,485,486,487,488,489,493,494,505,508,511,512,513,514,515,517,519,521,523,524,525,526,527,528,529,],[9,9,-2,-3,-4,9,9,-29,-30,-31,-34,-35,-38,-39,-44,-52,-60,-61,-62,-63,-64,-65,-1,-5,-176,9,-32,-33,-37,-36,-41,-43,-40,-42,-45,-46,-49,-53,-54,-57,-77,-70,-172,9,-6,9,-48,-51,-47,-50,-56,-59,-55,-58,-171,-183,9,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,-175,-76,-66,-184,-186,-195,-197,9,-301,-302,-303,9,9,-75,-68,-67,-300,-304,9,-69,9,9,-277,-278,-285,-286,-287,-288,-289,-290,9,-294,9,-291,-279,9,-281,-283,-284,-296,-298,-276,-293,-280,-282,-295,-297,-299,-292,]),'EXTERN':([0,1,2,3,4,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,33,36,42,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,75,76,77,90,98,99,100,101,102,103,104,105,117,118,119,120,121,122,124,125,126,127,128,129,130,181,226,235,239,240,241,243,253,255,256,257,340,346,357,363,366,381,382,439,454,472,475,482,483,484,485,486,487,488,489,493,494,505,508,511,512,513,514,515,517,519,521,523,524,525,526,527,528,529,],[10,10,-2,-3,-4,10,10,-29,-30,-31,-34,-35,-38,-39,-44,-52,-60,-61,-62,-63,-64,-65,-1,-5,-176,10,-32,-33,-37,-36,-41,-43,-40,-42,-45,-46,-49,-53,-54,-57,-77,-70,-172,10,-6,10,-48,-51,-47,-50,-56,-59,-55,-58,-171,-183,10,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,-175,-76,-66,-184,-186,-195,-197,10,-301,-302,-303,10,10,-75,-68,-67,-300,-304,10,-69,10,10,-277,-278,-285,-286,-287,-288,-289,-290,10,-294,10,-291,-279,10,-281,-283,-284,-296,-298,-276,-293,-280,-282,-295,-297,-299,-292,]),'STATIC':([0,1,2,3,4,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,33,36,42,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,75,76,77,90,98,99,100,101,102,103,104,105,117,118,119,120,121,122,124,125,126,127,128,129,130,181,226,235,239,240,241,243,253,255,256,257,340,346,357,363,366,381,382,439,454,472,475,482,483,484,485,486,487,488,489,493,494,505,508,511,512,513,514,515,517,519,521,523,524,525,526,527,528,529,],[11,11,-2,-3,-4,11,11,-29,-30,-31,-34,-35,-38,-39,-44,-52,-60,-61,-62,-63,-64,-65,-1,-5,-176,11,-32,-33,-37,-36,-41,-43,-40,-42,-45,-46,-49,-53,-54,-57,-77,-70,-172,11,-6,11,-48,-51,-47,-50,-56,-59,-55,-58,-171,-183,11,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,-175,-76,-66,-184,-186,-195,-197,11,-301,-302,-303,11,11,-75,-68,-67,-300,-304,11,-69,11,11,-277,-278,-285,-286,-287,-288,-289,-290,11,-294,11,-291,-279,11,-281,-283,-284,-296,-298,-276,-293,-280,-282,-295,-297,-299,-292,]),'AUTO':([0,1,2,3,4,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,33,36,42,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,75,76,77,90,98,99,100,101,102,103,104,105,117,118,119,120,121,122,124,125,126,127,128,129,130,181,226,235,239,240,241,243,253,255,256,257,340,346,357,363,366,381,382,439,454,472,475,482,483,484,485,486,487,488,489,493,494,505,508,511,512,513,514,515,517,519,521,523,524,525,526,527,528,529,],[12,12,-2,-3,-4,12,12,-29,-30,-31,-34,-35,-38,-39,-44,-52,-60,-61,-62,-63,-64,-65,-1,-5,-176,12,-32,-33,-37,-36,-41,-43,-40,-42,-45,-46,-49,-53,-54,-57,-77,-70,-172,12,-6,12,-48,-51,-47,-50,-56,-59,-55,-58,-171,-183,12,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,-175,-76,-66,-184,-186,-195,-197,12,-301,-302,-303,12,12,-75,-68,-67,-300,-304,12,-69,12,12,-277,-278,-285,-286,-287,-288,-289,-290,12,-294,12,-291,-279,12,-281,-283,-284,-296,-298,-276,-293,-280,-282,-295,-297,-299,-292,]),'REGISTER':([0,1,2,3,4,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,33,36,42,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,75,76,77,90,98,99,100,101,102,103,104,105,117,118,119,120,121,122,124,125,126,127,128,129,130,181,226,235,239,240,241,243,253,255,256,257,340,346,357,363,366,381,382,439,454,472,475,482,483,484,485,486,487,488,489,493,494,505,508,511,512,513,514,515,517,519,521,523,524,525,526,527,528,529,],[13,13,-2,-3,-4,13,13,-29,-30,-31,-34,-35,-38,-39,-44,-52,-60,-61,-62,-63,-64,-65,-1,-5,-176,13,-32,-33,-37,-36,-41,-43,-40,-42,-45,-46,-49,-53,-54,-57,-77,-70,-172,13,-6,13,-48,-51,-47,-50,-56,-59,-55,-58,-171,-183,13,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,-175,-76,-66,-184,-186,-195,-197,13,-301,-302,-303,13,13,-75,-68,-67,-300,-304,13,-69,13,13,-277,-278,-285,-286,-287,-288,-289,-290,13,-294,13,-291,-279,13,-281,-283,-284,-296,-298,-276,-293,-280,-282,-295,-297,-299,-292,]),'VOID':([0,1,2,3,4,6,8,9,10,11,12,13,26,27,28,33,36,48,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,203,222,225,227,239,240,241,243,253,255,256,257,282,285,337,340,346,358,381,382,439,472,475,482,483,484,485,486,487,488,489,493,494,505,508,511,512,513,514,515,517,519,521,523,524,525,526,527,528,529,],[14,14,-2,-3,-4,14,14,-24,-25,-26,-27,-28,-63,-64,-65,-1,-5,14,14,-172,14,-6,14,14,14,-80,14,-171,-183,14,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,14,14,14,14,-81,-184,-186,-195,-197,14,-301,-302,-303,14,14,14,14,14,-82,-300,-304,14,14,14,-277,-278,-285,-286,-287,-288,-289,-290,14,-294,14,-291,-279,14,-281,-283,-284,-296,-298,-276,-293,-280,-282,-295,-297,-299,-292,]),'CHAR':([0,1,2,3,4,6,8,9,10,11,12,13,26,27,28,33,36,48,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,203,222,225,227,239,240,241,243,253,255,256,257,282,285,337,340,346,358,381,382,439,472,475,482,483,484,485,486,487,488,489,493,494,505,508,511,512,513,514,515,517,519,521,523,524,525,526,527,528,529,],[15,15,-2,-3,-4,15,15,-24,-25,-26,-27,-28,-63,-64,-65,-1,-5,15,15,-172,15,-6,15,15,15,-80,15,-171,-183,15,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,15,15,15,15,-81,-184,-186,-195,-197,15,-301,-302,-303,15,15,15,15,15,-82,-300,-304,15,15,15,-277,-278,-285,-286,-287,-288,-289,-290,15,-294,15,-291,-279,15,-281,-283,-284,-296,-298,-276,-293,-280,-282,-295,-297,-299,-292,]),'SHORT':([0,1,2,3,4,6,8,9,10,11,12,13,17,21,22,26,27,28,33,36,48,61,64,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,203,222,225,227,239,240,241,243,253,255,256,257,282,285,337,340,346,358,381,382,439,472,475,482,483,484,485,486,487,488,489,493,494,505,508,511,512,513,514,515,517,519,521,523,524,525,526,527,528,529,],[16,16,-2,-3,-4,16,16,-24,-25,-26,-27,-28,54,62,65,-63,-64,-65,-1,-5,16,98,102,16,-172,16,-6,16,16,16,-80,16,-171,-183,16,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,16,16,16,16,-81,-184,-186,-195,-197,16,-301,-302,-303,16,16,16,16,16,-82,-300,-304,16,16,16,-277,-278,-285,-286,-287,-288,-289,-290,16,-294,16,-291,-279,16,-281,-283,-284,-296,-298,-276,-293,-280,-282,-295,-297,-299,-292,]),'INT':([0,1,2,3,4,6,8,9,10,11,12,13,16,18,21,22,26,27,28,33,36,48,62,63,65,66,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,203,222,225,227,239,240,241,243,253,255,256,257,282,285,337,340,346,358,381,382,439,472,475,482,483,484,485,486,487,488,489,493,494,505,508,511,512,513,514,515,517,519,521,523,524,525,526,527,528,529,],[17,17,-2,-3,-4,17,17,-24,-25,-26,-27,-28,53,56,61,64,-63,-64,-65,-1,-5,17,100,101,104,105,17,-172,17,-6,17,17,17,-80,17,-171,-183,17,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,17,17,17,17,-81,-184,-186,-195,-197,17,-301,-302,-303,17,17,17,17,17,-82,-300,-304,17,17,17,-277,-278,-285,-286,-287,-288,-289,-290,17,-294,17,-291,-279,17,-281,-283,-284,-296,-298,-276,-293,-280,-282,-295,-297,-299,-292,]),'LONG':([0,1,2,3,4,6,8,9,10,11,12,13,17,19,20,21,22,26,27,28,33,36,48,61,64,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,203,222,225,227,239,240,241,243,253,255,256,257,282,285,337,340,346,358,381,382,439,472,475,482,483,484,485,486,487,488,489,493,494,505,508,511,512,513,514,515,517,519,521,523,524,525,526,527,528,529,],[18,18,-2,-3,-4,18,18,-24,-25,-26,-27,-28,55,59,60,63,66,-63,-64,-65,-1,-5,18,99,103,18,-172,18,-6,18,18,18,-80,18,-171,-183,18,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,18,18,18,18,-81,-184,-186,-195,-197,18,-301,-302,-303,18,18,18,18,18,-82,-300,-304,18,18,18,-277,-278,-285,-286,-287,-288,-289,-290,18,-294,18,-291,-279,18,-281,-283,-284,-296,-298,-276,-293,-280,-282,-295,-297,-299,-292,]),'FLOAT':([0,1,2,3,4,6,8,9,10,11,12,13,18,26,27,28,33,36,48,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,203,222,225,227,239,240,241,243,253,255,256,257,282,285,337,340,346,358,381,382,439,472,475,482,483,484,485,486,487,488,489,493,494,505,508,511,512,513,514,515,517,519,521,523,524,525,526,527,528,529,],[19,19,-2,-3,-4,19,19,-24,-25,-26,-27,-28,57,-63,-64,-65,-1,-5,19,19,-172,19,-6,19,19,19,-80,19,-171,-183,19,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,19,19,19,19,-81,-184,-186,-195,-197,19,-301,-302,-303,19,19,19,19,19,-82,-300,-304,19,19,19,-277,-278,-285,-286,-287,-288,-289,-290,19,-294,19,-291,-279,19,-281,-283,-284,-296,-298,-276,-293,-280,-282,-295,-297,-299,-292,]),'DOUBLE':([0,1,2,3,4,6,8,9,10,11,12,13,18,26,27,28,33,36,48,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,203,222,225,227,239,240,241,243,253,255,256,257,282,285,337,340,346,358,381,382,439,472,475,482,483,484,485,486,487,488,489,493,494,505,508,511,512,513,514,515,517,519,521,523,524,525,526,527,528,529,],[20,20,-2,-3,-4,20,20,-24,-25,-26,-27,-28,58,-63,-64,-65,-1,-5,20,20,-172,20,-6,20,20,20,-80,20,-171,-183,20,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,20,20,20,20,-81,-184,-186,-195,-197,20,-301,-302,-303,20,20,20,20,20,-82,-300,-304,20,20,20,-277,-278,-285,-286,-287,-288,-289,-290,20,-294,20,-291,-279,20,-281,-283,-284,-296,-298,-276,-293,-280,-282,-295,-297,-299,-292,]),'SIGNED':([0,1,2,3,4,6,8,9,10,11,12,13,26,27,28,33,36,48,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,203,222,225,227,239,240,241,243,253,255,256,257,282,285,337,340,346,358,381,382,439,472,475,482,483,484,485,486,487,488,489,493,494,505,508,511,512,513,514,515,517,519,521,523,524,525,526,527,528,529,],[21,21,-2,-3,-4,21,21,-24,-25,-26,-27,-28,-63,-64,-65,-1,-5,21,21,-172,21,-6,21,21,21,-80,21,-171,-183,21,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,21,21,21,21,-81,-184,-186,-195,-197,21,-301,-302,-303,21,21,21,21,21,-82,-300,-304,21,21,21,-277,-278,-285,-286,-287,-288,-289,-290,21,-294,21,-291,-279,21,-281,-283,-284,-296,-298,-276,-293,-280,-282,-295,-297,-299,-292,]),'UNSIGNED':([0,1,2,3,4,6,8,9,10,11,12,13,26,27,28,33,36,48,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,203,222,225,227,239,240,241,243,253,255,256,257,282,285,337,340,346,358,381,382,439,472,475,482,483,484,485,486,487,488,489,493,494,505,508,511,512,513,514,515,517,519,521,523,524,525,526,527,528,529,],[22,22,-2,-3,-4,22,22,-24,-25,-26,-27,-28,-63,-64,-65,-1,-5,22,22,-172,22,-6,22,22,22,-80,22,-171,-183,22,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,22,22,22,22,-81,-184,-186,-195,-197,22,-301,-302,-303,22,22,22,22,22,-82,-300,-304,22,22,22,-277,-278,-285,-286,-287,-288,-289,-290,22,-294,22,-291,-279,22,-281,-283,-284,-296,-298,-276,-293,-280,-282,-295,-297,-299,-292,]),'BOOL':([0,1,2,3,4,6,8,9,10,11,12,13,26,27,28,33,36,48,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,203,222,225,227,239,240,241,243,253,255,256,257,282,285,337,340,346,358,381,382,439,472,475,482,483,484,485,486,487,488,489,493,494,505,508,511,512,513,514,515,517,519,521,523,524,525,526,527,528,529,],[25,25,-2,-3,-4,25,25,-24,-25,-26,-27,-28,-63,-64,-65,-1,-5,25,25,-172,25,-6,25,25,25,-80,25,-171,-183,25,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,25,25,25,25,-81,-184,-186,-195,-197,25,-301,-302,-303,25,25,25,25,25,-82,-300,-304,25,25,25,-277,-278,-285,-286,-287,-288,-289,-290,25,-294,25,-291,-279,25,-281,-283,-284,-296,-298,-276,-293,-280,-282,-295,-297,-299,-292,]),'CONST':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,33,36,38,42,47,48,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,75,76,77,79,81,90,94,98,99,100,101,102,103,104,105,106,107,108,110,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,179,181,203,222,225,226,227,233,235,239,240,241,243,253,255,256,257,282,285,337,340,346,357,358,363,366,381,382,439,454,472,475,482,483,484,485,486,487,488,489,493,494,505,508,511,512,513,514,515,517,519,521,523,524,525,526,527,528,529,],[26,26,-2,-3,-4,26,26,26,-24,-25,-26,-27,-28,-29,-30,-31,-34,-35,-38,-39,-44,-52,-60,-61,-62,-63,-64,-65,-1,-5,26,-176,26,26,26,26,-32,-33,-37,-36,-41,-43,-40,-42,-45,-46,-49,-53,-54,-57,-77,26,-70,-172,26,-6,26,-100,26,26,-48,-51,-47,-50,-56,-59,-55,-58,26,26,-80,26,26,-171,-183,26,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,26,-101,-175,26,26,26,-76,-81,26,-66,-184,-186,-195,-197,26,-301,-302,-303,26,26,26,26,26,-75,-82,-68,-67,-300,-304,26,-69,26,26,-277,-278,-285,-286,-287,-288,-289,-290,26,-294,26,-291,-279,26,-281,-283,-284,-296,-298,-276,-293,-280,-282,-295,-297,-299,-292,]),'VOLATILE':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,33,36,38,42,47,48,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,75,76,77,79,81,90,94,98,99,100,101,102,103,104,105,106,107,108,110,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,179,181,203,222,225,226,227,233,235,239,240,241,243,253,255,256,257,282,285,337,340,346,357,358,363,366,381,382,439,454,472,475,482,483,484,485,486,487,488,489,493,494,505,508,511,512,513,514,515,517,519,521,523,524,525,526,527,528,529,],[27,27,-2,-3,-4,27,27,27,-24,-25,-26,-27,-28,-29,-30,-31,-34,-35,-38,-39,-44,-52,-60,-61,-62,-63,-64,-65,-1,-5,27,-176,27,27,27,27,-32,-33,-37,-36,-41,-43,-40,-42,-45,-46,-49,-53,-54,-57,-77,27,-70,-172,27,-6,27,-100,27,27,-48,-51,-47,-50,-56,-59,-55,-58,27,27,-80,27,27,-171,-183,27,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,27,-101,-175,27,27,27,-76,-81,27,-66,-184,-186,-195,-197,27,-301,-302,-303,27,27,27,27,27,-75,-82,-68,-67,-300,-304,27,-69,27,27,-277,-278,-285,-286,-287,-288,-289,-290,27,-294,27,-291,-279,27,-281,-283,-284,-296,-298,-276,-293,-280,-282,-295,-297,-299,-292,]),'RESTRICT':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,33,36,38,42,47,48,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,75,76,77,79,81,90,94,98,99,100,101,102,103,104,105,106,107,108,110,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,179,181,203,222,225,226,227,233,235,239,240,241,243,253,255,256,257,282,285,337,340,346,357,358,363,366,381,382,439,454,472,475,482,483,484,485,486,487,488,489,493,494,505,508,511,512,513,514,515,517,519,521,523,524,525,526,527,528,529,],[28,28,-2,-3,-4,28,28,28,-24,-25,-26,-27,-28,-29,-30,-31,-34,-35,-38,-39,-44,-52,-60,-61,-62,-63,-64,-65,-1,-5,28,-176,28,28,28,28,-32,-33,-37,-36,-41,-43,-40,-42,-45,-46,-49,-53,-54,-57,-77,28,-70,-172,28,-6,28,-100,28,28,-48,-51,-47,-50,-56,-59,-55,-58,28,28,-80,28,28,-171,-183,28,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,28,-101,-175,28,28,28,-76,-81,28,-66,-184,-186,-195,-197,28,-301,-302,-303,28,28,28,28,28,-75,-82,-68,-67,-300,-304,28,-69,28,28,-277,-278,-285,-286,-287,-288,-289,-290,28,-294,28,-291,-279,28,-281,-283,-284,-296,-298,-276,-293,-280,-282,-295,-297,-299,-292,]),'ENUM':([0,1,2,3,4,6,8,9,10,11,12,13,26,27,28,33,36,48,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,203,222,225,227,239,240,241,243,253,255,256,257,282,285,337,340,346,358,381,382,439,472,475,482,483,484,485,486,487,488,489,493,494,505,508,511,512,513,514,515,517,519,521,523,524,525,526,527,528,529,],[30,30,-2,-3,-4,30,30,-24,-25,-26,-27,-28,-63,-64,-65,-1,-5,30,30,-172,30,-6,30,30,30,-80,30,-171,-183,30,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,30,30,30,30,-81,-184,-186,-195,-197,30,-301,-302,-303,30,30,30,30,30,-82,-300,-304,30,30,30,-277,-278,-285,-286,-287,-288,-289,-290,30,-294,30,-291,-279,30,-281,-283,-284,-296,-298,-276,-293,-280,-282,-295,-297,-299,-292,]),'STRUCT':([0,1,2,3,4,6,8,9,10,11,12,13,26,27,28,33,36,48,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,203,222,225,227,239,240,241,243,253,255,256,257,282,285,337,340,346,358,381,382,439,472,475,482,483,484,485,486,487,488,489,493,494,505,508,511,512,513,514,515,517,519,521,523,524,525,526,527,528,529,],[31,31,-2,-3,-4,31,31,-24,-25,-26,-27,-28,-63,-64,-65,-1,-5,31,31,-172,31,-6,31,31,31,-80,31,-171,-183,31,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,31,31,31,31,-81,-184,-186,-195,-197,31,-301,-302,-303,31,31,31,31,31,-82,-300,-304,31,31,31,-277,-278,-285,-286,-287,-288,-289,-290,31,-294,31,-291,-279,31,-281,-283,-284,-296,-298,-276,-293,-280,-282,-295,-297,-299,-292,]),'UNION':([0,1,2,3,4,6,8,9,10,11,12,13,26,27,28,33,36,48,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,203,222,225,227,239,240,241,243,253,255,256,257,282,285,337,340,346,358,381,382,439,472,475,482,483,484,485,486,487,488,489,493,494,505,508,511,512,513,514,515,517,519,521,523,524,525,526,527,528,529,],[32,32,-2,-3,-4,32,32,-24,-25,-26,-27,-28,-63,-64,-65,-1,-5,32,32,-172,32,-6,32,32,32,-80,32,-171,-183,32,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,32,32,32,32,-81,-184,-186,-195,-197,32,-301,-302,-303,32,32,32,32,32,-82,-300,-304,32,32,32,-277,-278,-285,-286,-287,-288,-289,-290,32,-294,32,-291,-279,32,-281,-283,-284,-296,-298,-276,-293,-280,-282,-295,-297,-299,-292,]),'$end{':([29,30,31,32,35,36,42,67,71,72,76,77,88,91,118,119,120,121,122,124,125,126,127,128,129,130,137,180,181,211,220,239,240,241,243,255,256,257,338,339,351,381,382,446,448,457,459,460,479,482,483,484,485,486,487,488,489,493,494,496,498,507,508,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,528,529,],[68,70,-78,-79,76,-5,-176,106,116,76,76,-6,-174,220,-183,76,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,76,-173,-175,-177,220,-184,-186,-195,-197,-301,-302,-303,-178,-179,220,-300,-304,220,-314,76,493,76,220,-277,-278,-285,-286,-287,-288,-289,-290,493,-294,76,76,76,-291,76,-279,493,-281,-283,-284,-296,76,-298,76,-276,76,-293,-280,-282,-295,-297,-299,-292,]),'}':([36,42,76,77,107,108,113,114,115,118,119,120,121,122,124,125,126,127,128,129,130,144,145,146,147,151,153,154,161,162,163,164,165,166,167,168,169,170,171,172,181,188,189,190,191,192,193,194,195,196,197,198,201,202,204,207,208,219,221,225,227,236,238,239,240,241,243,255,256,257,276,279,280,281,283,284,287,288,335,336,349,350,358,364,365,367,368,373,375,381,382,383,385,387,388,392,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,432,445,446,447,455,458,465,466,467,469,471,477,478,482,483,484,485,486,487,488,489,493,494,500,501,506,508,511,512,513,514,515,517,519,521,523,524,525,526,527,528,529,],[-5,-176,118,-6,226,-80,235,-71,-73,-183,239,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,-200,-243,-213,-249,-239,-215,-260,-217,-219,-221,-223,-225,-228,-233,-236,-244,-246,-273,-274,-175,-117,-118,-120,-122,-124,-126,-128,-130,-133,-138,-141,-144,-148,-150,-158,-159,-311,-268,357,-81,363,366,-184,-186,-195,-197,-301,-302,-303,-250,-251,-252,-243,-253,-247,-266,-267,-151,-152,445,-307,-82,-72,-74,454,-262,-269,-275,-300,-304,-201,-216,-264,-265,-218,-271,-272,-220,-222,-224,-226,-227,-229,-230,-231,-232,-234,-235,-237,-238,-240,-241,-242,-121,-123,-125,-127,-129,-131,-132,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-160,-312,477,-308,-263,-245,-261,-248,-270,-149,-153,-313,-309,-277,-278,-285,-286,-287,-288,-289,-290,511,-294,-214,-119,-310,-291,-279,524,-281,-283,-284,-296,-298,-276,-293,-280,-282,-295,-297,-299,-292,]),'IF':([36,76,77,118,119,120,121,122,124,125,126,127,128,129,130,137,239,240,241,243,255,256,257,381,382,457,459,460,482,483,484,485,486,487,488,489,493,494,496,498,507,508,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,528,529,],[-5,133,-6,-183,133,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,133,-184,-186,-195,-197,-301,-302,-303,-300,-304,133,133,133,-277,-278,-285,-286,-287,-288,-289,-290,133,-294,133,133,133,-291,133,-279,133,-281,-283,-284,-296,133,-298,133,-276,133,-293,-280,-282,-295,-297,-299,-292,]),'SWITCH':([36,76,77,118,119,120,121,122,124,125,126,127,128,129,130,137,239,240,241,243,255,256,257,381,382,457,459,460,482,483,484,485,486,487,488,489,493,494,496,498,507,508,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,528,529,],[-5,135,-6,-183,135,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,135,-184,-186,-195,-197,-301,-302,-303,-300,-304,135,135,135,-277,-278,-285,-286,-287,-288,-289,-290,135,-294,135,135,135,-291,135,-279,135,-281,-283,-284,-296,135,-298,135,-276,135,-293,-280,-282,-295,-297,-299,-292,]),'WHILE':([36,76,77,118,119,120,121,122,124,125,126,127,128,129,130,137,239,240,241,243,252,255,256,257,381,382,457,459,460,482,483,484,485,486,487,488,489,493,494,496,498,507,508,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,528,529,],[-5,136,-6,-183,136,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,136,-184,-186,-195,-197,378,-301,-302,-303,-300,-304,136,136,136,-277,-278,-285,-286,-287,-288,-289,-290,136,-294,136,136,136,-291,136,-279,136,-281,-283,-284,-296,136,-298,136,-276,136,-293,-280,-282,-295,-297,-299,-292,]),'DO':([36,76,77,118,119,120,121,122,124,125,126,127,128,129,130,137,239,240,241,243,255,256,257,381,382,457,459,460,482,483,484,485,486,487,488,489,493,494,496,498,507,508,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,528,529,],[-5,137,-6,-183,137,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,137,-184,-186,-195,-197,-301,-302,-303,-300,-304,137,137,137,-277,-278,-285,-286,-287,-288,-289,-290,137,-294,137,137,137,-291,137,-279,137,-281,-283,-284,-296,137,-298,137,-276,137,-293,-280,-282,-295,-297,-299,-292,]),'FOR':([36,76,77,118,119,120,121,122,124,125,126,127,128,129,130,137,239,240,241,243,255,256,257,381,382,457,459,460,482,483,484,485,486,487,488,489,493,494,496,498,507,508,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,528,529,],[-5,138,-6,-183,138,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,138,-184,-186,-195,-197,-301,-302,-303,-300,-304,138,138,138,-277,-278,-285,-286,-287,-288,-289,-290,138,-294,138,138,138,-291,138,-279,138,-281,-283,-284,-296,138,-298,138,-276,138,-293,-280,-282,-295,-297,-299,-292,]),'GOTO':([36,76,77,118,119,120,121,122,124,125,126,127,128,129,130,137,239,240,241,243,255,256,257,381,382,457,459,460,482,483,484,485,486,487,488,489,493,494,496,498,507,508,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,528,529,],[-5,139,-6,-183,139,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,139,-184,-186,-195,-197,-301,-302,-303,-300,-304,139,139,139,-277,-278,-285,-286,-287,-288,-289,-290,139,-294,139,139,139,-291,139,-279,139,-281,-283,-284,-296,139,-298,139,-276,139,-293,-280,-282,-295,-297,-299,-292,]),'CONTINUE':([36,76,77,118,119,120,121,122,124,125,126,127,128,129,130,137,239,240,241,243,255,256,257,381,382,457,459,460,482,483,484,485,486,487,488,489,493,494,496,498,507,508,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,528,529,],[-5,140,-6,-183,140,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,140,-184,-186,-195,-197,-301,-302,-303,-300,-304,140,140,140,-277,-278,-285,-286,-287,-288,-289,-290,140,-294,140,140,140,-291,140,-279,140,-281,-283,-284,-296,140,-298,140,-276,140,-293,-280,-282,-295,-297,-299,-292,]),'BREAK':([36,76,77,118,119,120,121,122,124,125,126,127,128,129,130,137,239,240,241,243,255,256,257,381,382,457,459,460,482,483,484,485,486,487,488,489,493,494,496,498,507,508,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,528,529,],[-5,141,-6,-183,141,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,141,-184,-186,-195,-197,-301,-302,-303,-300,-304,141,141,141,-277,-278,-285,-286,-287,-288,-289,-290,141,-294,141,141,141,-291,141,-279,141,-281,-283,-284,-296,141,-298,141,-276,141,-293,-280,-282,-295,-297,-299,-292,]),'RETURN':([36,76,77,118,119,120,121,122,124,125,126,127,128,129,130,137,239,240,241,243,255,256,257,381,382,457,459,460,482,483,484,485,486,487,488,489,493,494,496,498,507,508,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,528,529,],[-5,142,-6,-183,142,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,142,-184,-186,-195,-197,-301,-302,-303,-300,-304,142,142,142,-277,-278,-285,-286,-287,-288,-289,-290,142,-294,142,142,142,-291,142,-279,142,-281,-283,-284,-296,142,-298,142,-276,142,-293,-280,-282,-295,-297,-299,-292,]),'INC':([36,42,76,77,91,118,119,120,121,122,124,125,126,127,128,129,130,131,134,137,142,148,149,150,152,154,155,156,157,158,159,160,181,220,221,222,239,240,241,242,243,244,245,246,247,250,251,253,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,277,282,285,286,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,351,373,374,379,380,381,382,394,395,446,448,456,457,459,460,461,462,463,464,467,479,482,483,484,485,486,487,488,489,490,493,494,496,498,507,508,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,528,529,],[-5,-176,148,-6,148,-183,148,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,-268,148,148,148,148,148,148,148,287,-254,-255,-256,-257,-258,-259,-175,148,-268,148,-184,-186,-195,148,-197,148,148,-268,287,148,148,148,-301,-302,-303,148,-202,-203,-204,-205,-206,-207,-208,-209,-210,-211,-212,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,-269,148,148,148,-300,-304,-271,-272,148,-314,148,148,148,148,148,148,148,148,-270,148,-277,-278,-285,-286,-287,-288,-289,-290,-176,148,-294,148,148,148,-291,148,-279,148,-281,-283,-284,-296,148,-298,148,-276,148,-293,-280,-282,-295,-297,-299,-292,]),'DEC':([36,42,76,77,91,118,119,120,121,122,124,125,126,127,128,129,130,131,134,137,142,148,149,150,152,154,155,156,157,158,159,160,181,220,221,222,239,240,241,242,243,244,245,246,247,250,251,253,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,277,282,285,286,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,351,373,374,379,380,381,382,394,395,446,448,456,457,459,460,461,462,463,464,467,479,482,483,484,485,486,487,488,489,490,493,494,496,498,507,508,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,528,529,],[-5,-176,149,-6,149,-183,149,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,-268,149,149,149,149,149,149,149,288,-254,-255,-256,-257,-258,-259,-175,149,-268,149,-184,-186,-195,149,-197,149,149,-268,288,149,149,149,-301,-302,-303,149,-202,-203,-204,-205,-206,-207,-208,-209,-210,-211,-212,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,-269,149,149,149,-300,-304,-271,-272,149,-314,149,149,149,149,149,149,149,149,-270,149,-277,-278,-285,-286,-287,-288,-289,-290,-176,149,-294,149,149,149,-291,149,-279,149,-281,-283,-284,-296,149,-298,149,-276,149,-293,-280,-282,-295,-297,-299,-292,]),'SIZEOF':([36,76,77,89,91,92,118,119,120,121,122,124,125,126,127,128,129,130,134,137,142,148,149,150,152,155,156,157,158,159,160,199,200,203,205,206,209,210,220,222,231,237,239,240,241,242,243,244,245,250,251,253,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,277,282,285,286,289,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,337,341,347,351,354,360,374,379,380,381,382,431,433,438,446,448,456,457,459,460,461,462,463,464,468,479,482,483,484,485,486,487,488,489,491,493,494,496,498,507,508,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,528,529,],[-5,152,-6,206,152,206,-183,152,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,152,152,152,277,277,152,152,-254,-255,-256,-257,-258,-259,-154,-155,206,206,206,-156,-157,152,152,206,206,-184,-186,-195,152,-197,152,152,152,152,152,-301,-302,-303,152,-202,-203,-204,-205,-206,-207,-208,-209,-210,-211,-212,152,152,206,277,152,152,152,206,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,152,206,206,152,152,152,-300,-304,206,206,206,152,-314,152,152,152,152,152,152,152,152,206,152,-277,-278,-285,-286,-287,-288,-289,-290,206,152,-294,152,152,152,-291,152,-279,152,-281,-283,-284,-296,152,-298,152,-276,152,-293,-280,-282,-295,-297,-299,-292,]),'&':([36,42,76,77,91,118,119,120,121,122,124,125,126,127,128,129,130,131,134,137,142,145,147,148,149,150,151,152,154,155,156,157,158,159,160,163,164,165,166,167,168,169,170,171,172,181,193,194,195,196,197,198,201,202,204,207,208,220,221,222,239,240,241,242,243,244,245,246,247,250,251,253,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,276,277,279,280,281,282,283,284,285,286,287,288,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,335,336,351,368,373,374,375,379,380,381,382,387,388,394,395,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,432,446,448,455,456,457,458,459,460,461,462,463,464,465,466,467,469,471,479,482,483,484,485,486,487,488,489,490,493,494,496,498,507,508,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,528,529,],[-5,-176,155,-6,155,-183,155,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,-268,155,155,155,-243,-249,155,155,155,-239,155,-260,-254,-255,-256,-257,-258,-259,294,-223,-225,-228,-233,-236,-244,-246,-273,-274,-175,318,-128,-130,-133,-138,-141,-144,-148,-150,-158,-159,155,-268,155,-184,-186,-195,155,-197,155,155,-268,-260,155,155,155,-301,-302,-303,155,-202,-203,-204,-205,-206,-207,-208,-209,-210,-211,-212,155,155,-250,155,-251,-252,-243,155,-253,-247,155,155,-266,-267,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,-151,-152,155,-262,-269,155,-275,155,155,-300,-304,-264,-265,-271,-272,294,-224,-226,-227,-229,-230,-231,-232,-234,-235,-237,-238,-240,-241,-242,318,-129,-131,-132,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-160,155,-314,-263,155,155,-245,155,155,155,155,155,155,-261,-248,-270,-149,-153,155,-277,-278,-285,-286,-287,-288,-289,-290,-176,155,-294,155,155,155,-291,155,-279,155,-281,-283,-284,-296,155,-298,155,-276,155,-293,-280,-282,-295,-297,-299,-292,]),'+':([36,42,76,77,89,91,92,118,119,120,121,122,124,125,126,127,128,129,130,131,134,137,142,145,147,148,149,150,151,152,154,155,156,157,158,159,160,167,168,169,170,171,172,181,197,198,199,200,201,202,203,204,205,206,207,208,209,210,220,221,222,231,237,239,240,241,242,243,244,245,246,247,250,251,253,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,276,277,279,280,281,282,283,284,285,286,287,288,289,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,335,336,337,341,347,351,354,360,368,373,374,375,379,380,381,382,387,388,394,395,405,406,407,408,409,410,411,424,425,426,427,428,429,430,431,432,433,438,446,448,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,471,479,482,483,484,485,486,487,488,489,490,491,493,494,496,498,507,508,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,528,529,],[-5,-176,157,-6,199,157,199,-183,157,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,-268,157,157,157,-243,-249,157,157,157,-239,157,-260,-254,-255,-256,-257,-258,-259,303,-236,-244,-246,-273,-274,-175,327,-141,-154,-155,-144,-148,199,-150,199,199,-158,-159,-156,-157,157,-268,157,199,199,-184,-186,-195,157,-197,157,157,-268,-260,157,157,157,-301,-302,-303,157,-202,-203,-204,-205,-206,-207,-208,-209,-210,-211,-212,157,157,199,-250,157,-251,-252,-243,157,-253,-247,157,157,-266,-267,199,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,-151,-152,199,199,199,157,199,199,-262,-269,157,-275,157,157,-300,-304,-264,-265,-271,-272,303,303,-237,-238,-240,-241,-242,327,327,-142,-143,-145,-146,-147,199,-160,199,199,157,-314,-263,157,157,-245,157,157,157,157,157,157,-261,-248,-270,199,-149,-153,157,-277,-278,-285,-286,-287,-288,-289,-290,-176,199,157,-294,157,157,157,-291,157,-279,157,-281,-283,-284,-296,157,-298,157,-276,157,-293,-280,-282,-295,-297,-299,-292,]),'-':([36,42,76,77,89,91,92,118,119,120,121,122,124,125,126,127,128,129,130,131,134,137,142,145,147,148,149,150,151,152,154,155,156,157,158,159,160,167,168,169,170,171,172,181,197,198,199,200,201,202,203,204,205,206,207,208,209,210,220,221,222,231,237,239,240,241,242,243,244,245,246,247,250,251,253,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,276,277,279,280,281,282,283,284,285,286,287,288,289,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,335,336,337,341,347,351,354,360,368,373,374,375,379,380,381,382,387,388,394,395,405,406,407,408,409,410,411,424,425,426,427,428,429,430,431,432,433,438,446,448,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,471,479,482,483,484,485,486,487,488,489,490,491,493,494,496,498,507,508,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,528,529,],[-5,-176,158,-6,200,158,200,-183,158,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,-268,158,158,158,-243,-249,158,158,158,-239,158,-260,-254,-255,-256,-257,-258,-259,304,-236,-244,-246,-273,-274,-175,328,-141,-154,-155,-144,-148,200,-150,200,200,-158,-159,-156,-157,158,-268,158,200,200,-184,-186,-195,158,-197,158,158,-268,-260,158,158,158,-301,-302,-303,158,-202,-203,-204,-205,-206,-207,-208,-209,-210,-211,-212,158,158,200,-250,158,-251,-252,-243,158,-253,-247,158,158,-266,-267,200,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,-151,-152,200,200,200,158,200,200,-262,-269,158,-275,158,158,-300,-304,-264,-265,-271,-272,304,304,-237,-238,-240,-241,-242,328,328,-142,-143,-145,-146,-147,200,-160,200,200,158,-314,-263,158,158,-245,158,158,158,158,158,158,-261,-248,-270,200,-149,-153,158,-277,-278,-285,-286,-287,-288,-289,-290,-176,200,158,-294,158,158,158,-291,158,-279,158,-281,-283,-284,-296,158,-298,158,-276,158,-293,-280,-282,-295,-297,-299,-292,]),'~':([36,76,77,89,91,92,118,119,120,121,122,124,125,126,127,128,129,130,134,137,142,148,149,150,152,155,156,157,158,159,160,199,200,203,205,206,209,210,220,222,231,237,239,240,241,242,243,244,245,250,251,253,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,277,282,285,286,289,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,337,341,347,351,354,360,374,379,380,381,382,431,433,438,446,448,456,457,459,460,461,462,463,464,468,479,482,483,484,485,486,487,488,489,491,493,494,496,498,507,508,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,528,529,],[-5,159,-6,209,159,209,-183,159,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,159,159,159,159,159,159,159,-254,-255,-256,-257,-258,-259,-154,-155,209,209,209,-156,-157,159,159,209,209,-184,-186,-195,159,-197,159,159,159,159,159,-301,-302,-303,159,-202,-203,-204,-205,-206,-207,-208,-209,-210,-211,-212,159,159,209,159,159,159,159,209,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,159,209,209,159,159,159,-300,-304,209,209,209,159,-314,159,159,159,159,159,159,159,159,209,159,-277,-278,-285,-286,-287,-288,-289,-290,209,159,-294,159,159,159,-291,159,-279,159,-281,-283,-284,-296,159,-298,159,-276,159,-293,-280,-282,-295,-297,-299,-292,]),'!':([36,76,77,89,91,92,118,119,120,121,122,124,125,126,127,128,129,130,134,137,142,148,149,150,152,155,156,157,158,159,160,199,200,203,205,206,209,210,220,222,231,237,239,240,241,242,243,244,245,250,251,253,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,277,282,285,286,289,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,337,341,347,351,354,360,374,379,380,381,382,431,433,438,446,448,456,457,459,460,461,462,463,464,468,479,482,483,484,485,486,487,488,489,491,493,494,496,498,507,508,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,528,529,],[-5,160,-6,210,160,210,-183,160,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,160,160,160,160,160,160,160,-254,-255,-256,-257,-258,-259,-154,-155,210,210,210,-156,-157,160,160,210,210,-184,-186,-195,160,-197,160,160,160,160,160,-301,-302,-303,160,-202,-203,-204,-205,-206,-207,-208,-209,-210,-211,-212,160,160,210,160,160,160,160,210,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,160,210,210,160,160,160,-300,-304,210,210,210,160,-314,160,160,160,160,160,160,160,160,210,160,-277,-278,-285,-286,-287,-288,-289,-290,210,160,-294,160,160,160,-291,160,-279,160,-281,-283,-284,-296,160,-298,160,-276,160,-293,-280,-282,-295,-297,-299,-292,]),'CONSTANCE':([36,76,77,89,91,92,118,119,120,121,122,124,125,126,127,128,129,130,134,137,142,150,152,155,156,157,158,159,160,199,200,203,205,206,209,210,220,222,231,237,239,240,241,242,243,244,245,250,251,253,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,282,285,286,289,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,337,341,347,351,354,360,374,379,380,381,382,431,433,438,446,448,456,457,459,460,461,462,463,464,468,479,482,483,484,485,486,487,488,489,491,493,494,496,498,507,508,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,528,529,],[-5,171,-6,207,171,207,-183,171,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,171,171,171,171,171,-254,-255,-256,-257,-258,-259,-154,-155,207,207,207,-156,-157,171,171,207,207,-184,-186,-195,171,-197,171,171,171,171,171,-301,-302,-303,171,-202,-203,-204,-205,-206,-207,-208,-209,-210,-211,-212,171,171,207,171,171,171,207,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,171,207,207,171,171,171,-300,-304,207,207,207,171,-314,171,171,171,171,171,171,171,171,207,171,-277,-278,-285,-286,-287,-288,-289,-290,207,171,-294,171,171,171,-291,171,-279,171,-281,-283,-284,-296,171,-298,171,-276,171,-293,-280,-282,-295,-297,-299,-292,]),'STRING_LITERAL':([36,76,77,89,91,92,118,119,120,121,122,124,125,126,127,128,129,130,134,137,142,150,152,155,156,157,158,159,160,199,200,203,205,206,209,210,220,222,231,237,239,240,241,242,243,244,245,250,251,253,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,282,285,286,289,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,337,341,347,351,354,360,374,379,380,381,382,431,433,438,446,448,456,457,459,460,461,462,463,464,468,479,482,483,484,485,486,487,488,489,491,493,494,496,498,507,508,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,528,529,],[-5,172,-6,208,172,208,-183,172,-185,-187,-188,-196,-189,-190,-191,-192,-193,-194,172,172,172,172,172,-254,-255,-256,-257,-258,-259,-154,-155,208,208,208,-156,-157,172,172,208,208,-184,-186,-195,172,-197,172,172,172,172,172,-301,-302,-303,172,-202,-203,-204,-205,-206,-207,-208,-209,-210,-211,-212,172,172,208,172,172,172,208,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,172,208,208,172,172,172,-300,-304,208,208,208,172,-314,172,172,172,172,172,172,172,172,208,172,-277,-278,-285,-286,-287,-288,-289,-290,208,172,-294,172,172,172,-291,172,-279,172,-281,-283,-284,-296,172,-298,172,-276,172,-293,-280,-282,-295,-297,-299,-292,]),'CASE':([36,77,118,124,125,126,127,128,129,130,239,241,243,255,256,257,381,382,459,482,483,484,485,486,487,488,489,493,494,508,511,512,513,514,515,517,519,521,523,524,525,526,527,528,529,],[-5,-6,-183,-196,-189,-190,-191,-192,-193,-194,-184,-195,-197,-301,-302,-303,-300,-304,491,-277,-278,-285,-286,-287,-288,-289,-290,491,-294,-291,-279,491,-281,-283,-284,-296,-298,-276,-293,-280,-282,-295,-297,-299,-292,]),'DEFAULT':([36,77,118,124,125,126,127,128,129,130,239,241,243,255,256,257,381,382,459,482,483,484,485,486,487,488,489,493,494,508,511,512,513,514,515,517,519,521,523,524,525,526,527,528,529,],[-5,-6,-183,-196,-189,-190,-191,-192,-193,-194,-184,-195,-197,-301,-302,-303,-300,-304,492,-277,-278,-285,-286,-287,-288,-289,-290,492,-294,-291,-279,492,-281,-283,-284,-296,-298,-276,-293,-280,-282,-295,-297,-299,-292,]),'.':([42,131,147,154,181,220,221,246,247,287,288,352,353,368,373,387,388,389,390,394,395,446,449,451,455,465,467,480,490,],[-176,-268,274,290,-175,355,-268,-268,290,-266,-267,355,-315,-262,-269,-264,-265,290,-268,-271,-272,355,-316,-318,-263,-261,-270,-317,-176,]),'PTR':([42,131,147,154,181,221,246,247,287,288,368,373,387,388,389,390,394,395,455,465,467,490,],[-176,-268,275,291,-175,-268,-268,291,-266,-267,-262,-269,-264,-265,291,-268,-271,-272,-263,-261,-270,-176,]),'AO_MUL':([42,131,145,147,154,169,170,171,172,181,221,246,247,276,279,280,281,283,284,287,288,368,373,375,387,388,394,395,455,458,465,466,467,490,],[-176,-268,261,-249,-260,-244,-246,-273,-274,-175,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-262,-269,-275,-264,-265,-271,-272,-263,-245,-261,-248,-270,-176,]),'AO_DIV':([42,131,145,147,154,169,170,171,172,181,221,246,247,276,279,280,281,283,284,287,288,368,373,375,387,388,394,395,455,458,465,466,467,490,],[-176,-268,262,-249,-260,-244,-246,-273,-274,-175,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-262,-269,-275,-264,-265,-271,-272,-263,-245,-261,-248,-270,-176,]),'AO_MOD':([42,131,145,147,154,169,170,171,172,181,221,246,247,276,279,280,281,283,284,287,288,368,373,375,387,388,394,395,455,458,465,466,467,490,],[-176,-268,263,-249,-260,-244,-246,-273,-274,-175,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-262,-269,-275,-264,-265,-271,-272,-263,-245,-261,-248,-270,-176,]),'AO_PLUS':([42,131,145,147,154,169,170,171,172,181,221,246,247,276,279,280,281,283,284,287,288,368,373,375,387,388,394,395,455,458,465,466,467,490,],[-176,-268,264,-249,-260,-244,-246,-273,-274,-175,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-262,-269,-275,-264,-265,-271,-272,-263,-245,-261,-248,-270,-176,]),'AO_SUB':([42,131,145,147,154,169,170,171,172,181,221,246,247,276,279,280,281,283,284,287,288,368,373,375,387,388,394,395,455,458,465,466,467,490,],[-176,-268,265,-249,-260,-244,-246,-273,-274,-175,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-262,-269,-275,-264,-265,-271,-272,-263,-245,-261,-248,-270,-176,]),'AO_SL':([42,131,145,147,154,169,170,171,172,181,221,246,247,276,279,280,281,283,284,287,288,368,373,375,387,388,394,395,455,458,465,466,467,490,],[-176,-268,266,-249,-260,-244,-246,-273,-274,-175,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-262,-269,-275,-264,-265,-271,-272,-263,-245,-261,-248,-270,-176,]),'AO_SR':([42,131,145,147,154,169,170,171,172,181,221,246,247,276,279,280,281,283,284,287,288,368,373,375,387,388,394,395,455,458,465,466,467,490,],[-176,-268,267,-249,-260,-244,-246,-273,-274,-175,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-262,-269,-275,-264,-265,-271,-272,-263,-245,-261,-248,-270,-176,]),'AO_AND':([42,131,145,147,154,169,170,171,172,181,221,246,247,276,279,280,281,283,284,287,288,368,373,375,387,388,394,395,455,458,465,466,467,490,],[-176,-268,268,-249,-260,-244,-246,-273,-274,-175,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-262,-269,-275,-264,-265,-271,-272,-263,-245,-261,-248,-270,-176,]),'AO_XOR':([42,131,145,147,154,169,170,171,172,181,221,246,247,276,279,280,281,283,284,287,288,368,373,375,387,388,394,395,455,458,465,466,467,490,],[-176,-268,269,-249,-260,-244,-246,-273,-274,-175,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-262,-269,-275,-264,-265,-271,-272,-263,-245,-261,-248,-270,-176,]),'AO_OR':([42,131,145,147,154,169,170,171,172,181,221,246,247,276,279,280,281,283,284,287,288,368,373,375,387,388,394,395,455,458,465,466,467,490,],[-176,-268,270,-249,-260,-244,-246,-273,-274,-175,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-262,-269,-275,-264,-265,-271,-272,-263,-245,-261,-248,-270,-176,]),'/':([42,131,145,147,151,154,168,169,170,171,172,181,198,201,202,204,207,208,221,246,247,276,279,280,281,283,284,287,288,335,336,368,373,375,387,388,394,395,407,408,409,410,411,426,427,428,429,430,432,455,458,465,466,467,469,471,490,],[-176,-268,-243,-249,-239,-260,306,-244,-246,-273,-274,-175,330,-144,-148,-150,-158,-159,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-151,-152,-262,-269,-275,-264,-265,-271,-272,306,306,-240,-241,-242,330,330,-145,-146,-147,-160,-263,-245,-261,-248,-270,-149,-153,-176,]),'%':([42,131,145,147,151,154,168,169,170,171,172,181,198,201,202,204,207,208,221,246,247,276,279,280,281,283,284,287,288,335,336,368,373,375,387,388,394,395,407,408,409,410,411,426,427,428,429,430,432,455,458,465,466,467,469,471,490,],[-176,-268,-243,-249,-239,-260,307,-244,-246,-273,-274,-175,331,-144,-148,-150,-158,-159,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-151,-152,-262,-269,-275,-264,-265,-271,-272,307,307,-240,-241,-242,331,331,-145,-146,-147,-160,-263,-245,-261,-248,-270,-149,-153,-176,]),'SHIFT_LEFT':([42,131,145,147,151,154,166,167,168,169,170,171,172,181,196,197,198,201,202,204,207,208,221,246,247,276,279,280,281,283,284,287,288,335,336,368,373,375,387,388,394,395,401,402,403,404,405,406,407,408,409,410,411,420,421,422,423,424,425,426,427,428,429,430,432,455,458,465,466,467,469,471,490,],[-176,-268,-243,-249,-239,-260,301,-233,-236,-244,-246,-273,-274,-175,325,-138,-141,-144,-148,-150,-158,-159,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-151,-152,-262,-269,-275,-264,-265,-271,-272,301,301,301,301,-234,-235,-237,-238,-240,-241,-242,325,325,325,325,-139,-140,-142,-143,-145,-146,-147,-160,-263,-245,-261,-248,-270,-149,-153,-176,]),'SHIFT_RIGHT':([42,131,145,147,151,154,166,167,168,169,170,171,172,181,196,197,198,201,202,204,207,208,221,246,247,276,279,280,281,283,284,287,288,335,336,368,373,375,387,388,394,395,401,402,403,404,405,406,407,408,409,410,411,420,421,422,423,424,425,426,427,428,429,430,432,455,458,465,466,467,469,471,490,],[-176,-268,-243,-249,-239,-260,302,-233,-236,-244,-246,-273,-274,-175,326,-138,-141,-144,-148,-150,-158,-159,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-151,-152,-262,-269,-275,-264,-265,-271,-272,302,302,302,302,-234,-235,-237,-238,-240,-241,-242,326,326,326,326,-139,-140,-142,-143,-145,-146,-147,-160,-263,-245,-261,-248,-270,-149,-153,-176,]),'<':([42,131,145,147,151,154,165,166,167,168,169,170,171,172,181,195,196,197,198,201,202,204,207,208,221,246,247,276,279,280,281,283,284,287,288,335,336,368,373,375,387,388,394,395,399,400,401,402,403,404,405,406,407,408,409,410,411,418,419,420,421,422,423,424,425,426,427,428,429,430,432,455,458,465,466,467,469,471,490,],[-176,-268,-243,-249,-239,-260,297,-228,-233,-236,-244,-246,-273,-274,-175,321,-133,-138,-141,-144,-148,-150,-158,-159,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-151,-152,-262,-269,-275,-264,-265,-271,-272,297,297,-229,-230,-231,-232,-234,-235,-237,-238,-240,-241,-242,321,321,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-160,-263,-245,-261,-248,-270,-149,-153,-176,]),'>':([42,131,145,147,151,154,165,166,167,168,169,170,171,172,181,195,196,197,198,201,202,204,207,208,221,246,247,276,279,280,281,283,284,287,288,335,336,368,373,375,387,388,394,395,399,400,401,402,403,404,405,406,407,408,409,410,411,418,419,420,421,422,423,424,425,426,427,428,429,430,432,455,458,465,466,467,469,471,490,],[-176,-268,-243,-249,-239,-260,298,-228,-233,-236,-244,-246,-273,-274,-175,322,-133,-138,-141,-144,-148,-150,-158,-159,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-151,-152,-262,-269,-275,-264,-265,-271,-272,298,298,-229,-230,-231,-232,-234,-235,-237,-238,-240,-241,-242,322,322,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-160,-263,-245,-261,-248,-270,-149,-153,-176,]),'LE':([42,131,145,147,151,154,165,166,167,168,169,170,171,172,181,195,196,197,198,201,202,204,207,208,221,246,247,276,279,280,281,283,284,287,288,335,336,368,373,375,387,388,394,395,399,400,401,402,403,404,405,406,407,408,409,410,411,418,419,420,421,422,423,424,425,426,427,428,429,430,432,455,458,465,466,467,469,471,490,],[-176,-268,-243,-249,-239,-260,299,-228,-233,-236,-244,-246,-273,-274,-175,323,-133,-138,-141,-144,-148,-150,-158,-159,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-151,-152,-262,-269,-275,-264,-265,-271,-272,299,299,-229,-230,-231,-232,-234,-235,-237,-238,-240,-241,-242,323,323,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-160,-263,-245,-261,-248,-270,-149,-153,-176,]),'GE':([42,131,145,147,151,154,165,166,167,168,169,170,171,172,181,195,196,197,198,201,202,204,207,208,221,246,247,276,279,280,281,283,284,287,288,335,336,368,373,375,387,388,394,395,399,400,401,402,403,404,405,406,407,408,409,410,411,418,419,420,421,422,423,424,425,426,427,428,429,430,432,455,458,465,466,467,469,471,490,],[-176,-268,-243,-249,-239,-260,300,-228,-233,-236,-244,-246,-273,-274,-175,324,-133,-138,-141,-144,-148,-150,-158,-159,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-151,-152,-262,-269,-275,-264,-265,-271,-272,300,300,-229,-230,-231,-232,-234,-235,-237,-238,-240,-241,-242,324,324,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-160,-263,-245,-261,-248,-270,-149,-153,-176,]),'EQUAL':([42,131,145,147,151,154,164,165,166,167,168,169,170,171,172,181,194,195,196,197,198,201,202,204,207,208,221,246,247,276,279,280,281,283,284,287,288,335,336,368,373,375,387,388,394,395,398,399,400,401,402,403,404,405,406,407,408,409,410,411,417,418,419,420,421,422,423,424,425,426,427,428,429,430,432,455,458,465,466,467,469,471,490,],[-176,-268,-243,-249,-239,-260,295,-225,-228,-233,-236,-244,-246,-273,-274,-175,319,-130,-133,-138,-141,-144,-148,-150,-158,-159,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-151,-152,-262,-269,-275,-264,-265,-271,-272,295,-226,-227,-229,-230,-231,-232,-234,-235,-237,-238,-240,-241,-242,319,-131,-132,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-160,-263,-245,-261,-248,-270,-149,-153,-176,]),'NE':([42,131,145,147,151,154,164,165,166,167,168,169,170,171,172,181,194,195,196,197,198,201,202,204,207,208,221,246,247,276,279,280,281,283,284,287,288,335,336,368,373,375,387,388,394,395,398,399,400,401,402,403,404,405,406,407,408,409,410,411,417,418,419,420,421,422,423,424,425,426,427,428,429,430,432,455,458,465,466,467,469,471,490,],[-176,-268,-243,-249,-239,-260,296,-225,-228,-233,-236,-244,-246,-273,-274,-175,320,-130,-133,-138,-141,-144,-148,-150,-158,-159,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-151,-152,-262,-269,-275,-264,-265,-271,-272,296,-226,-227,-229,-230,-231,-232,-234,-235,-237,-238,-240,-241,-242,320,-131,-132,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-160,-263,-245,-261,-248,-270,-149,-153,-176,]),'^':([42,131,145,147,151,154,162,163,164,165,166,167,168,169,170,171,172,181,192,193,194,195,196,197,198,201,202,204,207,208,221,246,247,276,279,280,281,283,284,287,288,335,336,368,373,375,387,388,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,432,455,458,465,466,467,469,471,490,],[-176,-268,-243,-249,-239,-260,293,-221,-223,-225,-228,-233,-236,-244,-246,-273,-274,-175,317,-126,-128,-130,-133,-138,-141,-144,-148,-150,-158,-159,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-151,-152,-262,-269,-275,-264,-265,-271,-272,293,-222,-224,-226,-227,-229,-230,-231,-232,-234,-235,-237,-238,-240,-241,-242,317,-127,-129,-131,-132,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-160,-263,-245,-261,-248,-270,-149,-153,-176,]),'|':([42,131,145,147,151,154,161,162,163,164,165,166,167,168,169,170,171,172,181,191,192,193,194,195,196,197,198,201,202,204,207,208,221,246,247,276,279,280,281,283,284,287,288,335,336,368,373,375,387,388,392,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,432,455,458,465,466,467,469,471,490,],[-176,-268,-243,-249,-239,-260,292,-219,-221,-223,-225,-228,-233,-236,-244,-246,-273,-274,-175,316,-124,-126,-128,-130,-133,-138,-141,-144,-148,-150,-158,-159,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-151,-152,-262,-269,-275,-264,-265,292,-271,-272,-220,-222,-224,-226,-227,-229,-230,-231,-232,-234,-235,-237,-238,-240,-241,-242,316,-125,-127,-129,-131,-132,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-160,-263,-245,-261,-248,-270,-149,-153,-176,]),'AND':([42,131,145,147,151,153,154,161,162,163,164,165,166,167,168,169,170,171,172,181,190,191,192,193,194,195,196,197,198,201,202,204,207,208,221,246,247,276,279,280,281,283,284,287,288,335,336,368,373,375,385,387,388,392,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,432,455,458,465,466,467,469,471,490,],[-176,-268,-243,-249,-239,286,-260,-217,-219,-221,-223,-225,-228,-233,-236,-244,-246,-273,-274,-175,315,-122,-124,-126,-128,-130,-133,-138,-141,-144,-148,-150,-158,-159,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-151,-152,-262,-269,-275,286,-264,-265,-218,-271,-272,-220,-222,-224,-226,-227,-229,-230,-231,-232,-234,-235,-237,-238,-240,-241,-242,315,-123,-125,-127,-129,-131,-132,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-160,-263,-245,-261,-248,-270,-149,-153,-176,]),'?':([42,131,145,146,147,151,153,154,161,162,163,164,165,166,167,168,169,170,171,172,181,189,190,191,192,193,194,195,196,197,198,201,202,204,207,208,221,246,247,276,279,280,281,283,284,287,288,335,336,368,373,375,385,387,388,392,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,432,455,458,465,466,467,469,471,490,],[-176,-268,-243,271,-249,-239,-215,-260,-217,-219,-221,-223,-225,-228,-233,-236,-244,-246,-273,-274,-175,313,-120,-122,-124,-126,-128,-130,-133,-138,-141,-144,-148,-150,-158,-159,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-151,-152,-262,-269,-275,-216,-264,-265,-218,-271,-272,-220,-222,-224,-226,-227,-229,-230,-231,-232,-234,-235,-237,-238,-240,-241,-242,-121,-123,-125,-127,-129,-131,-132,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-160,-263,-245,-261,-248,-270,-149,-153,-176,]),'OR':([42,131,145,146,147,151,153,154,161,162,163,164,165,166,167,168,169,170,171,172,181,189,190,191,192,193,194,195,196,197,198,201,202,204,207,208,221,246,247,276,279,280,281,283,284,287,288,335,336,368,373,375,385,387,388,392,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,432,455,458,465,466,467,469,471,490,],[-176,-268,-243,272,-249,-239,-215,-260,-217,-219,-221,-223,-225,-228,-233,-236,-244,-246,-273,-274,-175,314,-120,-122,-124,-126,-128,-130,-133,-138,-141,-144,-148,-150,-158,-159,-268,-268,-260,-250,-251,-252,-243,-253,-247,-266,-267,-151,-152,-262,-269,-275,-216,-264,-265,-218,-271,-272,-220,-222,-224,-226,-227,-229,-230,-231,-232,-234,-235,-237,-238,-240,-241,-242,-121,-123,-125,-127,-129,-131,-132,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-160,-263,-245,-261,-248,-270,-149,-153,-176,]),']':([89,186,188,189,190,191,192,193,194,195,196,197,198,201,202,204,207,208,223,334,335,336,347,386,393,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,432,444,450,469,470,471,473,501,],[187,312,-117,-118,-120,-122,-124,-126,-128,-130,-133,-138,-141,-144,-148,-150,-158,-159,356,-161,-151,-152,443,465,467,-121,-123,-125,-127,-129,-131,-132,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-160,476,480,-149,-162,-153,504,-119,]),'ELLIPSIS':([90,340,346,439,472,475,505,],[216,216,216,216,216,216,216,]),'ELSE':([118,124,125,126,127,128,129,130,239,241,243,255,256,257,381,382,482,483,484,485,486,487,488,489,494,508,511,517,519,521,523,524,526,527,528,529,],[-183,-196,-189,-190,-191,-192,-193,-194,-184,-195,-197,-301,-302,-303,-300,-304,507,-278,-285,-286,-287,-288,-289,-290,-294,-291,-279,-296,-298,-276,-293,-280,-295,-297,-299,-292,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start_node':([0,],[1,]),'global_declaration':([0,1,],[2,33,]),'function_definition':([0,1,],[3,3,]),'declaration':([0,1,76,119,253,493,512,],[4,4,121,121,380,514,514,]),'declaration_specifiers':([0,1,8,76,90,119,253,340,346,439,472,475,493,505,512,],[5,5,52,123,217,123,123,217,217,217,217,217,123,217,123,]),'storage_class_specifier':([0,1,7,8,51,76,90,119,253,340,346,439,472,475,493,505,512,],[6,6,50,6,50,6,6,6,6,6,6,6,6,6,6,6,6,]),'type_specifier':([0,1,6,8,48,68,76,90,106,107,111,119,134,203,222,225,253,282,285,337,340,346,439,472,475,493,505,512,],[7,7,47,7,47,110,7,7,110,110,110,7,110,110,110,110,7,110,110,110,7,7,7,7,7,7,7,7,]),'type_qualifier':([0,1,6,7,8,38,47,48,50,51,68,76,79,90,94,106,107,110,111,119,134,203,222,225,233,253,282,285,337,340,346,439,472,475,493,505,512,],[8,8,48,51,8,81,94,48,94,51,111,8,179,8,94,111,111,233,111,8,111,111,111,111,233,8,111,111,111,8,8,8,8,8,8,8,8,]),'struct_or_union_specifier':([0,1,6,8,48,68,76,90,106,107,111,119,134,203,222,225,253,282,285,337,340,346,439,472,475,493,505,512,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'enum_specifier':([0,1,6,8,48,68,76,90,106,107,111,119,134,203,222,225,253,282,285,337,340,346,439,472,475,493,505,512,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'struct_or_union':([0,1,6,8,48,68,76,90,106,107,111,119,134,203,222,225,253,282,285,337,340,346,439,472,475,493,505,512,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'pointer':([5,38,39,74,78,79,82,109,123,175,183,217,308,310,346,359,439,475,505,],[34,80,86,86,174,178,86,174,174,86,86,344,86,86,441,174,441,441,441,]),'direct_function_declarator':([5,34,39,74,78,82,86,109,123,174,175,183,217,308,310,344,346,359,439,441,475,505,],[35,72,83,83,176,83,176,176,176,176,83,83,176,83,83,176,83,176,83,176,83,83,]),'init_declarator_list':([5,123,],[37,37,]),'identifier':([5,29,30,34,39,69,70,74,76,78,82,86,91,109,116,119,123,134,137,142,148,149,150,152,174,175,183,217,220,222,236,242,244,245,250,251,253,259,271,272,277,278,282,285,286,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,344,346,351,359,367,374,379,380,439,441,446,456,457,459,460,461,462,463,464,475,479,493,496,498,505,507,510,512,518,520,522,],[40,67,71,40,84,112,115,84,131,177,84,177,221,177,115,131,177,246,131,221,221,221,221,221,177,309,309,177,221,246,115,221,221,221,221,221,221,221,221,221,221,390,246,246,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,309,309,177,309,221,177,115,221,221,221,309,177,221,221,131,221,131,221,221,221,221,309,221,221,131,131,309,131,131,221,131,131,131,]),'init_declarator':([5,78,123,],[41,173,41,]),'declarator':([5,39,74,78,82,109,123,175,183,217,308,310,346,359,439,475,505,],[43,85,85,43,85,230,43,85,85,342,85,85,85,230,85,85,85,]),'direct_declarator':([5,34,39,74,78,82,86,109,123,174,175,183,217,308,310,344,346,359,439,441,475,505,],[44,73,44,44,44,44,73,44,44,73,44,44,44,44,44,73,44,44,44,73,44,44,]),'direct_declarator_forlist':([5,34,39,74,78,82,86,109,123,174,175,183,217,308,310,344,346,359,439,441,475,505,],[45,45,87,87,45,87,184,45,45,45,87,87,45,87,87,45,87,45,87,184,87,87,]),'declaration_specifiers_no_s':([6,48,],[46,95,]),'declaration_specifiers_no_ts':([7,51,],[49,97,]),'compound_statement':([35,72,76,119,137,457,460,496,498,507,510,518,520,522,],[75,117,126,126,126,126,126,126,126,126,126,126,126,126,]),'type_qualifier_list':([38,],[79,]),'parameter_type_list_definition':([40,84,90,177,217,309,344,346,439,441,475,505,],[88,88,212,88,348,88,348,442,442,348,442,442,]),'declaration_specifiers_no_ts_s':([47,50,94,],[93,96,224,]),'struct_declaration_list':([68,106,],[107,225,]),'struct_declaration':([68,106,107,225,],[108,108,227,227,]),'specifier_qualifier_list':([68,106,107,111,134,203,222,225,282,285,337,],[109,109,109,234,248,332,248,109,248,391,434,]),'enumerator_list':([70,116,],[113,238,]),'enumerator':([70,116,236,367,],[114,114,364,364,]),'block_item_list':([76,],[119,]),'block_item':([76,119,],[120,240,]),'statement':([76,119,137,457,460,496,498,507,510,518,520,522,],[122,122,252,482,494,517,519,521,523,527,528,529,]),'labeled_statement':([76,119,137,457,460,496,498,507,510,518,520,522,],[125,125,125,125,125,125,125,125,125,125,125,125,]),'expression_statement':([76,119,137,253,379,380,457,459,460,493,496,498,507,510,512,518,520,522,],[127,127,127,379,462,463,127,486,127,486,127,127,127,127,486,127,127,127,]),'selection_statement':([76,119,137,457,459,460,493,496,498,507,510,512,518,520,522,],[128,128,128,128,487,128,487,128,128,128,128,487,128,128,128,]),'iteration_statement':([76,119,137,457,459,460,493,496,498,507,510,512,518,520,522,],[129,129,129,129,488,129,488,129,129,129,129,488,129,129,129,]),'jump_statement':([76,119,137,457,459,460,493,496,498,507,510,512,518,520,522,],[130,130,130,130,489,130,489,130,130,130,130,489,130,130,130,]),'expression_variable':([76,119,134,137,142,222,245,250,251,253,271,282,285,379,380,457,459,460,461,462,463,493,496,498,507,510,512,518,520,522,],[132,132,249,132,258,249,372,376,377,132,384,249,249,132,132,132,132,132,495,497,499,132,132,132,132,132,132,132,132,132,]),'assignment_expression':([76,91,119,134,137,142,220,222,242,244,245,250,251,253,259,271,282,285,351,379,380,446,456,457,459,460,461,462,463,479,493,496,498,507,510,512,518,520,522,],[143,219,143,143,143,143,219,143,370,371,143,143,143,143,383,143,143,143,219,143,143,219,481,143,143,143,143,143,143,219,143,143,143,143,143,143,143,143,143,]),'conditional_expression_v':([76,91,119,134,137,142,220,222,242,244,245,250,251,253,259,271,282,285,351,379,380,446,456,457,459,460,461,462,463,464,479,493,496,498,507,510,512,518,520,522,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,500,144,144,144,144,144,144,144,144,144,144,]),'unary_expression_v':([76,91,119,134,137,142,148,149,150,152,220,222,242,244,245,250,251,253,259,271,272,277,282,285,286,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,351,374,379,380,446,456,457,459,460,461,462,463,464,479,493,496,498,507,510,512,518,520,522,],[145,145,145,145,145,145,276,279,281,283,145,145,145,145,145,145,145,145,145,145,281,283,145,145,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,145,281,145,145,145,145,145,145,145,145,145,145,281,145,145,145,145,145,145,145,145,145,145,]),'logical_or_expression_v':([76,91,119,134,137,142,220,222,242,244,245,250,251,253,259,271,282,285,351,379,380,446,456,457,459,460,461,462,463,464,479,493,496,498,507,510,512,518,520,522,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'postfix_expression_v':([76,91,119,134,137,142,148,149,150,152,220,222,242,244,245,250,251,253,259,271,272,277,282,285,286,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,351,374,379,380,446,456,457,459,460,461,462,463,464,479,493,496,498,507,510,512,518,520,522,],[147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,]),'unary_operator_v':([76,91,119,134,137,142,148,149,150,152,220,222,242,244,245,250,251,253,259,271,272,277,282,285,286,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,351,374,379,380,446,456,457,459,460,461,462,463,464,479,493,496,498,507,510,512,518,520,522,],[150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'cast_expression_v':([76,91,119,134,137,142,150,220,222,242,244,245,250,251,253,259,271,272,282,285,286,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,351,374,379,380,446,456,457,459,460,461,462,463,464,479,493,496,498,507,510,512,518,520,522,],[151,151,151,151,151,151,280,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,409,410,411,151,458,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'logical_and_expression_v':([76,91,119,134,137,142,220,222,242,244,245,250,251,253,259,271,272,282,285,351,379,380,446,456,457,459,460,461,462,463,464,479,493,496,498,507,510,512,518,520,522,],[153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,385,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,]),'postfix_expression_v_no_func':([76,91,119,134,137,142,148,149,150,152,220,222,242,244,245,250,251,253,259,271,272,277,278,282,285,286,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,351,374,379,380,446,456,457,459,460,461,462,463,464,479,493,496,498,507,510,512,518,520,522,],[154,154,154,247,154,154,154,154,154,154,154,247,154,154,154,154,154,154,154,154,154,154,389,247,247,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'inclusive_or_expression_v':([76,91,119,134,137,142,220,222,242,244,245,250,251,253,259,271,272,282,285,286,351,379,380,446,456,457,459,460,461,462,463,464,479,493,496,498,507,510,512,518,520,522,],[161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,392,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,]),'exclusive_or_expression_v':([76,91,119,134,137,142,220,222,242,244,245,250,251,253,259,271,272,282,285,286,292,351,379,380,446,456,457,459,460,461,462,463,464,479,493,496,498,507,510,512,518,520,522,],[162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,396,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,]),'and_expression_v':([76,91,119,134,137,142,220,222,242,244,245,250,251,253,259,271,272,282,285,286,292,293,351,379,380,446,456,457,459,460,461,462,463,464,479,493,496,498,507,510,512,518,520,522,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,397,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'equality_expression_v':([76,91,119,134,137,142,220,222,242,244,245,250,251,253,259,271,272,282,285,286,292,293,294,351,379,380,446,456,457,459,460,461,462,463,464,479,493,496,498,507,510,512,518,520,522,],[164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,398,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,]),'relational_expression_v':([76,91,119,134,137,142,220,222,242,244,245,250,251,253,259,271,272,282,285,286,292,293,294,295,296,351,379,380,446,456,457,459,460,461,462,463,464,479,493,496,498,507,510,512,518,520,522,],[165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,399,400,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,]),'shift_expression_v':([76,91,119,134,137,142,220,222,242,244,245,250,251,253,259,271,272,282,285,286,292,293,294,295,296,297,298,299,300,351,379,380,446,456,457,459,460,461,462,463,464,479,493,496,498,507,510,512,518,520,522,],[166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,401,402,403,404,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,]),'additive_expression_v':([76,91,119,134,137,142,220,222,242,244,245,250,251,253,259,271,272,282,285,286,292,293,294,295,296,297,298,299,300,301,302,351,379,380,446,456,457,459,460,461,462,463,464,479,493,496,498,507,510,512,518,520,522,],[167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,405,406,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'multiplicative_expression_v':([76,91,119,134,137,142,220,222,242,244,245,250,251,253,259,271,272,282,285,286,292,293,294,295,296,297,298,299,300,301,302,303,304,351,379,380,446,456,457,459,460,461,462,463,464,479,493,496,498,507,510,512,518,520,522,],[168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,407,408,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'unary_expression_v_constance':([76,91,119,134,137,142,150,152,220,222,242,244,245,250,251,253,259,271,272,282,285,286,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,351,374,379,380,446,456,457,459,460,461,462,463,464,479,493,496,498,507,510,512,518,520,522,],[169,169,169,169,169,169,169,284,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,]),'primary_expression_v':([76,91,119,134,137,142,150,152,220,222,242,244,245,250,251,253,259,271,272,282,285,286,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,351,374,379,380,446,456,457,459,460,461,462,463,464,479,493,496,498,507,510,512,518,520,522,],[170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'constant_expression':([89,92,203,231,237,273,289,313,337,341,347,354,360,433,438,491,],[186,223,334,361,365,334,334,334,334,436,444,450,453,470,473,509,]),'conditional_expression':([89,92,203,231,237,273,289,313,337,341,347,354,360,433,438,468,491,],[188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,501,188,]),'logical_or_expression':([89,92,203,231,237,273,289,313,337,341,347,354,360,433,438,468,491,],[189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,]),'logical_and_expression':([89,92,203,231,237,273,289,313,314,337,341,347,354,360,433,438,468,491,],[190,190,190,190,190,190,190,190,413,190,190,190,190,190,190,190,190,190,]),'inclusive_or_expression':([89,92,203,231,237,273,289,313,314,315,337,341,347,354,360,433,438,468,491,],[191,191,191,191,191,191,191,191,191,414,191,191,191,191,191,191,191,191,191,]),'exclusive_or_expression':([89,92,203,231,237,273,289,313,314,315,316,337,341,347,354,360,433,438,468,491,],[192,192,192,192,192,192,192,192,192,192,415,192,192,192,192,192,192,192,192,192,]),'and_expression':([89,92,203,231,237,273,289,313,314,315,316,317,337,341,347,354,360,433,438,468,491,],[193,193,193,193,193,193,193,193,193,193,193,416,193,193,193,193,193,193,193,193,193,]),'equality_expression':([89,92,203,231,237,273,289,313,314,315,316,317,318,337,341,347,354,360,433,438,468,491,],[194,194,194,194,194,194,194,194,194,194,194,194,417,194,194,194,194,194,194,194,194,194,]),'relational_expression':([89,92,203,231,237,273,289,313,314,315,316,317,318,319,320,337,341,347,354,360,433,438,468,491,],[195,195,195,195,195,195,195,195,195,195,195,195,195,418,419,195,195,195,195,195,195,195,195,195,]),'shift_expression':([89,92,203,231,237,273,289,313,314,315,316,317,318,319,320,321,322,323,324,337,341,347,354,360,433,438,468,491,],[196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,420,421,422,423,196,196,196,196,196,196,196,196,196,]),'additive_expression':([89,92,203,231,237,273,289,313,314,315,316,317,318,319,320,321,322,323,324,325,326,337,341,347,354,360,433,438,468,491,],[197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,424,425,197,197,197,197,197,197,197,197,197,]),'multiplicative_expression':([89,92,203,231,237,273,289,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,337,341,347,354,360,433,438,468,491,],[198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,426,427,198,198,198,198,198,198,198,198,198,]),'cast_expression':([89,92,203,205,231,237,273,289,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,337,341,347,354,360,431,433,438,468,491,],[201,201,201,335,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,428,429,430,201,201,201,201,201,469,201,201,201,201,]),'unary_expression':([89,92,203,205,206,231,237,273,289,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,337,341,347,354,360,431,433,438,468,491,],[202,202,202,202,336,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,]),'primary_expression':([89,92,203,205,206,231,237,273,289,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,337,341,347,354,360,431,433,438,468,491,],[204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,]),'unary_operator':([89,92,203,205,206,231,237,273,289,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,337,341,347,354,360,431,433,438,468,491,],[205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,]),'parameter_list':([90,340,346,439,475,505,],[213,435,213,213,213,213,]),'parameter_list_definition':([90,340,346,439,472,475,505,],[214,214,214,214,503,214,214,]),'parameter_declaration':([90,340,346,439,472,475,505,],[215,215,215,215,502,215,215,]),'initializer':([91,220,351,446,479,],[218,350,447,478,506,]),'struct_declarator_list':([109,],[228,]),'struct_declarator':([109,359,],[229,452,]),'specifier_qualifier_list_no_ts':([110,233,],[232,362,]),'assignment_operator':([145,],[259,]),'expression':([203,273,289,313,337,],[333,386,393,412,333,]),'abstract_declarator':([217,346,439,475,505,],[343,440,440,440,440,]),'direct_abstract_declarator':([217,344,346,439,441,475,505,],[345,437,345,345,437,345,345,]),'initializer_list':([220,],[349,]),'designation':([220,446,],[351,479,]),'designator_list':([220,446,],[352,352,]),'designator':([220,352,446,],[353,449,353,]),'argument_expression_list':([242,],[369,]),'statement_switch':([459,493,512,],[483,515,515,]),'labeled_statement_switch':([459,493,512,],[484,484,484,]),'compound_statement_switch':([459,493,512,],[485,485,485,]),'block_item_list_switch':([493,],[512,]),'block_item_switch':([493,512,],[513,525,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start_node","S'",1,None,None,None),
  ('start_node -> start_node global_declaration','start_node',2,'p_start_node','yacc.py',9),
  ('start_node -> global_declaration','start_node',1,'p_start_node','yacc.py',10),
  ('global_declaration -> function_definition','global_declaration',1,'p_global_declaration','yacc.py',15),
  ('global_declaration -> declaration','global_declaration',1,'p_global_declaration','yacc.py',16),
  ('declaration -> declaration_specifiers ;','declaration',2,'p_declaration','yacc.py',21),
  ('declaration -> declaration_specifiers init_declarator_list ;','declaration',3,'p_declaration','yacc.py',22),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','yacc.py',27),
  ('init_declarator_list -> init_declarator_list , init_declarator','init_declarator_list',3,'p_init_declarator_list','yacc.py',28),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','yacc.py',33),
  ('init_declarator -> declarator = initializer','init_declarator',3,'p_init_declarator','yacc.py',34),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers_no_s','declaration_specifiers',2,'p_declaration_specifiers','yacc.py',39),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers','yacc.py',40),
  ('declaration_specifiers -> type_specifier declaration_specifiers_no_ts','declaration_specifiers',2,'p_declaration_specifiers','yacc.py',41),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','yacc.py',42),
  ('declaration_specifiers_no_s -> type_specifier','declaration_specifiers_no_s',1,'p_declaration_specifiers_no_s','yacc.py',47),
  ('declaration_specifiers_no_s -> type_specifier declaration_specifiers_no_ts_s','declaration_specifiers_no_s',2,'p_declaration_specifiers_no_s','yacc.py',48),
  ('declaration_specifiers_no_s -> type_qualifier declaration_specifiers_no_s','declaration_specifiers_no_s',2,'p_declaration_specifiers_no_s','yacc.py',49),
  ('declaration_specifiers_no_ts -> storage_class_specifier','declaration_specifiers_no_ts',1,'p_declaration_specifiers_no_ts','yacc.py',54),
  ('declaration_specifiers_no_ts -> storage_class_specifier declaration_specifiers_no_ts_s','declaration_specifiers_no_ts',2,'p_declaration_specifiers_no_ts','yacc.py',55),
  ('declaration_specifiers_no_ts -> type_qualifier','declaration_specifiers_no_ts',1,'p_declaration_specifiers_no_ts','yacc.py',56),
  ('declaration_specifiers_no_ts -> type_qualifier declaration_specifiers_no_ts','declaration_specifiers_no_ts',2,'p_declaration_specifiers_no_ts','yacc.py',57),
  ('declaration_specifiers_no_ts_s -> type_qualifier','declaration_specifiers_no_ts_s',1,'p_declaration_specifiers_no_ts_s','yacc.py',62),
  ('declaration_specifiers_no_ts_s -> type_qualifier declaration_specifiers_no_ts_s','declaration_specifiers_no_ts_s',2,'p_declaration_specifiers_no_ts_s','yacc.py',63),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','yacc.py',68),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','yacc.py',69),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','yacc.py',70),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','yacc.py',71),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','yacc.py',72),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','yacc.py',77),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','yacc.py',78),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier','yacc.py',79),
  ('type_specifier -> SHORT INT','type_specifier',2,'p_type_specifier','yacc.py',80),
  ('type_specifier -> INT SHORT','type_specifier',2,'p_type_specifier','yacc.py',81),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','yacc.py',82),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier','yacc.py',83),
  ('type_specifier -> LONG INT','type_specifier',2,'p_type_specifier','yacc.py',84),
  ('type_specifier -> INT LONG','type_specifier',2,'p_type_specifier','yacc.py',85),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','yacc.py',86),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier','yacc.py',87),
  ('type_specifier -> FLOAT LONG','type_specifier',2,'p_type_specifier','yacc.py',88),
  ('type_specifier -> LONG FLOAT','type_specifier',2,'p_type_specifier','yacc.py',89),
  ('type_specifier -> DOUBLE LONG','type_specifier',2,'p_type_specifier','yacc.py',90),
  ('type_specifier -> LONG DOUBLE','type_specifier',2,'p_type_specifier','yacc.py',91),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier','yacc.py',92),
  ('type_specifier -> SIGNED INT','type_specifier',2,'p_type_specifier','yacc.py',93),
  ('type_specifier -> SIGNED SHORT','type_specifier',2,'p_type_specifier','yacc.py',94),
  ('type_specifier -> SIGNED SHORT INT','type_specifier',3,'p_type_specifier','yacc.py',95),
  ('type_specifier -> SIGNED INT SHORT','type_specifier',3,'p_type_specifier','yacc.py',96),
  ('type_specifier -> SIGNED LONG','type_specifier',2,'p_type_specifier','yacc.py',97),
  ('type_specifier -> SIGNED LONG INT','type_specifier',3,'p_type_specifier','yacc.py',98),
  ('type_specifier -> SIGNED INT LONG','type_specifier',3,'p_type_specifier','yacc.py',99),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier','yacc.py',100),
  ('type_specifier -> UNSIGNED INT','type_specifier',2,'p_type_specifier','yacc.py',101),
  ('type_specifier -> UNSIGNED SHORT','type_specifier',2,'p_type_specifier','yacc.py',102),
  ('type_specifier -> UNSIGNED SHORT INT','type_specifier',3,'p_type_specifier','yacc.py',103),
  ('type_specifier -> UNSIGNED INT SHORT','type_specifier',3,'p_type_specifier','yacc.py',104),
  ('type_specifier -> UNSIGNED LONG','type_specifier',2,'p_type_specifier','yacc.py',105),
  ('type_specifier -> UNSIGNED LONG INT','type_specifier',3,'p_type_specifier','yacc.py',106),
  ('type_specifier -> UNSIGNED INT LONG','type_specifier',3,'p_type_specifier','yacc.py',107),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','yacc.py',108),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','yacc.py',109),
  ('type_specifier -> BOOL','type_specifier',1,'p_type_specifier','yacc.py',110),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','yacc.py',115),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','yacc.py',116),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','yacc.py',117),
  ('enum_specifier -> ENUM { enumerator_list }','enum_specifier',4,'p_enum_specifier','yacc.py',122),
  ('enum_specifier -> ENUM identifier { enumerator_list }','enum_specifier',5,'p_enum_specifier','yacc.py',123),
  ('enum_specifier -> ENUM { enumerator_list , }','enum_specifier',5,'p_enum_specifier','yacc.py',124),
  ('enum_specifier -> ENUM identifier { enumerator_list , }','enum_specifier',6,'p_enum_specifier','yacc.py',125),
  ('enum_specifier -> ENUM identifier','enum_specifier',2,'p_enum_specifier','yacc.py',126),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','yacc.py',131),
  ('enumerator_list -> enumerator_list , enumerator','enumerator_list',3,'p_enumerator_list','yacc.py',132),
  ('enumerator -> identifier','enumerator',1,'p_enumerator','yacc.py',137),
  ('enumerator -> identifier = constant_expression','enumerator',3,'p_enumerator','yacc.py',138),
  ('struct_or_union_specifier -> struct_or_union identifier { struct_declaration_list }','struct_or_union_specifier',5,'p_struct_or_union_specifier','yacc.py',143),
  ('struct_or_union_specifier -> struct_or_union { struct_declaration_list }','struct_or_union_specifier',4,'p_struct_or_union_specifier','yacc.py',144),
  ('struct_or_union_specifier -> struct_or_union identifier','struct_or_union_specifier',2,'p_struct_or_union_specifier','yacc.py',145),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','yacc.py',150),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','yacc.py',151),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','yacc.py',156),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','yacc.py',157),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list ;','struct_declaration',3,'p_struct_declaration','yacc.py',162),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list_no_ts','specifier_qualifier_list',2,'p_specifier_qualifier_list','yacc.py',167),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','yacc.py',168),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','yacc.py',169),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','yacc.py',170),
  ('specifier_qualifier_list_no_ts -> type_qualifier specifier_qualifier_list_no_ts','specifier_qualifier_list_no_ts',2,'p_specifier_qualifier_list_no_ts','yacc.py',175),
  ('specifier_qualifier_list_no_ts -> type_qualifier','specifier_qualifier_list_no_ts',1,'p_specifier_qualifier_list_no_ts','yacc.py',176),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','yacc.py',181),
  ('struct_declarator_list -> struct_declarator_list , struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','yacc.py',182),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator','yacc.py',187),
  ('struct_declarator -> : constant_expression','struct_declarator',2,'p_struct_declarator','yacc.py',188),
  ('struct_declarator -> declarator : constant_expression','struct_declarator',3,'p_struct_declarator','yacc.py',189),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator','yacc.py',194),
  ('declarator -> direct_declarator','declarator',1,'p_declarator','yacc.py',195),
  ('pointer -> *','pointer',1,'p_pointer','yacc.py',200),
  ('pointer -> * type_qualifier_list','pointer',2,'p_pointer','yacc.py',201),
  ('pointer -> * pointer','pointer',2,'p_pointer','yacc.py',202),
  ('pointer -> * type_qualifier_list pointer','pointer',3,'p_pointer','yacc.py',203),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','yacc.py',208),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','yacc.py',209),
  ('direct_declarator -> direct_declarator_forlist','direct_declarator',1,'p_direct_declarator','yacc.py',214),
  ('direct_declarator -> ( declarator )','direct_declarator',3,'p_direct_declarator','yacc.py',215),
  ('direct_declarator -> direct_function_declarator','direct_declarator',1,'p_direct_declarator','yacc.py',216),
  ('direct_declarator_forlist -> identifier','direct_declarator_forlist',1,'p_direct_declarator_forlist','yacc.py',221),
  ('direct_declarator_forlist -> ( pointer direct_declarator_forlist )','direct_declarator_forlist',4,'p_direct_declarator_forlist','yacc.py',222),
  ('direct_declarator_forlist -> ( direct_declarator_forlist )','direct_declarator_forlist',3,'p_direct_declarator_forlist','yacc.py',223),
  ('direct_declarator_forlist -> direct_declarator_forlist [ constant_expression ]','direct_declarator_forlist',4,'p_direct_declarator_forlist','yacc.py',224),
  ('direct_declarator_forlist -> identifier [ constant_expression ]','direct_declarator_forlist',4,'p_direct_declarator_forlist','yacc.py',225),
  ('direct_declarator_forlist -> identifier [ ]','direct_declarator_forlist',3,'p_direct_declarator_forlist','yacc.py',226),
  ('parameter_list -> parameter_list_definition','parameter_list',1,'p_parameter_list','yacc.py',233),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','yacc.py',234),
  ('parameter_list -> parameter_declaration , parameter_list','parameter_list',3,'p_parameter_list','yacc.py',235),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration','yacc.py',241),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration','yacc.py',242),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration','yacc.py',243),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','yacc.py',248),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression','yacc.py',253),
  ('conditional_expression -> logical_or_expression ? expression : conditional_expression','conditional_expression',5,'p_conditional_expression','yacc.py',254),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','yacc.py',259),
  ('logical_or_expression -> logical_or_expression OR logical_and_expression','logical_or_expression',3,'p_logical_or_expression','yacc.py',260),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression','yacc.py',265),
  ('logical_and_expression -> logical_and_expression AND inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression','yacc.py',266),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression','yacc.py',271),
  ('inclusive_or_expression -> inclusive_or_expression | exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression','yacc.py',272),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression','yacc.py',277),
  ('exclusive_or_expression -> exclusive_or_expression ^ and_expression','exclusive_or_expression',3,'p_exclusive_or_expression','yacc.py',278),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression','yacc.py',283),
  ('and_expression -> and_expression & equality_expression','and_expression',3,'p_and_expression','yacc.py',284),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','yacc.py',289),
  ('equality_expression -> equality_expression EQUAL relational_expression','equality_expression',3,'p_equality_expression','yacc.py',290),
  ('equality_expression -> equality_expression NE relational_expression','equality_expression',3,'p_equality_expression','yacc.py',291),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','yacc.py',296),
  ('relational_expression -> relational_expression < shift_expression','relational_expression',3,'p_relational_expression','yacc.py',297),
  ('relational_expression -> relational_expression > shift_expression','relational_expression',3,'p_relational_expression','yacc.py',298),
  ('relational_expression -> relational_expression LE shift_expression','relational_expression',3,'p_relational_expression','yacc.py',299),
  ('relational_expression -> relational_expression GE shift_expression','relational_expression',3,'p_relational_expression','yacc.py',300),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','yacc.py',305),
  ('shift_expression -> shift_expression SHIFT_LEFT additive_expression','shift_expression',3,'p_shift_expression','yacc.py',306),
  ('shift_expression -> shift_expression SHIFT_RIGHT additive_expression','shift_expression',3,'p_shift_expression','yacc.py',307),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','yacc.py',312),
  ('additive_expression -> additive_expression + multiplicative_expression','additive_expression',3,'p_additive_expression','yacc.py',313),
  ('additive_expression -> additive_expression - multiplicative_expression','additive_expression',3,'p_additive_expression','yacc.py',314),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression','yacc.py',319),
  ('multiplicative_expression -> multiplicative_expression * cast_expression','multiplicative_expression',3,'p_multiplicative_expression','yacc.py',320),
  ('multiplicative_expression -> multiplicative_expression / cast_expression','multiplicative_expression',3,'p_multiplicative_expression','yacc.py',321),
  ('multiplicative_expression -> multiplicative_expression % cast_expression','multiplicative_expression',3,'p_multiplicative_expression','yacc.py',322),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression','yacc.py',327),
  ('cast_expression -> ( specifier_qualifier_list ) cast_expression','cast_expression',4,'p_cast_expression','yacc.py',328),
  ('unary_expression -> primary_expression','unary_expression',1,'p_unary_expression','yacc.py',333),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression','yacc.py',334),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression','yacc.py',335),
  ('unary_expression -> SIZEOF ( specifier_qualifier_list )','unary_expression',4,'p_unary_expression','yacc.py',336),
  ('unary_operator -> +','unary_operator',1,'p_unary_operator','yacc.py',341),
  ('unary_operator -> -','unary_operator',1,'p_unary_operator','yacc.py',342),
  ('unary_operator -> ~','unary_operator',1,'p_unary_operator','yacc.py',343),
  ('unary_operator -> !','unary_operator',1,'p_unary_operator','yacc.py',344),
  ('primary_expression -> CONSTANCE','primary_expression',1,'p_primary_expression','yacc.py',349),
  ('primary_expression -> STRING_LITERAL','primary_expression',1,'p_primary_expression','yacc.py',350),
  ('primary_expression -> ( expression )','primary_expression',3,'p_primary_expression','yacc.py',351),
  ('expression -> constant_expression','expression',1,'p_expression','yacc.py',356),
  ('expression -> expression , constant_expression','expression',3,'p_expression','yacc.py',357),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator','yacc.py',362),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator','yacc.py',363),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator','yacc.py',364),
  ('direct_abstract_declarator -> ( abstract_declarator )','direct_abstract_declarator',3,'p_direct_abstract_declarator','yacc.py',369),
  ('direct_abstract_declarator -> [ ]','direct_abstract_declarator',2,'p_direct_abstract_declarator','yacc.py',370),
  ('direct_abstract_declarator -> [ constant_expression ]','direct_abstract_declarator',3,'p_direct_abstract_declarator','yacc.py',371),
  ('direct_abstract_declarator -> direct_abstract_declarator [ constant_expression ]','direct_abstract_declarator',4,'p_direct_abstract_declarator','yacc.py',372),
  ('direct_abstract_declarator -> parameter_type_list_definition','direct_abstract_declarator',1,'p_direct_abstract_declarator','yacc.py',373),
  ('function_definition -> declaration_specifiers pointer direct_function_declarator compound_statement','function_definition',4,'p_function_definition','yacc.py',380),
  ('function_definition -> declaration_specifiers direct_function_declarator compound_statement','function_definition',3,'p_function_definition','yacc.py',381),
  ('direct_function_declarator -> ( direct_function_declarator )','direct_function_declarator',3,'p_direct_function_declarator','yacc.py',386),
  ('direct_function_declarator -> identifier parameter_type_list_definition','direct_function_declarator',2,'p_direct_function_declarator','yacc.py',387),
  ('identifier -> ( identifier )','identifier',3,'p_identifier','yacc.py',391),
  ('identifier -> ID','identifier',1,'p_identifier','yacc.py',392),
  ('parameter_type_list_definition -> ( )','parameter_type_list_definition',2,'p_parameter_type_list_definition','yacc.py',398),
  ('parameter_type_list_definition -> ( parameter_type_list_definition )','parameter_type_list_definition',3,'p_parameter_type_list_definition','yacc.py',399),
  ('parameter_type_list_definition -> ( parameter_list )','parameter_type_list_definition',3,'p_parameter_type_list_definition','yacc.py',400),
  ('parameter_list_definition -> parameter_declaration = constant_expression , parameter_list_definition','parameter_list_definition',5,'p_parameter_list_definition','yacc.py',405),
  ('parameter_list_definition -> parameter_declaration = constant_expression','parameter_list_definition',3,'p_parameter_list_definition','yacc.py',406),
  ('parameter_list_definition -> ELLIPSIS','parameter_list_definition',1,'p_parameter_list_definition','yacc.py',407),
  ('compound_statement -> { }','compound_statement',2,'p_compound_statement','yacc.py',413),
  ('compound_statement -> { block_item_list }','compound_statement',3,'p_compound_statement','yacc.py',414),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','yacc.py',420),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','yacc.py',421),
  ('block_item -> declaration','block_item',1,'p_block_item','yacc.py',427),
  ('block_item -> statement','block_item',1,'p_block_item','yacc.py',428),
  ('statement -> labeled_statement','statement',1,'p_statement','yacc.py',434),
  ('statement -> compound_statement','statement',1,'p_statement','yacc.py',435),
  ('statement -> expression_statement','statement',1,'p_statement','yacc.py',436),
  ('statement -> selection_statement','statement',1,'p_statement','yacc.py',437),
  ('statement -> iteration_statement','statement',1,'p_statement','yacc.py',438),
  ('statement -> jump_statement','statement',1,'p_statement','yacc.py',439),
  ('labeled_statement -> identifier :','labeled_statement',2,'p_labeled_statement','yacc.py',444),
  ('expression_statement -> ;','expression_statement',1,'p_expression_statement','yacc.py',449),
  ('expression_statement -> expression_variable ;','expression_statement',2,'p_expression_statement','yacc.py',450),
  ('expression_variable -> assignment_expression','expression_variable',1,'p_expression_variable','yacc.py',455),
  ('expression_variable -> expression_variable , assignment_expression','expression_variable',3,'p_expression_variable','yacc.py',456),
  ('assignment_expression -> conditional_expression_v','assignment_expression',1,'p_assignment_expression','yacc.py',461),
  ('assignment_expression -> unary_expression_v assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','yacc.py',462),
  ('assignment_operator -> =','assignment_operator',1,'p_assignment_operator','yacc.py',467),
  ('assignment_operator -> AO_MUL','assignment_operator',1,'p_assignment_operator','yacc.py',468),
  ('assignment_operator -> AO_DIV','assignment_operator',1,'p_assignment_operator','yacc.py',469),
  ('assignment_operator -> AO_MOD','assignment_operator',1,'p_assignment_operator','yacc.py',470),
  ('assignment_operator -> AO_PLUS','assignment_operator',1,'p_assignment_operator','yacc.py',471),
  ('assignment_operator -> AO_SUB','assignment_operator',1,'p_assignment_operator','yacc.py',472),
  ('assignment_operator -> AO_SL','assignment_operator',1,'p_assignment_operator','yacc.py',473),
  ('assignment_operator -> AO_SR','assignment_operator',1,'p_assignment_operator','yacc.py',474),
  ('assignment_operator -> AO_AND','assignment_operator',1,'p_assignment_operator','yacc.py',475),
  ('assignment_operator -> AO_XOR','assignment_operator',1,'p_assignment_operator','yacc.py',476),
  ('assignment_operator -> AO_OR','assignment_operator',1,'p_assignment_operator','yacc.py',477),
  ('conditional_expression_v -> logical_or_expression_v','conditional_expression_v',1,'p_conditional_expression_v','yacc.py',482),
  ('conditional_expression_v -> logical_or_expression_v ? expression_variable : conditional_expression_v','conditional_expression_v',5,'p_conditional_expression_v','yacc.py',483),
  ('logical_or_expression_v -> logical_and_expression_v','logical_or_expression_v',1,'p_logical_or_expression_v','yacc.py',489),
  ('logical_or_expression_v -> logical_or_expression_v OR logical_and_expression_v','logical_or_expression_v',3,'p_logical_or_expression_v','yacc.py',490),
  ('logical_and_expression_v -> inclusive_or_expression_v','logical_and_expression_v',1,'p_logical_and_expression_v','yacc.py',496),
  ('logical_and_expression_v -> logical_and_expression_v AND inclusive_or_expression_v','logical_and_expression_v',3,'p_logical_and_expression_v','yacc.py',497),
  ('inclusive_or_expression_v -> exclusive_or_expression_v','inclusive_or_expression_v',1,'p_inclusive_or_expression_v','yacc.py',503),
  ('inclusive_or_expression_v -> inclusive_or_expression_v | exclusive_or_expression_v','inclusive_or_expression_v',3,'p_inclusive_or_expression_v','yacc.py',504),
  ('exclusive_or_expression_v -> and_expression_v','exclusive_or_expression_v',1,'p_exclusive_or_expression_v','yacc.py',510),
  ('exclusive_or_expression_v -> exclusive_or_expression_v ^ and_expression_v','exclusive_or_expression_v',3,'p_exclusive_or_expression_v','yacc.py',511),
  ('and_expression_v -> equality_expression_v','and_expression_v',1,'p_and_expression_v','yacc.py',517),
  ('and_expression_v -> and_expression_v & equality_expression_v','and_expression_v',3,'p_and_expression_v','yacc.py',518),
  ('equality_expression_v -> relational_expression_v','equality_expression_v',1,'p_equality_expression_v','yacc.py',524),
  ('equality_expression_v -> equality_expression_v EQUAL relational_expression_v','equality_expression_v',3,'p_equality_expression_v','yacc.py',525),
  ('equality_expression_v -> equality_expression_v NE relational_expression_v','equality_expression_v',3,'p_equality_expression_v','yacc.py',526),
  ('relational_expression_v -> shift_expression_v','relational_expression_v',1,'p_relational_expression_v','yacc.py',532),
  ('relational_expression_v -> relational_expression_v < shift_expression_v','relational_expression_v',3,'p_relational_expression_v','yacc.py',533),
  ('relational_expression_v -> relational_expression_v > shift_expression_v','relational_expression_v',3,'p_relational_expression_v','yacc.py',534),
  ('relational_expression_v -> relational_expression_v LE shift_expression_v','relational_expression_v',3,'p_relational_expression_v','yacc.py',535),
  ('relational_expression_v -> relational_expression_v GE shift_expression_v','relational_expression_v',3,'p_relational_expression_v','yacc.py',536),
  ('shift_expression_v -> additive_expression_v','shift_expression_v',1,'p_shift_expression_v','yacc.py',542),
  ('shift_expression_v -> shift_expression_v SHIFT_LEFT additive_expression_v','shift_expression_v',3,'p_shift_expression_v','yacc.py',543),
  ('shift_expression_v -> shift_expression_v SHIFT_RIGHT additive_expression_v','shift_expression_v',3,'p_shift_expression_v','yacc.py',544),
  ('additive_expression_v -> multiplicative_expression_v','additive_expression_v',1,'p_additive_expression_v','yacc.py',550),
  ('additive_expression_v -> additive_expression_v + multiplicative_expression_v','additive_expression_v',3,'p_additive_expression_v','yacc.py',551),
  ('additive_expression_v -> additive_expression_v - multiplicative_expression_v','additive_expression_v',3,'p_additive_expression_v','yacc.py',552),
  ('multiplicative_expression_v -> cast_expression_v','multiplicative_expression_v',1,'p_multiplicative_expression_v','yacc.py',558),
  ('multiplicative_expression_v -> multiplicative_expression_v * cast_expression_v','multiplicative_expression_v',3,'p_multiplicative_expression_v','yacc.py',559),
  ('multiplicative_expression_v -> multiplicative_expression_v / cast_expression_v','multiplicative_expression_v',3,'p_multiplicative_expression_v','yacc.py',560),
  ('multiplicative_expression_v -> multiplicative_expression_v % cast_expression_v','multiplicative_expression_v',3,'p_multiplicative_expression_v','yacc.py',561),
  ('cast_expression_v -> unary_expression_v','cast_expression_v',1,'p_cast_expression_v','yacc.py',567),
  ('cast_expression_v -> unary_expression_v_constance','cast_expression_v',1,'p_cast_expression_v','yacc.py',568),
  ('cast_expression_v -> ( specifier_qualifier_list ) cast_expression_v','cast_expression_v',4,'p_cast_expression_v','yacc.py',569),
  ('unary_expression_v_constance -> primary_expression_v','unary_expression_v_constance',1,'p_unary_expression_v_constance','yacc.py',574),
  ('unary_expression_v_constance -> SIZEOF unary_expression_v_constance','unary_expression_v_constance',2,'p_unary_expression_v_constance','yacc.py',575),
  ('unary_expression_v_constance -> SIZEOF ( specifier_qualifier_list )','unary_expression_v_constance',4,'p_unary_expression_v_constance','yacc.py',576),
  ('unary_expression_v -> postfix_expression_v','unary_expression_v',1,'p_unary_expression_v','yacc.py',581),
  ('unary_expression_v -> INC unary_expression_v','unary_expression_v',2,'p_unary_expression_v','yacc.py',582),
  ('unary_expression_v -> DEC unary_expression_v','unary_expression_v',2,'p_unary_expression_v','yacc.py',583),
  ('unary_expression_v -> unary_operator_v cast_expression_v','unary_expression_v',2,'p_unary_expression_v','yacc.py',584),
  ('unary_expression_v -> SIZEOF unary_expression_v','unary_expression_v',2,'p_unary_expression_v','yacc.py',585),
  ('unary_operator_v -> &','unary_operator_v',1,'p_unary_operator_v','yacc.py',591),
  ('unary_operator_v -> *','unary_operator_v',1,'p_unary_operator_v','yacc.py',592),
  ('unary_operator_v -> +','unary_operator_v',1,'p_unary_operator_v','yacc.py',593),
  ('unary_operator_v -> -','unary_operator_v',1,'p_unary_operator_v','yacc.py',594),
  ('unary_operator_v -> ~','unary_operator_v',1,'p_unary_operator_v','yacc.py',595),
  ('unary_operator_v -> !','unary_operator_v',1,'p_unary_operator_v','yacc.py',596),
  ('postfix_expression_v -> postfix_expression_v_no_func','postfix_expression_v',1,'p_postfix_expression_v','yacc.py',603),
  ('postfix_expression_v -> postfix_expression_v [ expression ]','postfix_expression_v',4,'p_postfix_expression_v','yacc.py',604),
  ('postfix_expression_v -> identifier ( )','postfix_expression_v',3,'p_postfix_expression_v','yacc.py',605),
  ('postfix_expression_v -> identifier ( argument_expression_list )','postfix_expression_v',4,'p_postfix_expression_v','yacc.py',606),
  ('postfix_expression_v -> postfix_expression_v . ID','postfix_expression_v',3,'p_postfix_expression_v','yacc.py',607),
  ('postfix_expression_v -> postfix_expression_v PTR ID','postfix_expression_v',3,'p_postfix_expression_v','yacc.py',608),
  ('postfix_expression_v -> postfix_expression_v_no_func INC','postfix_expression_v',2,'p_postfix_expression_v','yacc.py',609),
  ('postfix_expression_v -> postfix_expression_v_no_func DEC','postfix_expression_v',2,'p_postfix_expression_v','yacc.py',610),
  ('postfix_expression_v_no_func -> identifier','postfix_expression_v_no_func',1,'p_postfix_expression_v_no_func','yacc.py',617),
  ('postfix_expression_v_no_func -> ( postfix_expression_v_no_func )','postfix_expression_v_no_func',3,'p_postfix_expression_v_no_func','yacc.py',618),
  ('postfix_expression_v_no_func -> postfix_expression_v_no_func [ expression ]','postfix_expression_v_no_func',4,'p_postfix_expression_v_no_func','yacc.py',619),
  ('postfix_expression_v_no_func -> postfix_expression_v_no_func . ID','postfix_expression_v_no_func',3,'p_postfix_expression_v_no_func','yacc.py',620),
  ('postfix_expression_v_no_func -> postfix_expression_v_no_func PTR ID','postfix_expression_v_no_func',3,'p_postfix_expression_v_no_func','yacc.py',621),
  ('primary_expression_v -> CONSTANCE','primary_expression_v',1,'p_primary_expression_v','yacc.py',628),
  ('primary_expression_v -> STRING_LITERAL','primary_expression_v',1,'p_primary_expression_v','yacc.py',629),
  ('primary_expression_v -> ( expression_variable )','primary_expression_v',3,'p_primary_expression_v','yacc.py',630),
  ('selection_statement -> IF ( expression_variable ) statement ELSE statement','selection_statement',7,'p_selection_statement','yacc.py',635),
  ('selection_statement -> IF ( expression_variable ) statement','selection_statement',5,'p_selection_statement','yacc.py',636),
  ('selection_statement -> SWITCH ( expression_variable ) statement_switch','selection_statement',5,'p_selection_statement','yacc.py',637),
  ('compound_statement_switch -> { }','compound_statement_switch',2,'p_compound_statement_switch','yacc.py',642),
  ('compound_statement_switch -> { block_item_list_switch }','compound_statement_switch',3,'p_compound_statement_switch','yacc.py',643),
  ('block_item_list_switch -> block_item_switch','block_item_list_switch',1,'p_block_item_list_switch','yacc.py',649),
  ('block_item_list_switch -> block_item_list_switch block_item_switch','block_item_list_switch',2,'p_block_item_list_switch','yacc.py',650),
  ('block_item_switch -> declaration','block_item_switch',1,'p_block_item_switch','yacc.py',656),
  ('block_item_switch -> statement_switch','block_item_switch',1,'p_block_item_switch','yacc.py',657),
  ('statement_switch -> labeled_statement_switch','statement_switch',1,'p_statement_switch','yacc.py',663),
  ('statement_switch -> compound_statement_switch','statement_switch',1,'p_statement_switch','yacc.py',664),
  ('statement_switch -> expression_statement','statement_switch',1,'p_statement_switch','yacc.py',665),
  ('statement_switch -> selection_statement','statement_switch',1,'p_statement_switch','yacc.py',666),
  ('statement_switch -> iteration_statement','statement_switch',1,'p_statement_switch','yacc.py',667),
  ('statement_switch -> jump_statement','statement_switch',1,'p_statement_switch','yacc.py',668),
  ('labeled_statement_switch -> ID :','labeled_statement_switch',2,'p_labeled_statement_switch','yacc.py',673),
  ('labeled_statement_switch -> CASE constant_expression : statement','labeled_statement_switch',4,'p_labeled_statement_switch','yacc.py',674),
  ('labeled_statement_switch -> DEFAULT : statement','labeled_statement_switch',3,'p_labeled_statement_switch','yacc.py',675),
  ('iteration_statement -> WHILE ( expression_variable ) statement','iteration_statement',5,'p_iteration_statement','yacc.py',682),
  ('iteration_statement -> DO statement WHILE ( expression_variable ) ;','iteration_statement',7,'p_iteration_statement','yacc.py',683),
  ('iteration_statement -> FOR ( expression_statement expression_statement ) statement','iteration_statement',6,'p_iteration_statement','yacc.py',684),
  ('iteration_statement -> FOR ( expression_statement expression_statement expression_variable ) statement','iteration_statement',7,'p_iteration_statement','yacc.py',685),
  ('iteration_statement -> FOR ( declaration expression_statement ) statement','iteration_statement',6,'p_iteration_statement','yacc.py',686),
  ('iteration_statement -> FOR ( declaration expression_statement expression_variable ) statement','iteration_statement',7,'p_iteration_statement','yacc.py',687),
  ('jump_statement -> GOTO ID ;','jump_statement',3,'p_jump_statement','yacc.py',692),
  ('jump_statement -> CONTINUE ;','jump_statement',2,'p_jump_statement','yacc.py',693),
  ('jump_statement -> BREAK ;','jump_statement',2,'p_jump_statement','yacc.py',694),
  ('jump_statement -> RETURN ;','jump_statement',2,'p_jump_statement','yacc.py',695),
  ('jump_statement -> RETURN expression_variable ;','jump_statement',3,'p_jump_statement','yacc.py',696),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','yacc.py',707),
  ('argument_expression_list -> argument_expression_list , assignment_expression','argument_expression_list',3,'p_argument_expression_list','yacc.py',708),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list','yacc.py',712),
  ('initializer_list -> designation initializer','initializer_list',2,'p_initializer_list','yacc.py',713),
  ('initializer_list -> initializer_list , initializer','initializer_list',3,'p_initializer_list','yacc.py',714),
  ('initializer_list -> initializer_list , designation initializer','initializer_list',4,'p_initializer_list','yacc.py',715),
  ('initializer -> assignment_expression','initializer',1,'p_initializer','yacc.py',721),
  ('initializer -> { initializer_list }','initializer',3,'p_initializer','yacc.py',722),
  ('initializer -> { initializer_list , }','initializer',4,'p_initializer','yacc.py',723),
  ('designation -> designator_list =','designation',2,'p_designation','yacc.py',728),
  ('designator_list -> designator','designator_list',1,'p_designator_list','yacc.py',734),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','yacc.py',735),
  ('designator -> [ constant_expression ]','designator',3,'p_designator','yacc.py',742),
  ('designator -> . ID','designator',2,'p_designator','yacc.py',743),
]
