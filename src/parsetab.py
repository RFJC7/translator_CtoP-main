
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND AO_AND AO_DIV AO_MOD AO_MUL AO_OR AO_PLUS AO_SL AO_SR AO_SUB AO_XOR AUTO BOOL BREAK CASE CHAR CONST CONSTANCE CONTINUE DEC DEFAULT DO DOUBLE ELLIPSIS ELSE ENUM EQUAL EXTERN FLOAT FOR GE GOTO ID IF INC INLINE INT LE LONG NE OR PTR REGISTER RESTRICT RETURN SHIFT_LEFT SHIFT_RIGHT SHORT SIGNED SIZEOF STATIC STRING_LITERAL STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE start_node : start_node global_declaration\n                         |  global_declaration global_declaration : function_definition\n                             | declaration   declaration : declaration_specifiers ';'\n                    | declaration_specifiers init_declarator_list ';'  init_declarator_list : init_declarator\n                             | init_declarator_list ',' init_declarator  init_declarator : declarator\n                        | declarator '=' initializer  declaration_specifiers \t: storage_class_specifier declaration_specifiers_no_s\n                                | type_specifier\n                                | type_specifier declaration_specifiers_no_ts\n                                | type_qualifier declaration_specifiers declaration_specifiers_no_s : type_specifier\n                                | type_specifier declaration_specifiers_no_ts_s\n                                | type_qualifier declaration_specifiers_no_s declaration_specifiers_no_ts : storage_class_specifier\n                                | storage_class_specifier declaration_specifiers_no_ts_s\n                                | type_qualifier\n                                | type_qualifier declaration_specifiers_no_ts declaration_specifiers_no_ts_s : type_qualifier\n                                | type_qualifier declaration_specifiers_no_ts_s storage_class_specifier : TYPEDEF\n                                | EXTERN\n                                | STATIC\n                                | AUTO\n                                | REGISTER  type_specifier : VOID\n                       | CHAR\n                       | SHORT\n                       | SHORT INT\n                       | INT SHORT\n                       | INT\n                       | LONG\n                       | LONG INT\n                       | INT LONG\n                       | FLOAT\n                       | DOUBLE\n                       | FLOAT LONG\n                       | LONG FLOAT\n                       | DOUBLE LONG\n                       | LONG DOUBLE\n                       | SIGNED\n                       | SIGNED INT\n                       | SIGNED SHORT\n                       | SIGNED SHORT INT\n                       | SIGNED INT SHORT\n                       | SIGNED LONG\n                       | SIGNED LONG INT\n                       | SIGNED INT LONG\n                       | UNSIGNED\n                       | UNSIGNED INT\n                       | UNSIGNED SHORT\n                       | UNSIGNED SHORT INT\n                       | UNSIGNED INT SHORT\n                       | UNSIGNED LONG\n                       | UNSIGNED LONG INT\n                       | UNSIGNED INT LONG\n                       | struct_or_union_specifier\n                       | enum_specifier\n                       | BOOL  type_qualifier : CONST\n                       | VOLATILE\n                       | RESTRICT  enum_specifier : ENUM '{' enumerator_list '}'\n                        | ENUM identifier '{' enumerator_list '}'\n                        | ENUM '{' enumerator_list ',' '}'\n                        | ENUM identifier '{' enumerator_list ',' '}'\n                        | ENUM identifier  enumerator_list : enumerator\n                        | enumerator_list ',' enumerator  enumerator : identifier\n                   | identifier '=' constant_expression  struct_or_union_specifier : struct_or_union identifier '{' struct_declaration_list '}'\n                                  | struct_or_union '{' struct_declaration_list '}'\n                                  | struct_or_union identifier  struct_or_union : STRUCT\n                        | UNION  struct_declaration_list : struct_declaration\n                                | struct_declaration_list struct_declaration  struct_declaration : specifier_qualifier_list struct_declarator_list ';'  specifier_qualifier_list : type_specifier specifier_qualifier_list_no_ts\n                                 | type_specifier\n                                 | type_qualifier specifier_qualifier_list\n                                 | type_qualifier   specifier_qualifier_list_no_ts : type_qualifier specifier_qualifier_list_no_ts\n                                        | type_qualifier   struct_declarator_list : struct_declarator\n                               | struct_declarator_list ',' struct_declarator  struct_declarator : declarator\n                          | ':' constant_expression\n                          | declarator ':' constant_expression  declarator : pointer direct_declarator\n                   | direct_declarator  pointer : '*'\n                | '*' type_qualifier_list\n                | '*' pointer\n                | '*' type_qualifier_list pointer  type_qualifier_list : type_qualifier\n                            | type_qualifier_list type_qualifier  direct_declarator : direct_declarator_forlist\n                        | '(' declarator ')'\n                        | direct_function_declarator  direct_declarator_forlist : identifier\n                                | '(' pointer direct_declarator_forlist ')'\n                                | '(' direct_declarator_forlist ')'\n                                | direct_declarator_forlist '[' constant_expression ']'\n                                | identifier '[' constant_expression ']'\n                                | identifier '[' ']'  parameter_list : parameter_list_definition\n                       | parameter_declaration\n                       | parameter_declaration ',' parameter_list  parameter_declaration : declaration_specifiers declarator\n                              | declaration_specifiers abstract_declarator\n                              | declaration_specifiers  constant_expression : conditional_expression  conditional_expression : logical_or_expression\n                               | logical_or_expression '?' expression ':' conditional_expression  logical_or_expression : logical_and_expression\n                              | logical_or_expression OR logical_and_expression  logical_and_expression : inclusive_or_expression\n                               | logical_and_expression AND inclusive_or_expression  inclusive_or_expression : exclusive_or_expression\n                                | inclusive_or_expression '|' exclusive_or_expression  exclusive_or_expression : and_expression\n                                | exclusive_or_expression '^' and_expression  and_expression : equality_expression\n                       | and_expression '&' equality_expression  equality_expression : relational_expression\n                            | equality_expression EQUAL relational_expression\n                            | equality_expression NE relational_expression  relational_expression : shift_expression\n                              | relational_expression '<' shift_expression\n                              | relational_expression '>' shift_expression\n                              | relational_expression LE shift_expression\n                              | relational_expression GE shift_expression  shift_expression : additive_expression\n                         | shift_expression SHIFT_LEFT additive_expression\n                         | shift_expression SHIFT_RIGHT additive_expression  additive_expression : multiplicative_expression\n                            | additive_expression '+' multiplicative_expression\n                            | additive_expression '-' multiplicative_expression  multiplicative_expression : cast_expression\n                                  | multiplicative_expression '*' cast_expression\n                                  | multiplicative_expression '/' cast_expression\n                                  | multiplicative_expression '%' cast_expression  cast_expression : unary_expression\n                        | '(' type_name ')' cast_expression  type_name : specifier_qualifier_list\n                  | specifier_qualifier_list brace_pointer  brace_pointer : '*'\n                | '*' type_qualifier_list\n                | '(' brace_pointer ')'\n                | '*' brace_pointer\n                | '*' type_qualifier_list brace_pointer  unary_expression : primary_expression\n                         | unary_operator cast_expression\n                         | SIZEOF unary_expression\n                         | SIZEOF '(' type_name ')'  unary_operator : '+'\n                       | '-'\n                       | '~'\n                       | '!'  primary_expression : CONSTANCE\n                           | STRING_LITERAL\n                           | '(' expression ')'  expression : constant_expression\n                   | expression ',' constant_expression  abstract_declarator : pointer\n                            | direct_abstract_declarator\n                            | pointer direct_abstract_declarator  direct_abstract_declarator : '(' abstract_declarator ')'\n                                   | '[' ']'\n                                   | '[' constant_expression ']'\n                                   | direct_abstract_declarator '[' constant_expression ']'\n                                   | parameter_type_list_definition  function_definition : declaration_specifiers pointer direct_function_declarator compound_statement\n                            | declaration_specifiers direct_function_declarator compound_statement  direct_function_declarator :  '(' pointer direct_function_declarator ')'\n                                    | '(' direct_function_declarator ')'\n                                    | identifier parameter_type_list_definition  identifier : '(' identifier ')'\n                    | ID  parameter_type_list_definition : '(' ')'\n                                       | '(' parameter_type_list_definition ')'\n                                       | '(' parameter_list ')'  parameter_list_definition : parameter_declaration '=' constant_expression  ',' parameter_list_definition\n                                  | parameter_declaration '=' constant_expression \n                                  | ELLIPSIS  compound_statement : '{' '}'\n                           | '{' block_item_list '}'  block_item_list : block_item\n                        | block_item_list block_item  block_item : declaration\n                   | statement  statement : labeled_statement\n                  | compound_statement\n                  | expression_statement\n                  | selection_statement\n                  | iteration_statement\n                  | jump_statement  labeled_statement : identifier ':'  expression_statement : ';'\n                             | expression_variable ';'  expression_variable : assignment_expression\n                            | expression_variable ',' assignment_expression  assignment_expression : conditional_expression_v\n                              | unary_expression_v assignment_operator assignment_expression  assignment_operator : '='\n                            | AO_MUL\n                            | AO_DIV\n                            | AO_MOD\n                            | AO_PLUS\n                            | AO_SUB\n                            | AO_SL\n                            | AO_SR\n                            | AO_AND\n                            | AO_XOR\n                            | AO_OR  conditional_expression_v : logical_or_expression_v\n                               | logical_or_expression_v '?' expression_variable ':' conditional_expression_v  logical_or_expression_v : logical_and_expression_v\n                              | logical_or_expression_v OR logical_and_expression_v  logical_and_expression_v : inclusive_or_expression_v\n                               | logical_and_expression_v AND inclusive_or_expression_v  inclusive_or_expression_v : exclusive_or_expression_v\n                                | inclusive_or_expression_v '|' exclusive_or_expression_v  exclusive_or_expression_v : and_expression_v\n                                | exclusive_or_expression_v '^' and_expression_v and_expression_v : equality_expression_v\n                       | and_expression_v '&' equality_expression_v  equality_expression_v : relational_expression_v\n                            | equality_expression_v EQUAL relational_expression_v\n                            | equality_expression_v NE relational_expression_v  relational_expression_v : shift_expression_v\n                              | relational_expression_v '<' shift_expression_v\n                              | relational_expression_v '>' shift_expression_v\n                              | relational_expression_v LE shift_expression_v\n                              | relational_expression_v GE shift_expression_v  shift_expression_v : additive_expression_v\n                         | shift_expression_v SHIFT_LEFT additive_expression_v\n                         | shift_expression_v SHIFT_RIGHT additive_expression_v  additive_expression_v : multiplicative_expression_v\n                            | additive_expression_v '+' multiplicative_expression_v\n                            | additive_expression_v '-' multiplicative_expression_v  multiplicative_expression_v : cast_expression_v\n                                  | multiplicative_expression_v '*' cast_expression_v\n                                  | multiplicative_expression_v '/' cast_expression_v\n                                  | multiplicative_expression_v '%' cast_expression_v  cast_expression_v : unary_expression_v\n                        | unary_expression_v_constance\n                        | '(' type_name ')' cast_expression_v  unary_expression_v_constance : primary_expression_v\n                         | SIZEOF unary_expression_v_constance\n                         | SIZEOF '(' type_name ')'  unary_expression_v : postfix_expression_v\n                         | INC unary_expression_v\n                         | DEC unary_expression_v\n                         | unary_operator_v cast_expression_v\n                         | SIZEOF unary_expression_v  unary_operator_v : '&'\n                       | '*'\n                       | '+'\n                       | '-'\n                       | '~'\n                       | '!'  postfix_expression_v : postfix_expression_v_no_func\n                           | postfix_expression_v '[' expression ']'\n                           | identifier '(' ')'\n                           | identifier '(' argument_expression_list ')'\n                           | postfix_expression_v '.' ID\n                           | postfix_expression_v PTR ID\n                           | postfix_expression_v_no_func INC\n                           | postfix_expression_v_no_func DEC  postfix_expression_v_no_func : identifier\n                                | '(' postfix_expression_v_no_func ')'\n                                | postfix_expression_v_no_func '[' expression ']'\n                                | postfix_expression_v_no_func '.' ID\n                                | postfix_expression_v_no_func PTR ID   primary_expression_v : CONSTANCE\n                           | STRING_LITERAL\n                           | '(' expression_variable ')'  selection_statement : IF '(' expression_variable ')' statement ELSE statement\n                            | IF '(' expression_variable ')' statement\n                            | SWITCH '(' expression_variable ')' statement_switch  selection_statement_while : IF '(' expression_variable ')' statement_while ELSE statement_while\n                            | IF '(' expression_variable ')' statement_while\n                            | SWITCH '(' expression_variable ')' statement_while_switch  compound_statement_switch : '{' '}'\n                           | '{' block_item_list_switch '}'  block_item_list_switch : block_item_switch\n                        | block_item_list_switch block_item_switch  block_item_switch : declaration\n                   | statement_switch  statement_switch : labeled_statement_switch\n                        | compound_statement_switch\n                        | expression_statement\n                        | selection_statement\n                        | iteration_statement_switch\n                        | jump_statement  labeled_statement_switch : ID ':'\n                            | CASE constant_expression ':' statement\n                            | DEFAULT ':' statement  compound_statement_while : '{' '}'\n                           | '{' block_item_list_while '}'  block_item_list_while : block_item_while\n                        | block_item_list_while block_item_while  block_item_while : declaration\n                   | statement_while  statement_while : labeled_statement\n                        | compound_statement_while\n                        | expression_statement\n                        | selection_statement_while\n                        | iteration_statement\n                        | jump_statement_while  iteration_statement : WHILE '(' expression_variable ')' statement_while\n                            | DO statement_while WHILE '(' expression_variable ')' ';'\n                            | FOR '(' expression_statement expression_statement ')' statement_while\n                            | FOR '(' expression_statement expression_statement expression_variable ')' statement_while\n                            | FOR '(' declaration expression_statement ')' statement_while\n                            | FOR '(' declaration expression_statement expression_variable ')' statement_while  iteration_statement_switch : WHILE '(' expression_variable ')' statement_while_switch\n                            | DO statement_while_switch WHILE '(' expression_variable ')' ';'\n                            | FOR '(' expression_statement expression_statement ')' statement_while_switch\n                            | FOR '(' expression_statement expression_statement expression_variable ')' statement_while_switch\n                            | FOR '(' declaration expression_statement ')' statement_while_switch\n                            | FOR '(' declaration expression_statement expression_variable ')' statement_while_switch  compound_statement_while_switch : '{' '}'\n                           | '{' block_item_list_while_switch '}'  block_item_list_while_switch : block_item_while_switch\n                        | block_item_list_while_switch block_item_while_switch  block_item_while_switch : declaration\n                                | statement_while_switch  statement_while_switch : labeled_statement_switch\n                        | compound_statement_while_switch\n                        | expression_statement\n                        | selection_statement_while\n                        | iteration_statement_switch\n                        | jump_statement_while  jump_statement : GOTO ID ';'\n                       | RETURN ';'\n                       | RETURN expression_variable ';'  jump_statement_while : GOTO ID ';'\n                            | CONTINUE ';'\n                            | BREAK ';'\n                            | RETURN ';'\n                            | RETURN expression_variable ';'  argument_expression_list : assignment_expression\n                                 | argument_expression_list ',' assignment_expression  initializer_list : initializer\n                         | designation initializer\n                         | initializer_list ',' initializer\n                         | initializer_list ',' designation initializer  initializer : assignment_expression\n                    | '{' initializer_list '}'\n                    | '{' initializer_list ',' '}'  designation : designator_list '='  designator_list : designator\n                        | designator_list designator  designator : '[' constant_expression ']'\n                   | '.' ID "
    
_lr_action_items = {'TYPEDEF':([0,1,2,3,4,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,33,36,42,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,75,76,77,90,98,99,100,101,102,103,104,105,117,118,119,120,121,122,124,125,126,127,128,129,130,182,225,234,238,239,240,242,253,254,255,256,257,258,259,266,268,353,359,370,376,379,395,396,397,398,399,403,404,405,409,410,468,483,494,495,498,499,510,513,520,523,524,525,526,527,528,529,533,537,550,553,556,557,558,559,560,563,564,565,566,567,568,569,570,572,573,574,576,578,580,581,582,585,586,587,588,589,592,594,595,596,599,600,603,604,611,613,615,616,617,],[9,9,-2,-3,-4,9,9,-29,-30,-31,-34,-35,-38,-39,-44,-52,-60,-61,-62,-63,-64,-65,-1,-5,-184,9,-32,-33,-37,-36,-41,-43,-40,-42,-45,-46,-49,-53,-54,-57,-77,-70,-179,9,-6,9,-48,-51,-47,-50,-56,-59,-55,-58,-178,-191,9,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,-183,-76,-66,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,9,9,-342,9,9,-75,-68,-67,-305,9,-307,-309,-310,-345,-346,-347,-341,-343,9,-69,-306,-308,-344,-348,9,9,-285,-286,-296,-297,-298,-299,-300,-301,9,-317,9,-302,-290,9,-292,-294,-295,-335,-336,-337,-338,-339,-340,9,9,-288,-289,-319,-321,-284,-304,-291,-293,-329,9,-331,-333,-334,-318,-320,-322,-303,-330,-332,-287,-323,-325,-327,-324,-326,-328,]),'EXTERN':([0,1,2,3,4,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,33,36,42,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,75,76,77,90,98,99,100,101,102,103,104,105,117,118,119,120,121,122,124,125,126,127,128,129,130,182,225,234,238,239,240,242,253,254,255,256,257,258,259,266,268,353,359,370,376,379,395,396,397,398,399,403,404,405,409,410,468,483,494,495,498,499,510,513,520,523,524,525,526,527,528,529,533,537,550,553,556,557,558,559,560,563,564,565,566,567,568,569,570,572,573,574,576,578,580,581,582,585,586,587,588,589,592,594,595,596,599,600,603,604,611,613,615,616,617,],[10,10,-2,-3,-4,10,10,-29,-30,-31,-34,-35,-38,-39,-44,-52,-60,-61,-62,-63,-64,-65,-1,-5,-184,10,-32,-33,-37,-36,-41,-43,-40,-42,-45,-46,-49,-53,-54,-57,-77,-70,-179,10,-6,10,-48,-51,-47,-50,-56,-59,-55,-58,-178,-191,10,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,-183,-76,-66,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,10,10,-342,10,10,-75,-68,-67,-305,10,-307,-309,-310,-345,-346,-347,-341,-343,10,-69,-306,-308,-344,-348,10,10,-285,-286,-296,-297,-298,-299,-300,-301,10,-317,10,-302,-290,10,-292,-294,-295,-335,-336,-337,-338,-339,-340,10,10,-288,-289,-319,-321,-284,-304,-291,-293,-329,10,-331,-333,-334,-318,-320,-322,-303,-330,-332,-287,-323,-325,-327,-324,-326,-328,]),'STATIC':([0,1,2,3,4,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,33,36,42,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,75,76,77,90,98,99,100,101,102,103,104,105,117,118,119,120,121,122,124,125,126,127,128,129,130,182,225,234,238,239,240,242,253,254,255,256,257,258,259,266,268,353,359,370,376,379,395,396,397,398,399,403,404,405,409,410,468,483,494,495,498,499,510,513,520,523,524,525,526,527,528,529,533,537,550,553,556,557,558,559,560,563,564,565,566,567,568,569,570,572,573,574,576,578,580,581,582,585,586,587,588,589,592,594,595,596,599,600,603,604,611,613,615,616,617,],[11,11,-2,-3,-4,11,11,-29,-30,-31,-34,-35,-38,-39,-44,-52,-60,-61,-62,-63,-64,-65,-1,-5,-184,11,-32,-33,-37,-36,-41,-43,-40,-42,-45,-46,-49,-53,-54,-57,-77,-70,-179,11,-6,11,-48,-51,-47,-50,-56,-59,-55,-58,-178,-191,11,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,-183,-76,-66,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,11,11,-342,11,11,-75,-68,-67,-305,11,-307,-309,-310,-345,-346,-347,-341,-343,11,-69,-306,-308,-344,-348,11,11,-285,-286,-296,-297,-298,-299,-300,-301,11,-317,11,-302,-290,11,-292,-294,-295,-335,-336,-337,-338,-339,-340,11,11,-288,-289,-319,-321,-284,-304,-291,-293,-329,11,-331,-333,-334,-318,-320,-322,-303,-330,-332,-287,-323,-325,-327,-324,-326,-328,]),'AUTO':([0,1,2,3,4,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,33,36,42,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,75,76,77,90,98,99,100,101,102,103,104,105,117,118,119,120,121,122,124,125,126,127,128,129,130,182,225,234,238,239,240,242,253,254,255,256,257,258,259,266,268,353,359,370,376,379,395,396,397,398,399,403,404,405,409,410,468,483,494,495,498,499,510,513,520,523,524,525,526,527,528,529,533,537,550,553,556,557,558,559,560,563,564,565,566,567,568,569,570,572,573,574,576,578,580,581,582,585,586,587,588,589,592,594,595,596,599,600,603,604,611,613,615,616,617,],[12,12,-2,-3,-4,12,12,-29,-30,-31,-34,-35,-38,-39,-44,-52,-60,-61,-62,-63,-64,-65,-1,-5,-184,12,-32,-33,-37,-36,-41,-43,-40,-42,-45,-46,-49,-53,-54,-57,-77,-70,-179,12,-6,12,-48,-51,-47,-50,-56,-59,-55,-58,-178,-191,12,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,-183,-76,-66,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,12,12,-342,12,12,-75,-68,-67,-305,12,-307,-309,-310,-345,-346,-347,-341,-343,12,-69,-306,-308,-344,-348,12,12,-285,-286,-296,-297,-298,-299,-300,-301,12,-317,12,-302,-290,12,-292,-294,-295,-335,-336,-337,-338,-339,-340,12,12,-288,-289,-319,-321,-284,-304,-291,-293,-329,12,-331,-333,-334,-318,-320,-322,-303,-330,-332,-287,-323,-325,-327,-324,-326,-328,]),'REGISTER':([0,1,2,3,4,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,33,36,42,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,75,76,77,90,98,99,100,101,102,103,104,105,117,118,119,120,121,122,124,125,126,127,128,129,130,182,225,234,238,239,240,242,253,254,255,256,257,258,259,266,268,353,359,370,376,379,395,396,397,398,399,403,404,405,409,410,468,483,494,495,498,499,510,513,520,523,524,525,526,527,528,529,533,537,550,553,556,557,558,559,560,563,564,565,566,567,568,569,570,572,573,574,576,578,580,581,582,585,586,587,588,589,592,594,595,596,599,600,603,604,611,613,615,616,617,],[13,13,-2,-3,-4,13,13,-29,-30,-31,-34,-35,-38,-39,-44,-52,-60,-61,-62,-63,-64,-65,-1,-5,-184,13,-32,-33,-37,-36,-41,-43,-40,-42,-45,-46,-49,-53,-54,-57,-77,-70,-179,13,-6,13,-48,-51,-47,-50,-56,-59,-55,-58,-178,-191,13,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,-183,-76,-66,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,13,13,-342,13,13,-75,-68,-67,-305,13,-307,-309,-310,-345,-346,-347,-341,-343,13,-69,-306,-308,-344,-348,13,13,-285,-286,-296,-297,-298,-299,-300,-301,13,-317,13,-302,-290,13,-292,-294,-295,-335,-336,-337,-338,-339,-340,13,13,-288,-289,-319,-321,-284,-304,-291,-293,-329,13,-331,-333,-334,-318,-320,-322,-303,-330,-332,-287,-323,-325,-327,-324,-326,-328,]),'VOID':([0,1,2,3,4,6,8,9,10,11,12,13,26,27,28,33,36,48,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,202,221,224,226,238,239,240,242,253,254,255,256,257,258,259,266,268,293,296,350,353,359,371,395,396,397,398,399,403,404,405,409,410,468,494,495,498,499,510,513,520,523,524,525,526,527,528,529,533,537,550,553,556,557,558,559,560,563,564,565,566,567,568,569,570,572,573,574,576,578,580,581,582,585,586,587,588,589,592,594,595,596,599,600,603,604,611,613,615,616,617,],[14,14,-2,-3,-4,14,14,-24,-25,-26,-27,-28,-63,-64,-65,-1,-5,14,14,-179,14,-6,14,14,14,-80,14,-178,-191,14,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,14,14,14,14,-81,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,14,14,-342,14,14,14,14,14,-82,-305,14,-307,-309,-310,-345,-346,-347,-341,-343,14,-306,-308,-344,-348,14,14,-285,-286,-296,-297,-298,-299,-300,-301,14,-317,14,-302,-290,14,-292,-294,-295,-335,-336,-337,-338,-339,-340,14,14,-288,-289,-319,-321,-284,-304,-291,-293,-329,14,-331,-333,-334,-318,-320,-322,-303,-330,-332,-287,-323,-325,-327,-324,-326,-328,]),'CHAR':([0,1,2,3,4,6,8,9,10,11,12,13,26,27,28,33,36,48,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,202,221,224,226,238,239,240,242,253,254,255,256,257,258,259,266,268,293,296,350,353,359,371,395,396,397,398,399,403,404,405,409,410,468,494,495,498,499,510,513,520,523,524,525,526,527,528,529,533,537,550,553,556,557,558,559,560,563,564,565,566,567,568,569,570,572,573,574,576,578,580,581,582,585,586,587,588,589,592,594,595,596,599,600,603,604,611,613,615,616,617,],[15,15,-2,-3,-4,15,15,-24,-25,-26,-27,-28,-63,-64,-65,-1,-5,15,15,-179,15,-6,15,15,15,-80,15,-178,-191,15,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,15,15,15,15,-81,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,15,15,-342,15,15,15,15,15,-82,-305,15,-307,-309,-310,-345,-346,-347,-341,-343,15,-306,-308,-344,-348,15,15,-285,-286,-296,-297,-298,-299,-300,-301,15,-317,15,-302,-290,15,-292,-294,-295,-335,-336,-337,-338,-339,-340,15,15,-288,-289,-319,-321,-284,-304,-291,-293,-329,15,-331,-333,-334,-318,-320,-322,-303,-330,-332,-287,-323,-325,-327,-324,-326,-328,]),'SHORT':([0,1,2,3,4,6,8,9,10,11,12,13,17,21,22,26,27,28,33,36,48,61,64,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,202,221,224,226,238,239,240,242,253,254,255,256,257,258,259,266,268,293,296,350,353,359,371,395,396,397,398,399,403,404,405,409,410,468,494,495,498,499,510,513,520,523,524,525,526,527,528,529,533,537,550,553,556,557,558,559,560,563,564,565,566,567,568,569,570,572,573,574,576,578,580,581,582,585,586,587,588,589,592,594,595,596,599,600,603,604,611,613,615,616,617,],[16,16,-2,-3,-4,16,16,-24,-25,-26,-27,-28,54,62,65,-63,-64,-65,-1,-5,16,98,102,16,-179,16,-6,16,16,16,-80,16,-178,-191,16,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,16,16,16,16,-81,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,16,16,-342,16,16,16,16,16,-82,-305,16,-307,-309,-310,-345,-346,-347,-341,-343,16,-306,-308,-344,-348,16,16,-285,-286,-296,-297,-298,-299,-300,-301,16,-317,16,-302,-290,16,-292,-294,-295,-335,-336,-337,-338,-339,-340,16,16,-288,-289,-319,-321,-284,-304,-291,-293,-329,16,-331,-333,-334,-318,-320,-322,-303,-330,-332,-287,-323,-325,-327,-324,-326,-328,]),'INT':([0,1,2,3,4,6,8,9,10,11,12,13,16,18,21,22,26,27,28,33,36,48,62,63,65,66,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,202,221,224,226,238,239,240,242,253,254,255,256,257,258,259,266,268,293,296,350,353,359,371,395,396,397,398,399,403,404,405,409,410,468,494,495,498,499,510,513,520,523,524,525,526,527,528,529,533,537,550,553,556,557,558,559,560,563,564,565,566,567,568,569,570,572,573,574,576,578,580,581,582,585,586,587,588,589,592,594,595,596,599,600,603,604,611,613,615,616,617,],[17,17,-2,-3,-4,17,17,-24,-25,-26,-27,-28,53,56,61,64,-63,-64,-65,-1,-5,17,100,101,104,105,17,-179,17,-6,17,17,17,-80,17,-178,-191,17,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,17,17,17,17,-81,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,17,17,-342,17,17,17,17,17,-82,-305,17,-307,-309,-310,-345,-346,-347,-341,-343,17,-306,-308,-344,-348,17,17,-285,-286,-296,-297,-298,-299,-300,-301,17,-317,17,-302,-290,17,-292,-294,-295,-335,-336,-337,-338,-339,-340,17,17,-288,-289,-319,-321,-284,-304,-291,-293,-329,17,-331,-333,-334,-318,-320,-322,-303,-330,-332,-287,-323,-325,-327,-324,-326,-328,]),'LONG':([0,1,2,3,4,6,8,9,10,11,12,13,17,19,20,21,22,26,27,28,33,36,48,61,64,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,202,221,224,226,238,239,240,242,253,254,255,256,257,258,259,266,268,293,296,350,353,359,371,395,396,397,398,399,403,404,405,409,410,468,494,495,498,499,510,513,520,523,524,525,526,527,528,529,533,537,550,553,556,557,558,559,560,563,564,565,566,567,568,569,570,572,573,574,576,578,580,581,582,585,586,587,588,589,592,594,595,596,599,600,603,604,611,613,615,616,617,],[18,18,-2,-3,-4,18,18,-24,-25,-26,-27,-28,55,59,60,63,66,-63,-64,-65,-1,-5,18,99,103,18,-179,18,-6,18,18,18,-80,18,-178,-191,18,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,18,18,18,18,-81,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,18,18,-342,18,18,18,18,18,-82,-305,18,-307,-309,-310,-345,-346,-347,-341,-343,18,-306,-308,-344,-348,18,18,-285,-286,-296,-297,-298,-299,-300,-301,18,-317,18,-302,-290,18,-292,-294,-295,-335,-336,-337,-338,-339,-340,18,18,-288,-289,-319,-321,-284,-304,-291,-293,-329,18,-331,-333,-334,-318,-320,-322,-303,-330,-332,-287,-323,-325,-327,-324,-326,-328,]),'FLOAT':([0,1,2,3,4,6,8,9,10,11,12,13,18,26,27,28,33,36,48,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,202,221,224,226,238,239,240,242,253,254,255,256,257,258,259,266,268,293,296,350,353,359,371,395,396,397,398,399,403,404,405,409,410,468,494,495,498,499,510,513,520,523,524,525,526,527,528,529,533,537,550,553,556,557,558,559,560,563,564,565,566,567,568,569,570,572,573,574,576,578,580,581,582,585,586,587,588,589,592,594,595,596,599,600,603,604,611,613,615,616,617,],[19,19,-2,-3,-4,19,19,-24,-25,-26,-27,-28,57,-63,-64,-65,-1,-5,19,19,-179,19,-6,19,19,19,-80,19,-178,-191,19,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,19,19,19,19,-81,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,19,19,-342,19,19,19,19,19,-82,-305,19,-307,-309,-310,-345,-346,-347,-341,-343,19,-306,-308,-344,-348,19,19,-285,-286,-296,-297,-298,-299,-300,-301,19,-317,19,-302,-290,19,-292,-294,-295,-335,-336,-337,-338,-339,-340,19,19,-288,-289,-319,-321,-284,-304,-291,-293,-329,19,-331,-333,-334,-318,-320,-322,-303,-330,-332,-287,-323,-325,-327,-324,-326,-328,]),'DOUBLE':([0,1,2,3,4,6,8,9,10,11,12,13,18,26,27,28,33,36,48,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,202,221,224,226,238,239,240,242,253,254,255,256,257,258,259,266,268,293,296,350,353,359,371,395,396,397,398,399,403,404,405,409,410,468,494,495,498,499,510,513,520,523,524,525,526,527,528,529,533,537,550,553,556,557,558,559,560,563,564,565,566,567,568,569,570,572,573,574,576,578,580,581,582,585,586,587,588,589,592,594,595,596,599,600,603,604,611,613,615,616,617,],[20,20,-2,-3,-4,20,20,-24,-25,-26,-27,-28,58,-63,-64,-65,-1,-5,20,20,-179,20,-6,20,20,20,-80,20,-178,-191,20,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,20,20,20,20,-81,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,20,20,-342,20,20,20,20,20,-82,-305,20,-307,-309,-310,-345,-346,-347,-341,-343,20,-306,-308,-344,-348,20,20,-285,-286,-296,-297,-298,-299,-300,-301,20,-317,20,-302,-290,20,-292,-294,-295,-335,-336,-337,-338,-339,-340,20,20,-288,-289,-319,-321,-284,-304,-291,-293,-329,20,-331,-333,-334,-318,-320,-322,-303,-330,-332,-287,-323,-325,-327,-324,-326,-328,]),'SIGNED':([0,1,2,3,4,6,8,9,10,11,12,13,26,27,28,33,36,48,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,202,221,224,226,238,239,240,242,253,254,255,256,257,258,259,266,268,293,296,350,353,359,371,395,396,397,398,399,403,404,405,409,410,468,494,495,498,499,510,513,520,523,524,525,526,527,528,529,533,537,550,553,556,557,558,559,560,563,564,565,566,567,568,569,570,572,573,574,576,578,580,581,582,585,586,587,588,589,592,594,595,596,599,600,603,604,611,613,615,616,617,],[21,21,-2,-3,-4,21,21,-24,-25,-26,-27,-28,-63,-64,-65,-1,-5,21,21,-179,21,-6,21,21,21,-80,21,-178,-191,21,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,21,21,21,21,-81,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,21,21,-342,21,21,21,21,21,-82,-305,21,-307,-309,-310,-345,-346,-347,-341,-343,21,-306,-308,-344,-348,21,21,-285,-286,-296,-297,-298,-299,-300,-301,21,-317,21,-302,-290,21,-292,-294,-295,-335,-336,-337,-338,-339,-340,21,21,-288,-289,-319,-321,-284,-304,-291,-293,-329,21,-331,-333,-334,-318,-320,-322,-303,-330,-332,-287,-323,-325,-327,-324,-326,-328,]),'UNSIGNED':([0,1,2,3,4,6,8,9,10,11,12,13,26,27,28,33,36,48,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,202,221,224,226,238,239,240,242,253,254,255,256,257,258,259,266,268,293,296,350,353,359,371,395,396,397,398,399,403,404,405,409,410,468,494,495,498,499,510,513,520,523,524,525,526,527,528,529,533,537,550,553,556,557,558,559,560,563,564,565,566,567,568,569,570,572,573,574,576,578,580,581,582,585,586,587,588,589,592,594,595,596,599,600,603,604,611,613,615,616,617,],[22,22,-2,-3,-4,22,22,-24,-25,-26,-27,-28,-63,-64,-65,-1,-5,22,22,-179,22,-6,22,22,22,-80,22,-178,-191,22,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,22,22,22,22,-81,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,22,22,-342,22,22,22,22,22,-82,-305,22,-307,-309,-310,-345,-346,-347,-341,-343,22,-306,-308,-344,-348,22,22,-285,-286,-296,-297,-298,-299,-300,-301,22,-317,22,-302,-290,22,-292,-294,-295,-335,-336,-337,-338,-339,-340,22,22,-288,-289,-319,-321,-284,-304,-291,-293,-329,22,-331,-333,-334,-318,-320,-322,-303,-330,-332,-287,-323,-325,-327,-324,-326,-328,]),'BOOL':([0,1,2,3,4,6,8,9,10,11,12,13,26,27,28,33,36,48,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,202,221,224,226,238,239,240,242,253,254,255,256,257,258,259,266,268,293,296,350,353,359,371,395,396,397,398,399,403,404,405,409,410,468,494,495,498,499,510,513,520,523,524,525,526,527,528,529,533,537,550,553,556,557,558,559,560,563,564,565,566,567,568,569,570,572,573,574,576,578,580,581,582,585,586,587,588,589,592,594,595,596,599,600,603,604,611,613,615,616,617,],[25,25,-2,-3,-4,25,25,-24,-25,-26,-27,-28,-63,-64,-65,-1,-5,25,25,-179,25,-6,25,25,25,-80,25,-178,-191,25,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,25,25,25,25,-81,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,25,25,-342,25,25,25,25,25,-82,-305,25,-307,-309,-310,-345,-346,-347,-341,-343,25,-306,-308,-344,-348,25,25,-285,-286,-296,-297,-298,-299,-300,-301,25,-317,25,-302,-290,25,-292,-294,-295,-335,-336,-337,-338,-339,-340,25,25,-288,-289,-319,-321,-284,-304,-291,-293,-329,25,-331,-333,-334,-318,-320,-322,-303,-330,-332,-287,-323,-325,-327,-324,-326,-328,]),'CONST':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,33,36,38,42,47,48,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,75,76,77,79,81,90,94,98,99,100,101,102,103,104,105,106,107,108,110,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,177,182,202,221,224,225,226,232,234,238,239,240,242,253,254,255,256,257,258,259,266,268,293,296,350,353,359,370,371,376,379,390,395,396,397,398,399,403,404,405,409,410,468,483,488,494,495,498,499,510,513,520,523,524,525,526,527,528,529,533,537,550,553,556,557,558,559,560,563,564,565,566,567,568,569,570,572,573,574,576,578,580,581,582,585,586,587,588,589,592,594,595,596,599,600,603,604,611,613,615,616,617,],[26,26,-2,-3,-4,26,26,26,-24,-25,-26,-27,-28,-29,-30,-31,-34,-35,-38,-39,-44,-52,-60,-61,-62,-63,-64,-65,-1,-5,26,-184,26,26,26,26,-32,-33,-37,-36,-41,-43,-40,-42,-45,-46,-49,-53,-54,-57,-77,26,-70,-179,26,-6,26,-100,26,26,-48,-51,-47,-50,-56,-59,-55,-58,26,26,-80,26,26,-178,-191,26,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,26,-101,-183,26,26,26,-76,-81,26,-66,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,26,26,-342,26,26,26,26,26,-75,-82,-68,-67,26,-305,26,-307,-309,-310,-345,-346,-347,-341,-343,26,-69,26,-306,-308,-344,-348,26,26,-285,-286,-296,-297,-298,-299,-300,-301,26,-317,26,-302,-290,26,-292,-294,-295,-335,-336,-337,-338,-339,-340,26,26,-288,-289,-319,-321,-284,-304,-291,-293,-329,26,-331,-333,-334,-318,-320,-322,-303,-330,-332,-287,-323,-325,-327,-324,-326,-328,]),'VOLATILE':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,33,36,38,42,47,48,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,75,76,77,79,81,90,94,98,99,100,101,102,103,104,105,106,107,108,110,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,177,182,202,221,224,225,226,232,234,238,239,240,242,253,254,255,256,257,258,259,266,268,293,296,350,353,359,370,371,376,379,390,395,396,397,398,399,403,404,405,409,410,468,483,488,494,495,498,499,510,513,520,523,524,525,526,527,528,529,533,537,550,553,556,557,558,559,560,563,564,565,566,567,568,569,570,572,573,574,576,578,580,581,582,585,586,587,588,589,592,594,595,596,599,600,603,604,611,613,615,616,617,],[27,27,-2,-3,-4,27,27,27,-24,-25,-26,-27,-28,-29,-30,-31,-34,-35,-38,-39,-44,-52,-60,-61,-62,-63,-64,-65,-1,-5,27,-184,27,27,27,27,-32,-33,-37,-36,-41,-43,-40,-42,-45,-46,-49,-53,-54,-57,-77,27,-70,-179,27,-6,27,-100,27,27,-48,-51,-47,-50,-56,-59,-55,-58,27,27,-80,27,27,-178,-191,27,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,27,-101,-183,27,27,27,-76,-81,27,-66,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,27,27,-342,27,27,27,27,27,-75,-82,-68,-67,27,-305,27,-307,-309,-310,-345,-346,-347,-341,-343,27,-69,27,-306,-308,-344,-348,27,27,-285,-286,-296,-297,-298,-299,-300,-301,27,-317,27,-302,-290,27,-292,-294,-295,-335,-336,-337,-338,-339,-340,27,27,-288,-289,-319,-321,-284,-304,-291,-293,-329,27,-331,-333,-334,-318,-320,-322,-303,-330,-332,-287,-323,-325,-327,-324,-326,-328,]),'RESTRICT':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,33,36,38,42,47,48,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,75,76,77,79,81,90,94,98,99,100,101,102,103,104,105,106,107,108,110,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,177,182,202,221,224,225,226,232,234,238,239,240,242,253,254,255,256,257,258,259,266,268,293,296,350,353,359,370,371,376,379,390,395,396,397,398,399,403,404,405,409,410,468,483,488,494,495,498,499,510,513,520,523,524,525,526,527,528,529,533,537,550,553,556,557,558,559,560,563,564,565,566,567,568,569,570,572,573,574,576,578,580,581,582,585,586,587,588,589,592,594,595,596,599,600,603,604,611,613,615,616,617,],[28,28,-2,-3,-4,28,28,28,-24,-25,-26,-27,-28,-29,-30,-31,-34,-35,-38,-39,-44,-52,-60,-61,-62,-63,-64,-65,-1,-5,28,-184,28,28,28,28,-32,-33,-37,-36,-41,-43,-40,-42,-45,-46,-49,-53,-54,-57,-77,28,-70,-179,28,-6,28,-100,28,28,-48,-51,-47,-50,-56,-59,-55,-58,28,28,-80,28,28,-178,-191,28,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,28,-101,-183,28,28,28,-76,-81,28,-66,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,28,28,-342,28,28,28,28,28,-75,-82,-68,-67,28,-305,28,-307,-309,-310,-345,-346,-347,-341,-343,28,-69,28,-306,-308,-344,-348,28,28,-285,-286,-296,-297,-298,-299,-300,-301,28,-317,28,-302,-290,28,-292,-294,-295,-335,-336,-337,-338,-339,-340,28,28,-288,-289,-319,-321,-284,-304,-291,-293,-329,28,-331,-333,-334,-318,-320,-322,-303,-330,-332,-287,-323,-325,-327,-324,-326,-328,]),'ENUM':([0,1,2,3,4,6,8,9,10,11,12,13,26,27,28,33,36,48,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,202,221,224,226,238,239,240,242,253,254,255,256,257,258,259,266,268,293,296,350,353,359,371,395,396,397,398,399,403,404,405,409,410,468,494,495,498,499,510,513,520,523,524,525,526,527,528,529,533,537,550,553,556,557,558,559,560,563,564,565,566,567,568,569,570,572,573,574,576,578,580,581,582,585,586,587,588,589,592,594,595,596,599,600,603,604,611,613,615,616,617,],[30,30,-2,-3,-4,30,30,-24,-25,-26,-27,-28,-63,-64,-65,-1,-5,30,30,-179,30,-6,30,30,30,-80,30,-178,-191,30,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,30,30,30,30,-81,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,30,30,-342,30,30,30,30,30,-82,-305,30,-307,-309,-310,-345,-346,-347,-341,-343,30,-306,-308,-344,-348,30,30,-285,-286,-296,-297,-298,-299,-300,-301,30,-317,30,-302,-290,30,-292,-294,-295,-335,-336,-337,-338,-339,-340,30,30,-288,-289,-319,-321,-284,-304,-291,-293,-329,30,-331,-333,-334,-318,-320,-322,-303,-330,-332,-287,-323,-325,-327,-324,-326,-328,]),'STRUCT':([0,1,2,3,4,6,8,9,10,11,12,13,26,27,28,33,36,48,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,202,221,224,226,238,239,240,242,253,254,255,256,257,258,259,266,268,293,296,350,353,359,371,395,396,397,398,399,403,404,405,409,410,468,494,495,498,499,510,513,520,523,524,525,526,527,528,529,533,537,550,553,556,557,558,559,560,563,564,565,566,567,568,569,570,572,573,574,576,578,580,581,582,585,586,587,588,589,592,594,595,596,599,600,603,604,611,613,615,616,617,],[31,31,-2,-3,-4,31,31,-24,-25,-26,-27,-28,-63,-64,-65,-1,-5,31,31,-179,31,-6,31,31,31,-80,31,-178,-191,31,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,31,31,31,31,-81,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,31,31,-342,31,31,31,31,31,-82,-305,31,-307,-309,-310,-345,-346,-347,-341,-343,31,-306,-308,-344,-348,31,31,-285,-286,-296,-297,-298,-299,-300,-301,31,-317,31,-302,-290,31,-292,-294,-295,-335,-336,-337,-338,-339,-340,31,31,-288,-289,-319,-321,-284,-304,-291,-293,-329,31,-331,-333,-334,-318,-320,-322,-303,-330,-332,-287,-323,-325,-327,-324,-326,-328,]),'UNION':([0,1,2,3,4,6,8,9,10,11,12,13,26,27,28,33,36,48,68,75,76,77,90,106,107,108,111,117,118,119,120,121,122,124,125,126,127,128,129,130,134,202,221,224,226,238,239,240,242,253,254,255,256,257,258,259,266,268,293,296,350,353,359,371,395,396,397,398,399,403,404,405,409,410,468,494,495,498,499,510,513,520,523,524,525,526,527,528,529,533,537,550,553,556,557,558,559,560,563,564,565,566,567,568,569,570,572,573,574,576,578,580,581,582,585,586,587,588,589,592,594,595,596,599,600,603,604,611,613,615,616,617,],[32,32,-2,-3,-4,32,32,-24,-25,-26,-27,-28,-63,-64,-65,-1,-5,32,32,-179,32,-6,32,32,32,-80,32,-178,-191,32,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,32,32,32,32,-81,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,32,32,-342,32,32,32,32,32,-82,-305,32,-307,-309,-310,-345,-346,-347,-341,-343,32,-306,-308,-344,-348,32,32,-285,-286,-296,-297,-298,-299,-300,-301,32,-317,32,-302,-290,32,-292,-294,-295,-335,-336,-337,-338,-339,-340,32,32,-288,-289,-319,-321,-284,-304,-291,-293,-329,32,-331,-333,-334,-318,-320,-322,-303,-330,-332,-287,-323,-325,-327,-324,-326,-328,]),'$end{':([29,30,31,32,35,36,42,67,71,72,76,77,88,91,118,119,120,121,122,124,125,126,127,128,129,130,137,181,182,210,219,238,239,240,242,253,254,255,256,257,258,259,268,323,351,352,364,395,396,397,398,399,403,404,405,409,410,475,477,486,491,492,494,495,498,499,517,520,523,524,525,526,527,528,529,533,535,537,539,540,541,543,552,553,555,556,557,558,559,560,563,564,565,566,567,568,569,572,573,574,575,576,577,578,579,580,581,582,585,586,587,588,589,592,593,594,595,596,597,599,600,603,604,606,608,611,612,613,614,615,616,617,],[68,70,-78,-79,76,-5,-184,106,116,76,76,-6,-182,219,-191,76,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,259,-181,-183,-185,219,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,259,-342,-180,-186,-187,219,-305,259,-307,-309,-310,-345,-346,-347,-341,-343,219,-358,76,533,259,-306,-308,-344,-348,219,-285,-286,-296,-297,-298,-299,-300,-301,533,569,-317,259,569,259,259,76,-302,76,-290,533,-292,-294,-295,-335,-336,-337,-338,-339,-340,569,-288,-289,-319,259,-321,259,-284,76,-304,-291,-293,-329,569,-331,-333,-334,-318,259,-320,-322,-303,569,-330,-332,-287,-323,569,569,-325,569,-327,569,-324,-326,-328,]),'}':([36,42,76,77,107,108,113,114,115,118,119,120,121,122,124,125,126,127,128,129,130,142,143,144,145,149,151,152,159,160,161,162,163,164,165,166,167,168,169,170,182,187,188,189,190,191,192,193,194,195,196,197,200,201,203,206,207,218,220,224,226,235,237,238,239,240,242,253,254,255,256,257,258,259,268,287,290,291,292,294,295,298,299,348,349,362,363,371,377,378,380,381,386,388,395,396,397,398,399,403,404,405,409,410,411,413,415,416,420,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,461,474,475,476,484,487,494,495,498,499,503,504,505,507,509,515,516,520,523,524,525,526,527,528,529,533,537,545,546,551,553,556,557,558,559,560,563,564,565,566,567,568,569,572,573,574,576,578,580,581,582,585,586,587,588,589,592,594,595,596,599,600,603,604,611,613,615,616,617,],[-5,-184,118,-6,225,-80,234,-71,-73,-191,238,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,-208,-251,-221,-257,-247,-223,-268,-225,-227,-229,-231,-233,-236,-241,-244,-252,-254,-281,-282,-183,-117,-118,-120,-122,-124,-126,-128,-130,-133,-138,-141,-144,-148,-157,-165,-166,-355,-276,370,-81,376,379,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,395,-342,-258,-259,-260,-251,-261,-255,-274,-275,-158,-159,474,-351,-82,-72,-74,483,-270,-277,-283,-305,494,-307,-309,-310,-345,-346,-347,-341,-343,-209,-224,-272,-273,-226,-279,-280,-228,-230,-232,-234,-235,-237,-238,-239,-240,-242,-243,-245,-246,-248,-249,-250,-121,-123,-125,-127,-129,-131,-132,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-167,-356,515,-352,-271,-253,-306,-308,-344,-348,-269,-256,-278,-149,-160,-357,-353,-285,-286,-296,-297,-298,-299,-300,-301,556,-317,-222,-119,-354,-302,-290,581,-292,-294,-295,-335,-336,-337,-338,-339,-340,585,-288,-289,-319,-321,-284,-304,-291,-293,-329,599,-331,-333,-334,-318,-320,-322,-303,-330,-332,-287,-323,-325,-327,-324,-326,-328,]),'IF':([36,76,77,118,119,120,121,122,124,125,126,127,128,129,130,137,238,239,240,242,253,254,255,256,257,258,259,268,395,396,397,398,399,403,404,405,409,410,486,491,492,494,495,498,499,520,523,524,525,526,527,528,529,533,535,537,539,540,541,543,552,553,555,556,557,558,559,560,563,564,565,566,567,568,569,572,573,574,575,576,577,578,579,580,581,582,585,586,587,588,589,592,593,594,595,596,597,599,600,603,604,606,608,611,612,613,614,615,616,617,],[-5,133,-6,-191,133,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,260,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,260,-342,-305,260,-307,-309,-310,-345,-346,-347,-341,-343,133,133,260,-306,-308,-344,-348,-285,-286,-296,-297,-298,-299,-300,-301,133,260,-317,260,260,260,260,133,-302,133,-290,133,-292,-294,-295,-335,-336,-337,-338,-339,-340,260,-288,-289,-319,260,-321,260,-284,133,-304,-291,-293,-329,260,-331,-333,-334,-318,260,-320,-322,-303,260,-330,-332,-287,-323,260,260,-325,260,-327,260,-324,-326,-328,]),'SWITCH':([36,76,77,118,119,120,121,122,124,125,126,127,128,129,130,137,238,239,240,242,253,254,255,256,257,258,259,268,395,396,397,398,399,403,404,405,409,410,486,491,492,494,495,498,499,520,523,524,525,526,527,528,529,533,535,537,539,540,541,543,552,553,555,556,557,558,559,560,563,564,565,566,567,568,569,572,573,574,575,576,577,578,579,580,581,582,585,586,587,588,589,592,593,594,595,596,597,599,600,603,604,606,608,611,612,613,614,615,616,617,],[-5,135,-6,-191,135,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,261,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,261,-342,-305,261,-307,-309,-310,-345,-346,-347,-341,-343,135,135,261,-306,-308,-344,-348,-285,-286,-296,-297,-298,-299,-300,-301,135,261,-317,261,261,261,261,135,-302,135,-290,135,-292,-294,-295,-335,-336,-337,-338,-339,-340,261,-288,-289,-319,261,-321,261,-284,135,-304,-291,-293,-329,261,-331,-333,-334,-318,261,-320,-322,-303,261,-330,-332,-287,-323,261,261,-325,261,-327,261,-324,-326,-328,]),'WHILE':([36,76,77,118,119,120,121,122,124,125,126,127,128,129,130,137,238,239,240,242,252,253,254,255,256,257,258,259,268,395,396,397,398,399,403,404,405,409,410,486,491,492,494,495,498,499,520,523,524,525,526,527,528,529,533,535,537,539,540,541,543,552,553,555,556,557,558,559,560,562,563,564,565,566,567,568,569,572,573,574,575,576,577,578,579,580,581,582,585,586,587,588,589,592,593,594,595,596,597,599,600,603,604,606,608,611,612,613,614,615,616,617,],[-5,136,-6,-191,136,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,136,-192,-194,-203,-205,394,-311,-312,-313,-314,-315,-316,136,-342,-305,136,-307,-309,-310,-345,-346,-347,-341,-343,136,534,136,-306,-308,-344,-348,-285,-286,-296,-297,-298,-299,-300,-301,534,534,-317,136,534,136,136,136,-302,136,-290,534,-292,-294,-295,584,-335,-336,-337,-338,-339,-340,534,-288,-289,-319,136,-321,136,-284,136,-304,-291,-293,-329,534,-331,-333,-334,-318,136,-320,-322,-303,534,-330,-332,-287,-323,534,534,-325,534,-327,534,-324,-326,-328,]),'DO':([36,76,77,118,119,120,121,122,124,125,126,127,128,129,130,137,238,239,240,242,253,254,255,256,257,258,259,268,395,396,397,398,399,403,404,405,409,410,486,491,492,494,495,498,499,520,523,524,525,526,527,528,529,533,535,537,539,540,541,543,552,553,555,556,557,558,559,560,563,564,565,566,567,568,569,572,573,574,575,576,577,578,579,580,581,582,585,586,587,588,589,592,593,594,595,596,597,599,600,603,604,606,608,611,612,613,614,615,616,617,],[-5,137,-6,-191,137,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,137,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,137,-342,-305,137,-307,-309,-310,-345,-346,-347,-341,-343,137,535,137,-306,-308,-344,-348,-285,-286,-296,-297,-298,-299,-300,-301,535,535,-317,137,535,137,137,137,-302,137,-290,535,-292,-294,-295,-335,-336,-337,-338,-339,-340,535,-288,-289,-319,137,-321,137,-284,137,-304,-291,-293,-329,535,-331,-333,-334,-318,137,-320,-322,-303,535,-330,-332,-287,-323,535,535,-325,535,-327,535,-324,-326,-328,]),'FOR':([36,76,77,118,119,120,121,122,124,125,126,127,128,129,130,137,238,239,240,242,253,254,255,256,257,258,259,268,395,396,397,398,399,403,404,405,409,410,486,491,492,494,495,498,499,520,523,524,525,526,527,528,529,533,535,537,539,540,541,543,552,553,555,556,557,558,559,560,563,564,565,566,567,568,569,572,573,574,575,576,577,578,579,580,581,582,585,586,587,588,589,592,593,594,595,596,597,599,600,603,604,606,608,611,612,613,614,615,616,617,],[-5,138,-6,-191,138,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,138,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,138,-342,-305,138,-307,-309,-310,-345,-346,-347,-341,-343,138,536,138,-306,-308,-344,-348,-285,-286,-296,-297,-298,-299,-300,-301,536,536,-317,138,536,138,138,138,-302,138,-290,536,-292,-294,-295,-335,-336,-337,-338,-339,-340,536,-288,-289,-319,138,-321,138,-284,138,-304,-291,-293,-329,536,-331,-333,-334,-318,138,-320,-322,-303,536,-330,-332,-287,-323,536,536,-325,536,-327,536,-324,-326,-328,]),'GOTO':([36,76,77,118,119,120,121,122,124,125,126,127,128,129,130,137,238,239,240,242,253,254,255,256,257,258,259,268,395,396,397,398,399,403,404,405,409,410,486,491,492,494,495,498,499,520,523,524,525,526,527,528,529,533,535,537,539,540,541,543,552,553,555,556,557,558,559,560,563,564,565,566,567,568,569,572,573,574,575,576,577,578,579,580,581,582,585,586,587,588,589,592,593,594,595,596,597,599,600,603,604,606,608,611,612,613,614,615,616,617,],[-5,139,-6,-191,139,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,262,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,262,-342,-305,262,-307,-309,-310,-345,-346,-347,-341,-343,139,139,262,-306,-308,-344,-348,-285,-286,-296,-297,-298,-299,-300,-301,139,262,-317,262,262,262,262,139,-302,139,-290,139,-292,-294,-295,-335,-336,-337,-338,-339,-340,262,-288,-289,-319,262,-321,262,-284,139,-304,-291,-293,-329,262,-331,-333,-334,-318,262,-320,-322,-303,262,-330,-332,-287,-323,262,262,-325,262,-327,262,-324,-326,-328,]),'RETURN':([36,76,77,118,119,120,121,122,124,125,126,127,128,129,130,137,238,239,240,242,253,254,255,256,257,258,259,268,395,396,397,398,399,403,404,405,409,410,486,491,492,494,495,498,499,520,523,524,525,526,527,528,529,533,535,537,539,540,541,543,552,553,555,556,557,558,559,560,563,564,565,566,567,568,569,572,573,574,575,576,577,578,579,580,581,582,585,586,587,588,589,592,593,594,595,596,597,599,600,603,604,606,608,611,612,613,614,615,616,617,],[-5,140,-6,-191,140,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,265,-192,-194,-203,-205,-311,-312,-313,-314,-315,-316,265,-342,-305,265,-307,-309,-310,-345,-346,-347,-341,-343,140,140,265,-306,-308,-344,-348,-285,-286,-296,-297,-298,-299,-300,-301,140,265,-317,265,265,265,265,140,-302,140,-290,140,-292,-294,-295,-335,-336,-337,-338,-339,-340,265,-288,-289,-319,265,-321,265,-284,140,-304,-291,-293,-329,265,-331,-333,-334,-318,265,-320,-322,-303,265,-330,-332,-287,-323,265,265,-325,265,-327,265,-324,-326,-328,]),'INC':([36,42,76,77,91,118,119,120,121,122,124,125,126,127,128,129,130,131,134,137,140,146,147,148,150,152,153,154,155,156,157,158,182,219,220,221,238,239,240,241,242,243,244,245,246,250,251,253,254,255,256,257,258,259,265,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,288,293,296,297,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,364,386,387,395,396,397,398,399,400,401,403,404,405,407,408,409,410,422,423,475,477,485,486,491,492,493,494,495,498,499,500,501,502,505,517,520,523,524,525,526,527,528,529,530,533,535,537,539,540,541,543,552,553,555,556,557,558,559,560,561,563,564,565,566,567,568,569,570,572,573,574,575,576,577,578,579,580,581,582,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,606,608,611,612,613,614,615,616,617,],[-5,-184,146,-6,146,-191,146,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,-276,146,146,146,146,146,146,146,298,-262,-263,-264,-265,-266,-267,-183,146,-276,146,-192,-194,-203,146,-205,146,146,-276,298,146,146,-311,-312,-313,-314,-315,-316,146,146,146,-342,146,-210,-211,-212,-213,-214,-215,-216,-217,-218,-219,-220,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,-277,146,-305,146,-307,-309,-310,146,146,-345,-346,-347,146,146,-341,-343,-279,-280,146,-358,146,146,146,146,146,-306,-308,-344,-348,146,146,146,-278,146,-285,-286,-296,-297,-298,-299,-300,-301,-184,146,146,-317,146,146,146,146,146,-302,146,-290,146,-292,-294,-295,146,-335,-336,-337,-338,-339,-340,146,146,-288,-289,-319,146,-321,146,-284,146,-304,-291,-293,-329,146,-331,-333,-334,146,146,-318,146,-320,-322,-303,146,146,-330,-332,146,146,-287,-323,146,146,-325,146,-327,146,-324,-326,-328,]),'DEC':([36,42,76,77,91,118,119,120,121,122,124,125,126,127,128,129,130,131,134,137,140,146,147,148,150,152,153,154,155,156,157,158,182,219,220,221,238,239,240,241,242,243,244,245,246,250,251,253,254,255,256,257,258,259,265,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,288,293,296,297,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,364,386,387,395,396,397,398,399,400,401,403,404,405,407,408,409,410,422,423,475,477,485,486,491,492,493,494,495,498,499,500,501,502,505,517,520,523,524,525,526,527,528,529,530,533,535,537,539,540,541,543,552,553,555,556,557,558,559,560,561,563,564,565,566,567,568,569,570,572,573,574,575,576,577,578,579,580,581,582,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,606,608,611,612,613,614,615,616,617,],[-5,-184,147,-6,147,-191,147,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,-276,147,147,147,147,147,147,147,299,-262,-263,-264,-265,-266,-267,-183,147,-276,147,-192,-194,-203,147,-205,147,147,-276,299,147,147,-311,-312,-313,-314,-315,-316,147,147,147,-342,147,-210,-211,-212,-213,-214,-215,-216,-217,-218,-219,-220,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,-277,147,-305,147,-307,-309,-310,147,147,-345,-346,-347,147,147,-341,-343,-279,-280,147,-358,147,147,147,147,147,-306,-308,-344,-348,147,147,147,-278,147,-285,-286,-296,-297,-298,-299,-300,-301,-184,147,147,-317,147,147,147,147,147,-302,147,-290,147,-292,-294,-295,147,-335,-336,-337,-338,-339,-340,147,147,-288,-289,-319,147,-321,147,-284,147,-304,-291,-293,-329,147,-331,-333,-334,147,147,-318,147,-320,-322,-303,147,147,-330,-332,147,147,-287,-323,147,147,-325,147,-327,147,-324,-326,-328,]),'SIZEOF':([36,76,77,89,91,92,118,119,120,121,122,124,125,126,127,128,129,130,134,137,140,146,147,148,150,153,154,155,156,157,158,198,199,202,204,205,208,209,219,221,230,236,238,239,240,241,242,243,244,250,251,253,254,255,256,257,258,259,265,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,288,293,296,297,300,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,350,354,360,364,367,373,387,395,396,397,398,399,400,401,403,404,405,407,408,409,410,460,462,467,475,477,485,486,491,492,493,494,495,498,499,500,501,502,506,517,520,523,524,525,526,527,528,529,531,533,535,537,539,540,541,543,552,553,555,556,557,558,559,560,561,563,564,565,566,567,568,569,570,572,573,574,575,576,577,578,579,580,581,582,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,606,608,611,612,613,614,615,616,617,],[-5,150,-6,205,150,205,-191,150,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,150,150,150,288,288,150,150,-262,-263,-264,-265,-266,-267,-161,-162,205,205,205,-163,-164,150,150,205,205,-192,-194,-203,150,-205,150,150,150,150,-311,-312,-313,-314,-315,-316,150,150,150,-342,150,-210,-211,-212,-213,-214,-215,-216,-217,-218,-219,-220,150,150,205,288,150,150,150,205,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,150,205,205,150,-305,150,-307,-309,-310,150,150,-345,-346,-347,150,150,-341,-343,205,205,205,150,-358,150,150,150,150,150,-306,-308,-344,-348,150,150,150,205,150,-285,-286,-296,-297,-298,-299,-300,-301,205,150,150,-317,150,150,150,150,150,-302,150,-290,150,-292,-294,-295,150,-335,-336,-337,-338,-339,-340,150,150,-288,-289,-319,150,-321,150,-284,150,-304,-291,-293,-329,150,-331,-333,-334,150,150,-318,150,-320,-322,-303,150,150,-330,-332,150,150,-287,-323,150,150,-325,150,-327,150,-324,-326,-328,]),'&':([36,42,76,77,91,118,119,120,121,122,124,125,126,127,128,129,130,131,134,137,140,143,145,146,147,148,149,150,152,153,154,155,156,157,158,161,162,163,164,165,166,167,168,169,170,182,192,193,194,195,196,197,200,201,203,206,207,219,220,221,238,239,240,241,242,243,244,245,246,250,251,253,254,255,256,257,258,259,265,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,287,288,290,291,292,293,294,295,296,297,298,299,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,348,349,364,381,386,387,388,395,396,397,398,399,400,401,403,404,405,407,408,409,410,415,416,422,423,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,461,475,477,484,485,486,487,491,492,493,494,495,498,499,500,501,502,503,504,505,507,509,517,520,523,524,525,526,527,528,529,530,533,535,537,539,540,541,543,552,553,555,556,557,558,559,560,561,563,564,565,566,567,568,569,570,572,573,574,575,576,577,578,579,580,581,582,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,606,608,611,612,613,614,615,616,617,],[-5,-184,153,-6,153,-191,153,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,-276,153,153,153,-251,-257,153,153,153,-247,153,-268,-262,-263,-264,-265,-266,-267,305,-231,-233,-236,-241,-244,-252,-254,-281,-282,-183,331,-128,-130,-133,-138,-141,-144,-148,-157,-165,-166,153,-276,153,-192,-194,-203,153,-205,153,153,-276,-268,153,153,-311,-312,-313,-314,-315,-316,153,153,153,-342,153,-210,-211,-212,-213,-214,-215,-216,-217,-218,-219,-220,153,153,-258,153,-259,-260,-251,153,-261,-255,153,153,-274,-275,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,-158,-159,153,-270,-277,153,-283,-305,153,-307,-309,-310,153,153,-345,-346,-347,153,153,-341,-343,-272,-273,-279,-280,305,-232,-234,-235,-237,-238,-239,-240,-242,-243,-245,-246,-248,-249,-250,331,-129,-131,-132,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-167,153,-358,-271,153,153,-253,153,153,153,-306,-308,-344,-348,153,153,153,-269,-256,-278,-149,-160,153,-285,-286,-296,-297,-298,-299,-300,-301,-184,153,153,-317,153,153,153,153,153,-302,153,-290,153,-292,-294,-295,153,-335,-336,-337,-338,-339,-340,153,153,-288,-289,-319,153,-321,153,-284,153,-304,-291,-293,-329,153,-331,-333,-334,153,153,-318,153,-320,-322,-303,153,153,-330,-332,153,153,-287,-323,153,153,-325,153,-327,153,-324,-326,-328,]),'+':([36,42,76,77,89,91,92,118,119,120,121,122,124,125,126,127,128,129,130,131,134,137,140,143,145,146,147,148,149,150,152,153,154,155,156,157,158,165,166,167,168,169,170,182,196,197,198,199,200,201,202,203,204,205,206,207,208,209,219,220,221,230,236,238,239,240,241,242,243,244,245,246,250,251,253,254,255,256,257,258,259,265,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,287,288,290,291,292,293,294,295,296,297,298,299,300,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,348,349,350,354,360,364,367,373,381,386,387,388,395,396,397,398,399,400,401,403,404,405,407,408,409,410,415,416,422,423,433,434,435,436,437,438,439,453,454,455,456,457,458,459,460,461,462,467,475,477,484,485,486,487,491,492,493,494,495,498,499,500,501,502,503,504,505,506,507,509,517,520,523,524,525,526,527,528,529,530,531,533,535,537,539,540,541,543,552,553,555,556,557,558,559,560,561,563,564,565,566,567,568,569,570,572,573,574,575,576,577,578,579,580,581,582,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,606,608,611,612,613,614,615,616,617,],[-5,-184,155,-6,198,155,198,-191,155,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,-276,155,155,155,-251,-257,155,155,155,-247,155,-268,-262,-263,-264,-265,-266,-267,314,-244,-252,-254,-281,-282,-183,340,-141,-161,-162,-144,-148,198,-157,198,198,-165,-166,-163,-164,155,-276,155,198,198,-192,-194,-203,155,-205,155,155,-276,-268,155,155,-311,-312,-313,-314,-315,-316,155,155,155,-342,155,-210,-211,-212,-213,-214,-215,-216,-217,-218,-219,-220,155,155,198,-258,155,-259,-260,-251,155,-261,-255,155,155,-274,-275,198,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,-158,-159,198,198,198,155,198,198,-270,-277,155,-283,-305,155,-307,-309,-310,155,155,-345,-346,-347,155,155,-341,-343,-272,-273,-279,-280,314,314,-245,-246,-248,-249,-250,340,340,-142,-143,-145,-146,-147,198,-167,198,198,155,-358,-271,155,155,-253,155,155,155,-306,-308,-344,-348,155,155,155,-269,-256,-278,198,-149,-160,155,-285,-286,-296,-297,-298,-299,-300,-301,-184,198,155,155,-317,155,155,155,155,155,-302,155,-290,155,-292,-294,-295,155,-335,-336,-337,-338,-339,-340,155,155,-288,-289,-319,155,-321,155,-284,155,-304,-291,-293,-329,155,-331,-333,-334,155,155,-318,155,-320,-322,-303,155,155,-330,-332,155,155,-287,-323,155,155,-325,155,-327,155,-324,-326,-328,]),'-':([36,42,76,77,89,91,92,118,119,120,121,122,124,125,126,127,128,129,130,131,134,137,140,143,145,146,147,148,149,150,152,153,154,155,156,157,158,165,166,167,168,169,170,182,196,197,198,199,200,201,202,203,204,205,206,207,208,209,219,220,221,230,236,238,239,240,241,242,243,244,245,246,250,251,253,254,255,256,257,258,259,265,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,287,288,290,291,292,293,294,295,296,297,298,299,300,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,348,349,350,354,360,364,367,373,381,386,387,388,395,396,397,398,399,400,401,403,404,405,407,408,409,410,415,416,422,423,433,434,435,436,437,438,439,453,454,455,456,457,458,459,460,461,462,467,475,477,484,485,486,487,491,492,493,494,495,498,499,500,501,502,503,504,505,506,507,509,517,520,523,524,525,526,527,528,529,530,531,533,535,537,539,540,541,543,552,553,555,556,557,558,559,560,561,563,564,565,566,567,568,569,570,572,573,574,575,576,577,578,579,580,581,582,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,606,608,611,612,613,614,615,616,617,],[-5,-184,156,-6,199,156,199,-191,156,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,-276,156,156,156,-251,-257,156,156,156,-247,156,-268,-262,-263,-264,-265,-266,-267,315,-244,-252,-254,-281,-282,-183,341,-141,-161,-162,-144,-148,199,-157,199,199,-165,-166,-163,-164,156,-276,156,199,199,-192,-194,-203,156,-205,156,156,-276,-268,156,156,-311,-312,-313,-314,-315,-316,156,156,156,-342,156,-210,-211,-212,-213,-214,-215,-216,-217,-218,-219,-220,156,156,199,-258,156,-259,-260,-251,156,-261,-255,156,156,-274,-275,199,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,-158,-159,199,199,199,156,199,199,-270,-277,156,-283,-305,156,-307,-309,-310,156,156,-345,-346,-347,156,156,-341,-343,-272,-273,-279,-280,315,315,-245,-246,-248,-249,-250,341,341,-142,-143,-145,-146,-147,199,-167,199,199,156,-358,-271,156,156,-253,156,156,156,-306,-308,-344,-348,156,156,156,-269,-256,-278,199,-149,-160,156,-285,-286,-296,-297,-298,-299,-300,-301,-184,199,156,156,-317,156,156,156,156,156,-302,156,-290,156,-292,-294,-295,156,-335,-336,-337,-338,-339,-340,156,156,-288,-289,-319,156,-321,156,-284,156,-304,-291,-293,-329,156,-331,-333,-334,156,156,-318,156,-320,-322,-303,156,156,-330,-332,156,156,-287,-323,156,156,-325,156,-327,156,-324,-326,-328,]),'~':([36,76,77,89,91,92,118,119,120,121,122,124,125,126,127,128,129,130,134,137,140,146,147,148,150,153,154,155,156,157,158,198,199,202,204,205,208,209,219,221,230,236,238,239,240,241,242,243,244,250,251,253,254,255,256,257,258,259,265,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,288,293,296,297,300,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,350,354,360,364,367,373,387,395,396,397,398,399,400,401,403,404,405,407,408,409,410,460,462,467,475,477,485,486,491,492,493,494,495,498,499,500,501,502,506,517,520,523,524,525,526,527,528,529,531,533,535,537,539,540,541,543,552,553,555,556,557,558,559,560,561,563,564,565,566,567,568,569,570,572,573,574,575,576,577,578,579,580,581,582,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,606,608,611,612,613,614,615,616,617,],[-5,157,-6,208,157,208,-191,157,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,157,157,157,157,157,157,157,-262,-263,-264,-265,-266,-267,-161,-162,208,208,208,-163,-164,157,157,208,208,-192,-194,-203,157,-205,157,157,157,157,-311,-312,-313,-314,-315,-316,157,157,157,-342,157,-210,-211,-212,-213,-214,-215,-216,-217,-218,-219,-220,157,157,208,157,157,157,157,208,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,157,208,208,157,-305,157,-307,-309,-310,157,157,-345,-346,-347,157,157,-341,-343,208,208,208,157,-358,157,157,157,157,157,-306,-308,-344,-348,157,157,157,208,157,-285,-286,-296,-297,-298,-299,-300,-301,208,157,157,-317,157,157,157,157,157,-302,157,-290,157,-292,-294,-295,157,-335,-336,-337,-338,-339,-340,157,157,-288,-289,-319,157,-321,157,-284,157,-304,-291,-293,-329,157,-331,-333,-334,157,157,-318,157,-320,-322,-303,157,157,-330,-332,157,157,-287,-323,157,157,-325,157,-327,157,-324,-326,-328,]),'!':([36,76,77,89,91,92,118,119,120,121,122,124,125,126,127,128,129,130,134,137,140,146,147,148,150,153,154,155,156,157,158,198,199,202,204,205,208,209,219,221,230,236,238,239,240,241,242,243,244,250,251,253,254,255,256,257,258,259,265,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,288,293,296,297,300,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,350,354,360,364,367,373,387,395,396,397,398,399,400,401,403,404,405,407,408,409,410,460,462,467,475,477,485,486,491,492,493,494,495,498,499,500,501,502,506,517,520,523,524,525,526,527,528,529,531,533,535,537,539,540,541,543,552,553,555,556,557,558,559,560,561,563,564,565,566,567,568,569,570,572,573,574,575,576,577,578,579,580,581,582,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,606,608,611,612,613,614,615,616,617,],[-5,158,-6,209,158,209,-191,158,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,158,158,158,158,158,158,158,-262,-263,-264,-265,-266,-267,-161,-162,209,209,209,-163,-164,158,158,209,209,-192,-194,-203,158,-205,158,158,158,158,-311,-312,-313,-314,-315,-316,158,158,158,-342,158,-210,-211,-212,-213,-214,-215,-216,-217,-218,-219,-220,158,158,209,158,158,158,158,209,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,158,209,209,158,-305,158,-307,-309,-310,158,158,-345,-346,-347,158,158,-341,-343,209,209,209,158,-358,158,158,158,158,158,-306,-308,-344,-348,158,158,158,209,158,-285,-286,-296,-297,-298,-299,-300,-301,209,158,158,-317,158,158,158,158,158,-302,158,-290,158,-292,-294,-295,158,-335,-336,-337,-338,-339,-340,158,158,-288,-289,-319,158,-321,158,-284,158,-304,-291,-293,-329,158,-331,-333,-334,158,158,-318,158,-320,-322,-303,158,158,-330,-332,158,158,-287,-323,158,158,-325,158,-327,158,-324,-326,-328,]),'CONSTANCE':([36,76,77,89,91,92,118,119,120,121,122,124,125,126,127,128,129,130,134,137,140,148,150,153,154,155,156,157,158,198,199,202,204,205,208,209,219,221,230,236,238,239,240,241,242,243,244,250,251,253,254,255,256,257,258,259,265,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,293,296,297,300,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,350,354,360,364,367,373,387,395,396,397,398,399,400,401,403,404,405,407,408,409,410,460,462,467,475,477,485,486,491,492,493,494,495,498,499,500,501,502,506,517,520,523,524,525,526,527,528,529,531,533,535,537,539,540,541,543,552,553,555,556,557,558,559,560,561,563,564,565,566,567,568,569,570,572,573,574,575,576,577,578,579,580,581,582,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,606,608,611,612,613,614,615,616,617,],[-5,169,-6,206,169,206,-191,169,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,169,169,169,169,169,-262,-263,-264,-265,-266,-267,-161,-162,206,206,206,-163,-164,169,169,206,206,-192,-194,-203,169,-205,169,169,169,169,-311,-312,-313,-314,-315,-316,169,169,169,-342,169,-210,-211,-212,-213,-214,-215,-216,-217,-218,-219,-220,169,169,206,169,169,169,206,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,169,206,206,169,-305,169,-307,-309,-310,169,169,-345,-346,-347,169,169,-341,-343,206,206,206,169,-358,169,169,169,169,169,-306,-308,-344,-348,169,169,169,206,169,-285,-286,-296,-297,-298,-299,-300,-301,206,169,169,-317,169,169,169,169,169,-302,169,-290,169,-292,-294,-295,169,-335,-336,-337,-338,-339,-340,169,169,-288,-289,-319,169,-321,169,-284,169,-304,-291,-293,-329,169,-331,-333,-334,169,169,-318,169,-320,-322,-303,169,169,-330,-332,169,169,-287,-323,169,169,-325,169,-327,169,-324,-326,-328,]),'STRING_LITERAL':([36,76,77,89,91,92,118,119,120,121,122,124,125,126,127,128,129,130,134,137,140,148,150,153,154,155,156,157,158,198,199,202,204,205,208,209,219,221,230,236,238,239,240,241,242,243,244,250,251,253,254,255,256,257,258,259,265,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,293,296,297,300,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,350,354,360,364,367,373,387,395,396,397,398,399,400,401,403,404,405,407,408,409,410,460,462,467,475,477,485,486,491,492,493,494,495,498,499,500,501,502,506,517,520,523,524,525,526,527,528,529,531,533,535,537,539,540,541,543,552,553,555,556,557,558,559,560,561,563,564,565,566,567,568,569,570,572,573,574,575,576,577,578,579,580,581,582,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,606,608,611,612,613,614,615,616,617,],[-5,170,-6,207,170,207,-191,170,-193,-195,-196,-204,-197,-198,-199,-200,-201,-202,170,170,170,170,170,-262,-263,-264,-265,-266,-267,-161,-162,207,207,207,-163,-164,170,170,207,207,-192,-194,-203,170,-205,170,170,170,170,-311,-312,-313,-314,-315,-316,170,170,170,-342,170,-210,-211,-212,-213,-214,-215,-216,-217,-218,-219,-220,170,170,207,170,170,170,207,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,170,207,207,170,-305,170,-307,-309,-310,170,170,-345,-346,-347,170,170,-341,-343,207,207,207,170,-358,170,170,170,170,170,-306,-308,-344,-348,170,170,170,207,170,-285,-286,-296,-297,-298,-299,-300,-301,207,170,170,-317,170,170,170,170,170,-302,170,-290,170,-292,-294,-295,170,-335,-336,-337,-338,-339,-340,170,170,-288,-289,-319,170,-321,170,-284,170,-304,-291,-293,-329,170,-331,-333,-334,170,170,-318,170,-320,-322,-303,170,170,-330,-332,170,170,-287,-323,170,170,-325,170,-327,170,-324,-326,-328,]),'CONTINUE':([36,77,118,124,125,126,127,128,129,130,137,238,240,242,253,254,255,256,257,258,259,268,395,396,397,398,399,403,404,405,409,410,492,494,495,498,499,520,523,524,525,526,527,528,529,535,537,539,540,541,543,553,556,563,564,565,566,567,568,569,572,573,574,575,576,577,578,580,581,585,586,587,588,589,592,593,594,595,596,597,599,600,603,604,606,608,611,612,613,614,615,616,617,],[-5,-6,-191,-204,-197,-198,-199,-200,-201,-202,263,-192,-203,-205,-311,-312,-313,-314,-315,-316,263,-342,-305,263,-307,-309,-310,-345,-346,-347,-341,-343,263,-306,-308,-344,-348,-285,-286,-296,-297,-298,-299,-300,-301,263,-317,263,263,263,263,-302,-290,-335,-336,-337,-338,-339,-340,263,-288,-289,-319,263,-321,263,-284,-304,-291,-329,263,-331,-333,-334,-318,263,-320,-322,-303,263,-330,-332,-287,-323,263,263,-325,263,-327,263,-324,-326,-328,]),'BREAK':([36,77,118,124,125,126,127,128,129,130,137,238,240,242,253,254,255,256,257,258,259,268,395,396,397,398,399,403,404,405,409,410,492,494,495,498,499,520,523,524,525,526,527,528,529,535,537,539,540,541,543,553,556,563,564,565,566,567,568,569,572,573,574,575,576,577,578,580,581,585,586,587,588,589,592,593,594,595,596,597,599,600,603,604,606,608,611,612,613,614,615,616,617,],[-5,-6,-191,-204,-197,-198,-199,-200,-201,-202,264,-192,-203,-205,-311,-312,-313,-314,-315,-316,264,-342,-305,264,-307,-309,-310,-345,-346,-347,-341,-343,264,-306,-308,-344,-348,-285,-286,-296,-297,-298,-299,-300,-301,264,-317,264,264,264,264,-302,-290,-335,-336,-337,-338,-339,-340,264,-288,-289,-319,264,-321,264,-284,-304,-291,-329,264,-331,-333,-334,-318,264,-320,-322,-303,264,-330,-332,-287,-323,264,264,-325,264,-327,264,-324,-326,-328,]),'CASE':([36,77,118,124,125,126,127,128,129,130,238,240,242,253,254,255,256,257,258,268,395,403,404,405,409,410,491,494,498,499,520,523,524,525,526,527,528,529,533,535,537,540,553,556,557,558,559,560,563,564,565,566,567,568,569,572,573,574,576,578,580,581,582,585,586,587,588,589,592,594,595,596,597,599,600,603,604,606,608,611,612,613,614,615,616,617,],[-5,-6,-191,-204,-197,-198,-199,-200,-201,-202,-192,-203,-205,-311,-312,-313,-314,-315,-316,-342,-305,-345,-346,-347,-341,-343,531,-306,-344,-348,-285,-286,-296,-297,-298,-299,-300,-301,531,531,-317,531,-302,-290,531,-292,-294,-295,-335,-336,-337,-338,-339,-340,531,-288,-289,-319,-321,-284,-304,-291,-293,-329,531,-331,-333,-334,-318,-320,-322,-303,531,-330,-332,-287,-323,531,531,-325,531,-327,531,-324,-326,-328,]),'DEFAULT':([36,77,118,124,125,126,127,128,129,130,238,240,242,253,254,255,256,257,258,268,395,403,404,405,409,410,491,494,498,499,520,523,524,525,526,527,528,529,533,535,537,540,553,556,557,558,559,560,563,564,565,566,567,568,569,572,573,574,576,578,580,581,582,585,586,587,588,589,592,594,595,596,597,599,600,603,604,606,608,611,612,613,614,615,616,617,],[-5,-6,-191,-204,-197,-198,-199,-200,-201,-202,-192,-203,-205,-311,-312,-313,-314,-315,-316,-342,-305,-345,-346,-347,-341,-343,532,-306,-344,-348,-285,-286,-296,-297,-298,-299,-300,-301,532,532,-317,532,-302,-290,532,-292,-294,-295,-335,-336,-337,-338,-339,-340,532,-288,-289,-319,-321,-284,-304,-291,-293,-329,532,-331,-333,-334,-318,-320,-322,-303,532,-330,-332,-287,-323,532,532,-325,532,-327,532,-324,-326,-328,]),'.':([42,131,145,152,182,219,220,245,246,298,299,365,366,381,386,415,416,417,418,422,423,475,478,480,484,503,505,518,530,],[-184,-276,285,301,-183,368,-276,-276,301,-274,-275,368,-359,-270,-277,-272,-273,301,-276,-279,-280,368,-360,-362,-271,-269,-278,-361,-184,]),'PTR':([42,131,145,152,182,220,245,246,298,299,381,386,415,416,417,418,422,423,484,503,505,530,],[-184,-276,286,302,-183,-276,-276,302,-274,-275,-270,-277,-272,-273,302,-276,-279,-280,-271,-269,-278,-184,]),'AO_MUL':([42,131,143,145,152,167,168,169,170,182,220,245,246,287,290,291,292,294,295,298,299,381,386,388,415,416,422,423,484,487,503,504,505,530,],[-184,-276,272,-257,-268,-252,-254,-281,-282,-183,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-270,-277,-283,-272,-273,-279,-280,-271,-253,-269,-256,-278,-184,]),'AO_DIV':([42,131,143,145,152,167,168,169,170,182,220,245,246,287,290,291,292,294,295,298,299,381,386,388,415,416,422,423,484,487,503,504,505,530,],[-184,-276,273,-257,-268,-252,-254,-281,-282,-183,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-270,-277,-283,-272,-273,-279,-280,-271,-253,-269,-256,-278,-184,]),'AO_MOD':([42,131,143,145,152,167,168,169,170,182,220,245,246,287,290,291,292,294,295,298,299,381,386,388,415,416,422,423,484,487,503,504,505,530,],[-184,-276,274,-257,-268,-252,-254,-281,-282,-183,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-270,-277,-283,-272,-273,-279,-280,-271,-253,-269,-256,-278,-184,]),'AO_PLUS':([42,131,143,145,152,167,168,169,170,182,220,245,246,287,290,291,292,294,295,298,299,381,386,388,415,416,422,423,484,487,503,504,505,530,],[-184,-276,275,-257,-268,-252,-254,-281,-282,-183,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-270,-277,-283,-272,-273,-279,-280,-271,-253,-269,-256,-278,-184,]),'AO_SUB':([42,131,143,145,152,167,168,169,170,182,220,245,246,287,290,291,292,294,295,298,299,381,386,388,415,416,422,423,484,487,503,504,505,530,],[-184,-276,276,-257,-268,-252,-254,-281,-282,-183,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-270,-277,-283,-272,-273,-279,-280,-271,-253,-269,-256,-278,-184,]),'AO_SL':([42,131,143,145,152,167,168,169,170,182,220,245,246,287,290,291,292,294,295,298,299,381,386,388,415,416,422,423,484,487,503,504,505,530,],[-184,-276,277,-257,-268,-252,-254,-281,-282,-183,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-270,-277,-283,-272,-273,-279,-280,-271,-253,-269,-256,-278,-184,]),'AO_SR':([42,131,143,145,152,167,168,169,170,182,220,245,246,287,290,291,292,294,295,298,299,381,386,388,415,416,422,423,484,487,503,504,505,530,],[-184,-276,278,-257,-268,-252,-254,-281,-282,-183,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-270,-277,-283,-272,-273,-279,-280,-271,-253,-269,-256,-278,-184,]),'AO_AND':([42,131,143,145,152,167,168,169,170,182,220,245,246,287,290,291,292,294,295,298,299,381,386,388,415,416,422,423,484,487,503,504,505,530,],[-184,-276,279,-257,-268,-252,-254,-281,-282,-183,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-270,-277,-283,-272,-273,-279,-280,-271,-253,-269,-256,-278,-184,]),'AO_XOR':([42,131,143,145,152,167,168,169,170,182,220,245,246,287,290,291,292,294,295,298,299,381,386,388,415,416,422,423,484,487,503,504,505,530,],[-184,-276,280,-257,-268,-252,-254,-281,-282,-183,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-270,-277,-283,-272,-273,-279,-280,-271,-253,-269,-256,-278,-184,]),'AO_OR':([42,131,143,145,152,167,168,169,170,182,220,245,246,287,290,291,292,294,295,298,299,381,386,388,415,416,422,423,484,487,503,504,505,530,],[-184,-276,281,-257,-268,-252,-254,-281,-282,-183,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-270,-277,-283,-272,-273,-279,-280,-271,-253,-269,-256,-278,-184,]),'/':([42,131,143,145,149,152,166,167,168,169,170,182,197,200,201,203,206,207,220,245,246,287,290,291,292,294,295,298,299,348,349,381,386,388,415,416,422,423,435,436,437,438,439,455,456,457,458,459,461,484,487,503,504,505,507,509,530,],[-184,-276,-251,-257,-247,-268,317,-252,-254,-281,-282,-183,343,-144,-148,-157,-165,-166,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-158,-159,-270,-277,-283,-272,-273,-279,-280,317,317,-248,-249,-250,343,343,-145,-146,-147,-167,-271,-253,-269,-256,-278,-149,-160,-184,]),'%':([42,131,143,145,149,152,166,167,168,169,170,182,197,200,201,203,206,207,220,245,246,287,290,291,292,294,295,298,299,348,349,381,386,388,415,416,422,423,435,436,437,438,439,455,456,457,458,459,461,484,487,503,504,505,507,509,530,],[-184,-276,-251,-257,-247,-268,318,-252,-254,-281,-282,-183,344,-144,-148,-157,-165,-166,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-158,-159,-270,-277,-283,-272,-273,-279,-280,318,318,-248,-249,-250,344,344,-145,-146,-147,-167,-271,-253,-269,-256,-278,-149,-160,-184,]),'SHIFT_LEFT':([42,131,143,145,149,152,164,165,166,167,168,169,170,182,195,196,197,200,201,203,206,207,220,245,246,287,290,291,292,294,295,298,299,348,349,381,386,388,415,416,422,423,429,430,431,432,433,434,435,436,437,438,439,449,450,451,452,453,454,455,456,457,458,459,461,484,487,503,504,505,507,509,530,],[-184,-276,-251,-257,-247,-268,312,-241,-244,-252,-254,-281,-282,-183,338,-138,-141,-144,-148,-157,-165,-166,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-158,-159,-270,-277,-283,-272,-273,-279,-280,312,312,312,312,-242,-243,-245,-246,-248,-249,-250,338,338,338,338,-139,-140,-142,-143,-145,-146,-147,-167,-271,-253,-269,-256,-278,-149,-160,-184,]),'SHIFT_RIGHT':([42,131,143,145,149,152,164,165,166,167,168,169,170,182,195,196,197,200,201,203,206,207,220,245,246,287,290,291,292,294,295,298,299,348,349,381,386,388,415,416,422,423,429,430,431,432,433,434,435,436,437,438,439,449,450,451,452,453,454,455,456,457,458,459,461,484,487,503,504,505,507,509,530,],[-184,-276,-251,-257,-247,-268,313,-241,-244,-252,-254,-281,-282,-183,339,-138,-141,-144,-148,-157,-165,-166,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-158,-159,-270,-277,-283,-272,-273,-279,-280,313,313,313,313,-242,-243,-245,-246,-248,-249,-250,339,339,339,339,-139,-140,-142,-143,-145,-146,-147,-167,-271,-253,-269,-256,-278,-149,-160,-184,]),'<':([42,131,143,145,149,152,163,164,165,166,167,168,169,170,182,194,195,196,197,200,201,203,206,207,220,245,246,287,290,291,292,294,295,298,299,348,349,381,386,388,415,416,422,423,427,428,429,430,431,432,433,434,435,436,437,438,439,447,448,449,450,451,452,453,454,455,456,457,458,459,461,484,487,503,504,505,507,509,530,],[-184,-276,-251,-257,-247,-268,308,-236,-241,-244,-252,-254,-281,-282,-183,334,-133,-138,-141,-144,-148,-157,-165,-166,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-158,-159,-270,-277,-283,-272,-273,-279,-280,308,308,-237,-238,-239,-240,-242,-243,-245,-246,-248,-249,-250,334,334,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-167,-271,-253,-269,-256,-278,-149,-160,-184,]),'>':([42,131,143,145,149,152,163,164,165,166,167,168,169,170,182,194,195,196,197,200,201,203,206,207,220,245,246,287,290,291,292,294,295,298,299,348,349,381,386,388,415,416,422,423,427,428,429,430,431,432,433,434,435,436,437,438,439,447,448,449,450,451,452,453,454,455,456,457,458,459,461,484,487,503,504,505,507,509,530,],[-184,-276,-251,-257,-247,-268,309,-236,-241,-244,-252,-254,-281,-282,-183,335,-133,-138,-141,-144,-148,-157,-165,-166,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-158,-159,-270,-277,-283,-272,-273,-279,-280,309,309,-237,-238,-239,-240,-242,-243,-245,-246,-248,-249,-250,335,335,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-167,-271,-253,-269,-256,-278,-149,-160,-184,]),'LE':([42,131,143,145,149,152,163,164,165,166,167,168,169,170,182,194,195,196,197,200,201,203,206,207,220,245,246,287,290,291,292,294,295,298,299,348,349,381,386,388,415,416,422,423,427,428,429,430,431,432,433,434,435,436,437,438,439,447,448,449,450,451,452,453,454,455,456,457,458,459,461,484,487,503,504,505,507,509,530,],[-184,-276,-251,-257,-247,-268,310,-236,-241,-244,-252,-254,-281,-282,-183,336,-133,-138,-141,-144,-148,-157,-165,-166,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-158,-159,-270,-277,-283,-272,-273,-279,-280,310,310,-237,-238,-239,-240,-242,-243,-245,-246,-248,-249,-250,336,336,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-167,-271,-253,-269,-256,-278,-149,-160,-184,]),'GE':([42,131,143,145,149,152,163,164,165,166,167,168,169,170,182,194,195,196,197,200,201,203,206,207,220,245,246,287,290,291,292,294,295,298,299,348,349,381,386,388,415,416,422,423,427,428,429,430,431,432,433,434,435,436,437,438,439,447,448,449,450,451,452,453,454,455,456,457,458,459,461,484,487,503,504,505,507,509,530,],[-184,-276,-251,-257,-247,-268,311,-236,-241,-244,-252,-254,-281,-282,-183,337,-133,-138,-141,-144,-148,-157,-165,-166,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-158,-159,-270,-277,-283,-272,-273,-279,-280,311,311,-237,-238,-239,-240,-242,-243,-245,-246,-248,-249,-250,337,337,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-167,-271,-253,-269,-256,-278,-149,-160,-184,]),'EQUAL':([42,131,143,145,149,152,162,163,164,165,166,167,168,169,170,182,193,194,195,196,197,200,201,203,206,207,220,245,246,287,290,291,292,294,295,298,299,348,349,381,386,388,415,416,422,423,426,427,428,429,430,431,432,433,434,435,436,437,438,439,446,447,448,449,450,451,452,453,454,455,456,457,458,459,461,484,487,503,504,505,507,509,530,],[-184,-276,-251,-257,-247,-268,306,-233,-236,-241,-244,-252,-254,-281,-282,-183,332,-130,-133,-138,-141,-144,-148,-157,-165,-166,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-158,-159,-270,-277,-283,-272,-273,-279,-280,306,-234,-235,-237,-238,-239,-240,-242,-243,-245,-246,-248,-249,-250,332,-131,-132,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-167,-271,-253,-269,-256,-278,-149,-160,-184,]),'NE':([42,131,143,145,149,152,162,163,164,165,166,167,168,169,170,182,193,194,195,196,197,200,201,203,206,207,220,245,246,287,290,291,292,294,295,298,299,348,349,381,386,388,415,416,422,423,426,427,428,429,430,431,432,433,434,435,436,437,438,439,446,447,448,449,450,451,452,453,454,455,456,457,458,459,461,484,487,503,504,505,507,509,530,],[-184,-276,-251,-257,-247,-268,307,-233,-236,-241,-244,-252,-254,-281,-282,-183,333,-130,-133,-138,-141,-144,-148,-157,-165,-166,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-158,-159,-270,-277,-283,-272,-273,-279,-280,307,-234,-235,-237,-238,-239,-240,-242,-243,-245,-246,-248,-249,-250,333,-131,-132,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-167,-271,-253,-269,-256,-278,-149,-160,-184,]),'^':([42,131,143,145,149,152,160,161,162,163,164,165,166,167,168,169,170,182,191,192,193,194,195,196,197,200,201,203,206,207,220,245,246,287,290,291,292,294,295,298,299,348,349,381,386,388,415,416,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,461,484,487,503,504,505,507,509,530,],[-184,-276,-251,-257,-247,-268,304,-229,-231,-233,-236,-241,-244,-252,-254,-281,-282,-183,330,-126,-128,-130,-133,-138,-141,-144,-148,-157,-165,-166,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-158,-159,-270,-277,-283,-272,-273,-279,-280,304,-230,-232,-234,-235,-237,-238,-239,-240,-242,-243,-245,-246,-248,-249,-250,330,-127,-129,-131,-132,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-167,-271,-253,-269,-256,-278,-149,-160,-184,]),'|':([42,131,143,145,149,152,159,160,161,162,163,164,165,166,167,168,169,170,182,190,191,192,193,194,195,196,197,200,201,203,206,207,220,245,246,287,290,291,292,294,295,298,299,348,349,381,386,388,415,416,420,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,461,484,487,503,504,505,507,509,530,],[-184,-276,-251,-257,-247,-268,303,-227,-229,-231,-233,-236,-241,-244,-252,-254,-281,-282,-183,329,-124,-126,-128,-130,-133,-138,-141,-144,-148,-157,-165,-166,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-158,-159,-270,-277,-283,-272,-273,303,-279,-280,-228,-230,-232,-234,-235,-237,-238,-239,-240,-242,-243,-245,-246,-248,-249,-250,329,-125,-127,-129,-131,-132,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-167,-271,-253,-269,-256,-278,-149,-160,-184,]),'AND':([42,131,143,145,149,151,152,159,160,161,162,163,164,165,166,167,168,169,170,182,189,190,191,192,193,194,195,196,197,200,201,203,206,207,220,245,246,287,290,291,292,294,295,298,299,348,349,381,386,388,413,415,416,420,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,461,484,487,503,504,505,507,509,530,],[-184,-276,-251,-257,-247,297,-268,-225,-227,-229,-231,-233,-236,-241,-244,-252,-254,-281,-282,-183,328,-122,-124,-126,-128,-130,-133,-138,-141,-144,-148,-157,-165,-166,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-158,-159,-270,-277,-283,297,-272,-273,-226,-279,-280,-228,-230,-232,-234,-235,-237,-238,-239,-240,-242,-243,-245,-246,-248,-249,-250,328,-123,-125,-127,-129,-131,-132,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-167,-271,-253,-269,-256,-278,-149,-160,-184,]),'?':([42,131,143,144,145,149,151,152,159,160,161,162,163,164,165,166,167,168,169,170,182,188,189,190,191,192,193,194,195,196,197,200,201,203,206,207,220,245,246,287,290,291,292,294,295,298,299,348,349,381,386,388,413,415,416,420,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,461,484,487,503,504,505,507,509,530,],[-184,-276,-251,282,-257,-247,-223,-268,-225,-227,-229,-231,-233,-236,-241,-244,-252,-254,-281,-282,-183,326,-120,-122,-124,-126,-128,-130,-133,-138,-141,-144,-148,-157,-165,-166,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-158,-159,-270,-277,-283,-224,-272,-273,-226,-279,-280,-228,-230,-232,-234,-235,-237,-238,-239,-240,-242,-243,-245,-246,-248,-249,-250,-121,-123,-125,-127,-129,-131,-132,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-167,-271,-253,-269,-256,-278,-149,-160,-184,]),'OR':([42,131,143,144,145,149,151,152,159,160,161,162,163,164,165,166,167,168,169,170,182,188,189,190,191,192,193,194,195,196,197,200,201,203,206,207,220,245,246,287,290,291,292,294,295,298,299,348,349,381,386,388,413,415,416,420,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,461,484,487,503,504,505,507,509,530,],[-184,-276,-251,283,-257,-247,-223,-268,-225,-227,-229,-231,-233,-236,-241,-244,-252,-254,-281,-282,-183,327,-120,-122,-124,-126,-128,-130,-133,-138,-141,-144,-148,-157,-165,-166,-276,-276,-268,-258,-259,-260,-251,-261,-255,-274,-275,-158,-159,-270,-277,-283,-224,-272,-273,-226,-279,-280,-228,-230,-232,-234,-235,-237,-238,-239,-240,-242,-243,-245,-246,-248,-249,-250,-121,-123,-125,-127,-129,-131,-132,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-167,-271,-253,-269,-256,-278,-149,-160,-184,]),']':([89,185,187,188,189,190,191,192,193,194,195,196,197,200,201,203,206,207,222,347,348,349,360,414,421,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,461,473,479,507,508,509,511,546,],[186,325,-117,-118,-120,-122,-124,-126,-128,-130,-133,-138,-141,-144,-148,-157,-165,-166,369,-168,-158,-159,472,503,505,-121,-123,-125,-127,-129,-131,-132,-134,-135,-136,-137,-139,-140,-142,-143,-145,-146,-147,-167,514,518,-149,-169,-160,549,-119,]),'ELLIPSIS':([90,353,359,468,510,513,550,],[215,215,215,215,215,215,215,]),'ELSE':([118,124,125,126,127,128,129,130,238,240,242,253,254,255,256,257,258,268,395,403,404,405,409,410,494,498,499,520,523,524,525,526,527,528,529,537,553,556,563,564,565,566,567,568,572,573,574,576,578,580,581,585,592,594,595,596,599,603,604,611,613,615,616,617,],[-191,-204,-197,-198,-199,-200,-201,-202,-192,-203,-205,-311,-312,-313,-314,-315,-316,-342,-305,-345,-346,-347,-341,-343,-306,-344,-348,552,-286,-296,-297,-298,-299,-300,-301,-317,-302,-290,-335,-336,-337,-338,-339,-340,593,-289,-319,-321,-284,-304,-291,-329,-318,-320,-322,-303,-330,-287,-323,-325,-327,-324,-326,-328,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start_node':([0,],[1,]),'global_declaration':([0,1,],[2,33,]),'function_definition':([0,1,],[3,3,]),'declaration':([0,1,76,119,259,266,396,533,557,569,570,586,],[4,4,121,121,398,408,398,559,559,588,591,588,]),'declaration_specifiers':([0,1,8,76,90,119,259,266,353,359,396,468,510,513,533,550,557,569,570,586,],[5,5,52,123,216,123,123,123,216,216,123,216,216,216,123,216,123,123,123,123,]),'storage_class_specifier':([0,1,7,8,51,76,90,119,259,266,353,359,396,468,510,513,533,550,557,569,570,586,],[6,6,50,6,50,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'type_specifier':([0,1,6,8,48,68,76,90,106,107,111,119,134,202,221,224,259,266,293,296,350,353,359,396,468,510,513,533,550,557,569,570,586,],[7,7,47,7,47,110,7,7,110,110,110,7,110,110,110,110,7,7,110,110,110,7,7,7,7,7,7,7,7,7,7,7,7,]),'type_qualifier':([0,1,6,7,8,38,47,48,50,51,68,76,79,90,94,106,107,110,111,119,134,202,221,224,232,259,266,293,296,350,353,359,390,396,468,488,510,513,533,550,557,569,570,586,],[8,8,48,51,8,81,94,48,94,51,111,8,177,8,94,111,111,232,111,8,111,111,111,111,232,8,8,111,111,111,8,8,81,8,8,177,8,8,8,8,8,8,8,8,]),'struct_or_union_specifier':([0,1,6,8,48,68,76,90,106,107,111,119,134,202,221,224,259,266,293,296,350,353,359,396,468,510,513,533,550,557,569,570,586,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'enum_specifier':([0,1,6,8,48,68,76,90,106,107,111,119,134,202,221,224,259,266,293,296,350,353,359,396,468,510,513,533,550,557,569,570,586,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'struct_or_union':([0,1,6,8,48,68,76,90,106,107,111,119,134,202,221,224,259,266,293,296,350,353,359,396,468,510,513,533,550,557,569,570,586,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'pointer':([5,38,39,74,78,79,82,109,123,173,178,216,319,322,359,372,440,468,513,550,],[34,80,83,83,172,176,83,172,172,320,83,357,320,83,470,172,320,470,470,470,]),'direct_function_declarator':([5,34,39,74,78,82,83,109,123,172,173,178,216,319,320,322,357,359,372,440,468,470,513,550,],[35,72,84,84,174,84,179,174,174,174,84,84,174,84,179,84,174,84,174,84,84,179,84,84,]),'init_declarator_list':([5,123,],[37,37,]),'identifier':([5,29,30,34,39,69,70,74,76,78,82,83,91,109,116,119,123,134,137,140,146,147,148,150,172,173,178,216,219,221,235,241,243,244,250,251,259,265,266,270,282,283,288,289,293,296,297,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,322,357,359,364,372,380,387,396,400,401,407,408,440,468,470,475,485,486,491,492,493,500,501,502,513,517,533,535,539,540,541,543,550,552,555,557,561,569,570,575,577,579,586,590,591,593,597,598,601,602,606,608,612,614,],[40,67,71,40,85,112,115,85,131,175,85,40,220,175,115,131,175,245,131,220,220,220,220,220,175,321,85,175,220,245,115,220,220,220,220,220,131,220,220,220,220,220,220,418,245,245,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,321,175,85,175,321,220,175,115,220,131,220,220,220,220,321,321,175,220,220,131,220,131,220,220,220,220,321,220,220,220,131,220,131,131,321,131,131,220,220,220,220,131,131,131,220,220,220,131,220,220,220,220,220,220,220,220,]),'init_declarator':([5,78,123,],[41,171,41,]),'declarator':([5,39,74,78,82,109,123,173,178,216,319,322,359,372,440,468,513,550,],[43,86,86,43,86,229,43,86,86,355,86,86,86,229,86,86,86,86,]),'direct_declarator':([5,34,39,74,78,82,83,109,123,172,173,178,216,319,320,322,357,359,372,440,468,470,513,550,],[44,73,44,44,44,44,73,44,44,73,44,44,44,44,73,44,73,44,44,44,44,73,44,44,]),'direct_declarator_forlist':([5,34,39,74,78,82,83,109,123,172,173,178,216,319,320,322,357,359,372,440,468,470,513,550,],[45,45,87,87,45,87,180,45,45,45,87,87,45,87,180,87,45,87,45,87,87,180,87,87,]),'declaration_specifiers_no_s':([6,48,],[46,95,]),'declaration_specifiers_no_ts':([7,51,],[49,97,]),'compound_statement':([35,72,76,119,486,552,555,579,],[75,117,126,126,126,126,126,126,]),'type_qualifier_list':([38,390,],[79,488,]),'parameter_type_list_definition':([40,85,90,175,216,321,357,359,468,470,513,550,],[88,88,211,88,361,88,361,471,471,361,471,471,]),'declaration_specifiers_no_ts_s':([47,50,94,],[93,96,223,]),'struct_declaration_list':([68,106,],[107,224,]),'struct_declaration':([68,106,107,224,],[108,108,226,226,]),'specifier_qualifier_list':([68,106,107,111,134,202,221,224,293,296,350,],[109,109,109,233,249,249,249,109,249,249,249,]),'enumerator_list':([70,116,],[113,237,]),'enumerator':([70,116,235,380,],[114,114,377,377,]),'block_item_list':([76,],[119,]),'block_item':([76,119,],[120,239,]),'statement':([76,119,486,552,555,579,],[122,122,520,578,580,596,]),'labeled_statement':([76,119,137,259,396,486,492,539,541,543,552,555,575,577,579,593,],[125,125,253,253,253,125,253,253,253,253,125,125,253,253,125,253,]),'expression_statement':([76,119,137,259,266,396,407,408,486,491,492,533,535,539,540,541,543,552,555,557,569,570,575,577,579,586,590,591,593,597,606,608,612,614,],[127,127,255,255,407,255,500,501,127,526,255,526,565,255,565,255,255,127,127,526,565,590,255,255,127,565,601,602,255,565,565,565,565,565,]),'selection_statement':([76,119,486,491,533,552,555,557,579,],[128,128,128,527,527,128,128,527,128,]),'iteration_statement':([76,119,137,259,396,486,492,539,541,543,552,555,575,577,579,593,],[129,129,257,257,257,129,257,257,257,257,129,129,257,257,129,257,]),'jump_statement':([76,119,486,491,533,552,555,557,579,],[130,130,130,529,529,130,130,529,130,]),'expression_variable':([76,119,134,137,140,221,244,250,251,259,265,266,282,293,296,396,400,401,407,408,486,491,492,493,500,501,533,535,539,540,541,543,552,555,557,561,569,570,575,577,579,586,590,591,593,597,598,601,602,606,608,612,614,],[132,132,248,132,269,248,385,392,393,132,406,132,412,248,248,132,496,497,132,132,132,132,132,538,542,544,132,132,132,132,132,132,132,132,132,583,132,132,132,132,132,132,132,132,132,132,605,607,609,132,132,132,132,]),'assignment_expression':([76,91,119,134,137,140,219,221,241,243,244,250,251,259,265,266,270,282,293,296,364,396,400,401,407,408,475,485,486,491,492,493,500,501,517,533,535,539,540,541,543,552,555,557,561,569,570,575,577,579,586,590,591,593,597,598,601,602,606,608,612,614,],[141,218,141,141,141,141,218,141,383,384,141,141,141,141,141,141,411,141,141,141,218,141,141,141,141,141,218,519,141,141,141,141,141,141,218,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'conditional_expression_v':([76,91,119,134,137,140,219,221,241,243,244,250,251,259,265,266,270,282,293,296,364,396,400,401,407,408,475,485,486,491,492,493,500,501,502,517,533,535,539,540,541,543,552,555,557,561,569,570,575,577,579,586,590,591,593,597,598,601,602,606,608,612,614,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,545,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'unary_expression_v':([76,91,119,134,137,140,146,147,148,150,219,221,241,243,244,250,251,259,265,266,270,282,283,288,293,296,297,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,364,387,396,400,401,407,408,475,485,486,491,492,493,500,501,502,517,533,535,539,540,541,543,552,555,557,561,569,570,575,577,579,586,590,591,593,597,598,601,602,606,608,612,614,],[143,143,143,143,143,143,287,290,292,294,143,143,143,143,143,143,143,143,143,143,143,143,292,294,143,143,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,143,292,143,143,143,143,143,143,143,143,143,143,143,143,143,292,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'logical_or_expression_v':([76,91,119,134,137,140,219,221,241,243,244,250,251,259,265,266,270,282,293,296,364,396,400,401,407,408,475,485,486,491,492,493,500,501,502,517,533,535,539,540,541,543,552,555,557,561,569,570,575,577,579,586,590,591,593,597,598,601,602,606,608,612,614,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'postfix_expression_v':([76,91,119,134,137,140,146,147,148,150,219,221,241,243,244,250,251,259,265,266,270,282,283,288,293,296,297,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,364,387,396,400,401,407,408,475,485,486,491,492,493,500,501,502,517,533,535,539,540,541,543,552,555,557,561,569,570,575,577,579,586,590,591,593,597,598,601,602,606,608,612,614,],[145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'unary_operator_v':([76,91,119,134,137,140,146,147,148,150,219,221,241,243,244,250,251,259,265,266,270,282,283,288,293,296,297,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,364,387,396,400,401,407,408,475,485,486,491,492,493,500,501,502,517,533,535,539,540,541,543,552,555,557,561,569,570,575,577,579,586,590,591,593,597,598,601,602,606,608,612,614,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'cast_expression_v':([76,91,119,134,137,140,148,219,221,241,243,244,250,251,259,265,266,270,282,283,293,296,297,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,364,387,396,400,401,407,408,475,485,486,491,492,493,500,501,502,517,533,535,539,540,541,543,552,555,557,561,569,570,575,577,579,586,590,591,593,597,598,601,602,606,608,612,614,],[149,149,149,149,149,149,291,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,437,438,439,149,487,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'logical_and_expression_v':([76,91,119,134,137,140,219,221,241,243,244,250,251,259,265,266,270,282,283,293,296,364,396,400,401,407,408,475,485,486,491,492,493,500,501,502,517,533,535,539,540,541,543,552,555,557,561,569,570,575,577,579,586,590,591,593,597,598,601,602,606,608,612,614,],[151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,413,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'postfix_expression_v_no_func':([76,91,119,134,137,140,146,147,148,150,219,221,241,243,244,250,251,259,265,266,270,282,283,288,289,293,296,297,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,364,387,396,400,401,407,408,475,485,486,491,492,493,500,501,502,517,533,535,539,540,541,543,552,555,557,561,569,570,575,577,579,586,590,591,593,597,598,601,602,606,608,612,614,],[152,152,152,246,152,152,152,152,152,152,152,246,152,152,152,152,152,152,152,152,152,152,152,152,417,246,246,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'inclusive_or_expression_v':([76,91,119,134,137,140,219,221,241,243,244,250,251,259,265,266,270,282,283,293,296,297,364,396,400,401,407,408,475,485,486,491,492,493,500,501,502,517,533,535,539,540,541,543,552,555,557,561,569,570,575,577,579,586,590,591,593,597,598,601,602,606,608,612,614,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,420,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'exclusive_or_expression_v':([76,91,119,134,137,140,219,221,241,243,244,250,251,259,265,266,270,282,283,293,296,297,303,364,396,400,401,407,408,475,485,486,491,492,493,500,501,502,517,533,535,539,540,541,543,552,555,557,561,569,570,575,577,579,586,590,591,593,597,598,601,602,606,608,612,614,],[160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,424,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'and_expression_v':([76,91,119,134,137,140,219,221,241,243,244,250,251,259,265,266,270,282,283,293,296,297,303,304,364,396,400,401,407,408,475,485,486,491,492,493,500,501,502,517,533,535,539,540,541,543,552,555,557,561,569,570,575,577,579,586,590,591,593,597,598,601,602,606,608,612,614,],[161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,425,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,]),'equality_expression_v':([76,91,119,134,137,140,219,221,241,243,244,250,251,259,265,266,270,282,283,293,296,297,303,304,305,364,396,400,401,407,408,475,485,486,491,492,493,500,501,502,517,533,535,539,540,541,543,552,555,557,561,569,570,575,577,579,586,590,591,593,597,598,601,602,606,608,612,614,],[162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,426,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,]),'relational_expression_v':([76,91,119,134,137,140,219,221,241,243,244,250,251,259,265,266,270,282,283,293,296,297,303,304,305,306,307,364,396,400,401,407,408,475,485,486,491,492,493,500,501,502,517,533,535,539,540,541,543,552,555,557,561,569,570,575,577,579,586,590,591,593,597,598,601,602,606,608,612,614,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,427,428,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'shift_expression_v':([76,91,119,134,137,140,219,221,241,243,244,250,251,259,265,266,270,282,283,293,296,297,303,304,305,306,307,308,309,310,311,364,396,400,401,407,408,475,485,486,491,492,493,500,501,502,517,533,535,539,540,541,543,552,555,557,561,569,570,575,577,579,586,590,591,593,597,598,601,602,606,608,612,614,],[164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,429,430,431,432,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,]),'additive_expression_v':([76,91,119,134,137,140,219,221,241,243,244,250,251,259,265,266,270,282,283,293,296,297,303,304,305,306,307,308,309,310,311,312,313,364,396,400,401,407,408,475,485,486,491,492,493,500,501,502,517,533,535,539,540,541,543,552,555,557,561,569,570,575,577,579,586,590,591,593,597,598,601,602,606,608,612,614,],[165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,433,434,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,]),'multiplicative_expression_v':([76,91,119,134,137,140,219,221,241,243,244,250,251,259,265,266,270,282,283,293,296,297,303,304,305,306,307,308,309,310,311,312,313,314,315,364,396,400,401,407,408,475,485,486,491,492,493,500,501,502,517,533,535,539,540,541,543,552,555,557,561,569,570,575,577,579,586,590,591,593,597,598,601,602,606,608,612,614,],[166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,435,436,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,]),'unary_expression_v_constance':([76,91,119,134,137,140,148,150,219,221,241,243,244,250,251,259,265,266,270,282,283,293,296,297,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,364,387,396,400,401,407,408,475,485,486,491,492,493,500,501,502,517,533,535,539,540,541,543,552,555,557,561,569,570,575,577,579,586,590,591,593,597,598,601,602,606,608,612,614,],[167,167,167,167,167,167,167,295,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'primary_expression_v':([76,91,119,134,137,140,148,150,219,221,241,243,244,250,251,259,265,266,270,282,283,293,296,297,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,364,387,396,400,401,407,408,475,485,486,491,492,493,500,501,502,517,533,535,539,540,541,543,552,555,557,561,569,570,575,577,579,586,590,591,593,597,598,601,602,606,608,612,614,],[168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'constant_expression':([89,92,202,230,236,284,300,326,350,354,360,367,373,462,467,531,],[185,222,347,374,378,347,347,347,347,465,473,479,482,508,511,554,]),'conditional_expression':([89,92,202,230,236,284,300,326,350,354,360,367,373,462,467,506,531,],[187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,546,187,]),'logical_or_expression':([89,92,202,230,236,284,300,326,350,354,360,367,373,462,467,506,531,],[188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,]),'logical_and_expression':([89,92,202,230,236,284,300,326,327,350,354,360,367,373,462,467,506,531,],[189,189,189,189,189,189,189,189,442,189,189,189,189,189,189,189,189,189,]),'inclusive_or_expression':([89,92,202,230,236,284,300,326,327,328,350,354,360,367,373,462,467,506,531,],[190,190,190,190,190,190,190,190,190,443,190,190,190,190,190,190,190,190,190,]),'exclusive_or_expression':([89,92,202,230,236,284,300,326,327,328,329,350,354,360,367,373,462,467,506,531,],[191,191,191,191,191,191,191,191,191,191,444,191,191,191,191,191,191,191,191,191,]),'and_expression':([89,92,202,230,236,284,300,326,327,328,329,330,350,354,360,367,373,462,467,506,531,],[192,192,192,192,192,192,192,192,192,192,192,445,192,192,192,192,192,192,192,192,192,]),'equality_expression':([89,92,202,230,236,284,300,326,327,328,329,330,331,350,354,360,367,373,462,467,506,531,],[193,193,193,193,193,193,193,193,193,193,193,193,446,193,193,193,193,193,193,193,193,193,]),'relational_expression':([89,92,202,230,236,284,300,326,327,328,329,330,331,332,333,350,354,360,367,373,462,467,506,531,],[194,194,194,194,194,194,194,194,194,194,194,194,194,447,448,194,194,194,194,194,194,194,194,194,]),'shift_expression':([89,92,202,230,236,284,300,326,327,328,329,330,331,332,333,334,335,336,337,350,354,360,367,373,462,467,506,531,],[195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,449,450,451,452,195,195,195,195,195,195,195,195,195,]),'additive_expression':([89,92,202,230,236,284,300,326,327,328,329,330,331,332,333,334,335,336,337,338,339,350,354,360,367,373,462,467,506,531,],[196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,453,454,196,196,196,196,196,196,196,196,196,]),'multiplicative_expression':([89,92,202,230,236,284,300,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,350,354,360,367,373,462,467,506,531,],[197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,455,456,197,197,197,197,197,197,197,197,197,]),'cast_expression':([89,92,202,204,230,236,284,300,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,350,354,360,367,373,460,462,467,506,531,],[200,200,200,348,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,457,458,459,200,200,200,200,200,507,200,200,200,200,]),'unary_expression':([89,92,202,204,205,230,236,284,300,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,350,354,360,367,373,460,462,467,506,531,],[201,201,201,201,349,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,]),'primary_expression':([89,92,202,204,205,230,236,284,300,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,350,354,360,367,373,460,462,467,506,531,],[203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,]),'unary_operator':([89,92,202,204,205,230,236,284,300,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,350,354,360,367,373,460,462,467,506,531,],[204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,]),'parameter_list':([90,353,359,468,513,550,],[212,464,212,212,212,212,]),'parameter_list_definition':([90,353,359,468,510,513,550,],[213,213,213,213,548,213,213,]),'parameter_declaration':([90,353,359,468,510,513,550,],[214,214,214,214,547,214,214,]),'initializer':([91,219,364,475,517,],[217,363,476,516,551,]),'struct_declarator_list':([109,],[227,]),'struct_declarator':([109,372,],[228,481,]),'specifier_qualifier_list_no_ts':([110,232,],[231,375,]),'type_name':([134,202,221,293,296,350,],[247,345,247,247,419,463,]),'statement_while':([137,259,396,492,539,541,543,575,577,593,],[252,399,399,537,572,574,576,594,595,603,]),'compound_statement_while':([137,259,396,492,539,541,543,575,577,593,],[254,254,254,254,254,254,254,254,254,254,]),'selection_statement_while':([137,259,396,492,535,539,540,541,543,569,575,577,586,593,597,606,608,612,614,],[256,256,256,256,566,256,566,256,256,566,256,256,566,256,566,566,566,566,566,]),'jump_statement_while':([137,259,396,492,535,539,540,541,543,569,575,577,586,593,597,606,608,612,614,],[258,258,258,258,568,258,568,258,258,568,258,258,568,258,568,568,568,568,568,]),'assignment_operator':([143,],[270,]),'expression':([202,284,300,326,350,],[346,414,421,441,346,]),'abstract_declarator':([216,359,468,513,550,],[356,469,469,469,469,]),'direct_abstract_declarator':([216,357,359,468,470,513,550,],[358,466,358,358,466,358,358,]),'initializer_list':([219,],[362,]),'designation':([219,475,],[364,517,]),'designator_list':([219,475,],[365,365,]),'designator':([219,365,475,],[366,478,366,]),'argument_expression_list':([241,],[382,]),'brace_pointer':([249,390,391,488,],[389,489,490,521,]),'block_item_list_while':([259,],[396,]),'block_item_while':([259,396,],[397,495,]),'statement_switch':([491,533,557,],[523,560,560,]),'labeled_statement_switch':([491,533,535,540,557,569,586,597,606,608,612,614,],[524,524,563,563,524,563,563,563,563,563,563,563,]),'compound_statement_switch':([491,533,557,],[525,525,525,]),'iteration_statement_switch':([491,533,535,540,557,569,586,597,606,608,612,614,],[528,528,567,567,528,567,567,567,567,567,567,567,]),'block_item_list_switch':([533,],[557,]),'block_item_switch':([533,557,],[558,582,]),'statement_while_switch':([535,540,569,586,597,606,608,612,614,],[562,573,589,589,604,611,613,616,617,]),'compound_statement_while_switch':([535,540,569,586,597,606,608,612,614,],[564,564,564,564,564,564,564,564,564,]),'block_item_list_while_switch':([569,],[586,]),'block_item_while_switch':([569,586,],[587,600,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start_node","S'",1,None,None,None),
  ('start_node -> start_node global_declaration','start_node',2,'p_start_node','yacc.py',11),
  ('start_node -> global_declaration','start_node',1,'p_start_node','yacc.py',12),
  ('global_declaration -> function_definition','global_declaration',1,'p_global_declaration','yacc.py',19),
  ('global_declaration -> declaration','global_declaration',1,'p_global_declaration','yacc.py',20),
  ('declaration -> declaration_specifiers ;','declaration',2,'p_declaration','yacc.py',27),
  ('declaration -> declaration_specifiers init_declarator_list ;','declaration',3,'p_declaration','yacc.py',28),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','yacc.py',35),
  ('init_declarator_list -> init_declarator_list , init_declarator','init_declarator_list',3,'p_init_declarator_list','yacc.py',36),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','yacc.py',43),
  ('init_declarator -> declarator = initializer','init_declarator',3,'p_init_declarator','yacc.py',44),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers_no_s','declaration_specifiers',2,'p_declaration_specifiers','yacc.py',51),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers','yacc.py',52),
  ('declaration_specifiers -> type_specifier declaration_specifiers_no_ts','declaration_specifiers',2,'p_declaration_specifiers','yacc.py',53),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','yacc.py',54),
  ('declaration_specifiers_no_s -> type_specifier','declaration_specifiers_no_s',1,'p_declaration_specifiers_no_s','yacc.py',61),
  ('declaration_specifiers_no_s -> type_specifier declaration_specifiers_no_ts_s','declaration_specifiers_no_s',2,'p_declaration_specifiers_no_s','yacc.py',62),
  ('declaration_specifiers_no_s -> type_qualifier declaration_specifiers_no_s','declaration_specifiers_no_s',2,'p_declaration_specifiers_no_s','yacc.py',63),
  ('declaration_specifiers_no_ts -> storage_class_specifier','declaration_specifiers_no_ts',1,'p_declaration_specifiers_no_ts','yacc.py',70),
  ('declaration_specifiers_no_ts -> storage_class_specifier declaration_specifiers_no_ts_s','declaration_specifiers_no_ts',2,'p_declaration_specifiers_no_ts','yacc.py',71),
  ('declaration_specifiers_no_ts -> type_qualifier','declaration_specifiers_no_ts',1,'p_declaration_specifiers_no_ts','yacc.py',72),
  ('declaration_specifiers_no_ts -> type_qualifier declaration_specifiers_no_ts','declaration_specifiers_no_ts',2,'p_declaration_specifiers_no_ts','yacc.py',73),
  ('declaration_specifiers_no_ts_s -> type_qualifier','declaration_specifiers_no_ts_s',1,'p_declaration_specifiers_no_ts_s','yacc.py',80),
  ('declaration_specifiers_no_ts_s -> type_qualifier declaration_specifiers_no_ts_s','declaration_specifiers_no_ts_s',2,'p_declaration_specifiers_no_ts_s','yacc.py',81),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','yacc.py',88),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','yacc.py',89),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','yacc.py',90),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','yacc.py',91),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','yacc.py',92),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','yacc.py',99),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','yacc.py',100),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier','yacc.py',101),
  ('type_specifier -> SHORT INT','type_specifier',2,'p_type_specifier','yacc.py',102),
  ('type_specifier -> INT SHORT','type_specifier',2,'p_type_specifier','yacc.py',103),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','yacc.py',104),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier','yacc.py',105),
  ('type_specifier -> LONG INT','type_specifier',2,'p_type_specifier','yacc.py',106),
  ('type_specifier -> INT LONG','type_specifier',2,'p_type_specifier','yacc.py',107),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','yacc.py',108),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier','yacc.py',109),
  ('type_specifier -> FLOAT LONG','type_specifier',2,'p_type_specifier','yacc.py',110),
  ('type_specifier -> LONG FLOAT','type_specifier',2,'p_type_specifier','yacc.py',111),
  ('type_specifier -> DOUBLE LONG','type_specifier',2,'p_type_specifier','yacc.py',112),
  ('type_specifier -> LONG DOUBLE','type_specifier',2,'p_type_specifier','yacc.py',113),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier','yacc.py',114),
  ('type_specifier -> SIGNED INT','type_specifier',2,'p_type_specifier','yacc.py',115),
  ('type_specifier -> SIGNED SHORT','type_specifier',2,'p_type_specifier','yacc.py',116),
  ('type_specifier -> SIGNED SHORT INT','type_specifier',3,'p_type_specifier','yacc.py',117),
  ('type_specifier -> SIGNED INT SHORT','type_specifier',3,'p_type_specifier','yacc.py',118),
  ('type_specifier -> SIGNED LONG','type_specifier',2,'p_type_specifier','yacc.py',119),
  ('type_specifier -> SIGNED LONG INT','type_specifier',3,'p_type_specifier','yacc.py',120),
  ('type_specifier -> SIGNED INT LONG','type_specifier',3,'p_type_specifier','yacc.py',121),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier','yacc.py',122),
  ('type_specifier -> UNSIGNED INT','type_specifier',2,'p_type_specifier','yacc.py',123),
  ('type_specifier -> UNSIGNED SHORT','type_specifier',2,'p_type_specifier','yacc.py',124),
  ('type_specifier -> UNSIGNED SHORT INT','type_specifier',3,'p_type_specifier','yacc.py',125),
  ('type_specifier -> UNSIGNED INT SHORT','type_specifier',3,'p_type_specifier','yacc.py',126),
  ('type_specifier -> UNSIGNED LONG','type_specifier',2,'p_type_specifier','yacc.py',127),
  ('type_specifier -> UNSIGNED LONG INT','type_specifier',3,'p_type_specifier','yacc.py',128),
  ('type_specifier -> UNSIGNED INT LONG','type_specifier',3,'p_type_specifier','yacc.py',129),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','yacc.py',130),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','yacc.py',131),
  ('type_specifier -> BOOL','type_specifier',1,'p_type_specifier','yacc.py',132),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','yacc.py',139),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','yacc.py',140),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','yacc.py',141),
  ('enum_specifier -> ENUM { enumerator_list }','enum_specifier',4,'p_enum_specifier','yacc.py',148),
  ('enum_specifier -> ENUM identifier { enumerator_list }','enum_specifier',5,'p_enum_specifier','yacc.py',149),
  ('enum_specifier -> ENUM { enumerator_list , }','enum_specifier',5,'p_enum_specifier','yacc.py',150),
  ('enum_specifier -> ENUM identifier { enumerator_list , }','enum_specifier',6,'p_enum_specifier','yacc.py',151),
  ('enum_specifier -> ENUM identifier','enum_specifier',2,'p_enum_specifier','yacc.py',152),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','yacc.py',159),
  ('enumerator_list -> enumerator_list , enumerator','enumerator_list',3,'p_enumerator_list','yacc.py',160),
  ('enumerator -> identifier','enumerator',1,'p_enumerator','yacc.py',167),
  ('enumerator -> identifier = constant_expression','enumerator',3,'p_enumerator','yacc.py',168),
  ('struct_or_union_specifier -> struct_or_union identifier { struct_declaration_list }','struct_or_union_specifier',5,'p_struct_or_union_specifier','yacc.py',175),
  ('struct_or_union_specifier -> struct_or_union { struct_declaration_list }','struct_or_union_specifier',4,'p_struct_or_union_specifier','yacc.py',176),
  ('struct_or_union_specifier -> struct_or_union identifier','struct_or_union_specifier',2,'p_struct_or_union_specifier','yacc.py',177),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','yacc.py',184),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','yacc.py',185),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','yacc.py',192),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','yacc.py',193),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list ;','struct_declaration',3,'p_struct_declaration','yacc.py',200),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list_no_ts','specifier_qualifier_list',2,'p_specifier_qualifier_list','yacc.py',207),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','yacc.py',208),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','yacc.py',209),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','yacc.py',210),
  ('specifier_qualifier_list_no_ts -> type_qualifier specifier_qualifier_list_no_ts','specifier_qualifier_list_no_ts',2,'p_specifier_qualifier_list_no_ts','yacc.py',217),
  ('specifier_qualifier_list_no_ts -> type_qualifier','specifier_qualifier_list_no_ts',1,'p_specifier_qualifier_list_no_ts','yacc.py',218),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','yacc.py',225),
  ('struct_declarator_list -> struct_declarator_list , struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','yacc.py',226),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator','yacc.py',233),
  ('struct_declarator -> : constant_expression','struct_declarator',2,'p_struct_declarator','yacc.py',234),
  ('struct_declarator -> declarator : constant_expression','struct_declarator',3,'p_struct_declarator','yacc.py',235),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator','yacc.py',242),
  ('declarator -> direct_declarator','declarator',1,'p_declarator','yacc.py',243),
  ('pointer -> *','pointer',1,'p_pointer','yacc.py',250),
  ('pointer -> * type_qualifier_list','pointer',2,'p_pointer','yacc.py',251),
  ('pointer -> * pointer','pointer',2,'p_pointer','yacc.py',252),
  ('pointer -> * type_qualifier_list pointer','pointer',3,'p_pointer','yacc.py',253),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','yacc.py',260),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','yacc.py',261),
  ('direct_declarator -> direct_declarator_forlist','direct_declarator',1,'p_direct_declarator','yacc.py',268),
  ('direct_declarator -> ( declarator )','direct_declarator',3,'p_direct_declarator','yacc.py',269),
  ('direct_declarator -> direct_function_declarator','direct_declarator',1,'p_direct_declarator','yacc.py',270),
  ('direct_declarator_forlist -> identifier','direct_declarator_forlist',1,'p_direct_declarator_forlist','yacc.py',277),
  ('direct_declarator_forlist -> ( pointer direct_declarator_forlist )','direct_declarator_forlist',4,'p_direct_declarator_forlist','yacc.py',278),
  ('direct_declarator_forlist -> ( direct_declarator_forlist )','direct_declarator_forlist',3,'p_direct_declarator_forlist','yacc.py',279),
  ('direct_declarator_forlist -> direct_declarator_forlist [ constant_expression ]','direct_declarator_forlist',4,'p_direct_declarator_forlist','yacc.py',280),
  ('direct_declarator_forlist -> identifier [ constant_expression ]','direct_declarator_forlist',4,'p_direct_declarator_forlist','yacc.py',281),
  ('direct_declarator_forlist -> identifier [ ]','direct_declarator_forlist',3,'p_direct_declarator_forlist','yacc.py',282),
  ('parameter_list -> parameter_list_definition','parameter_list',1,'p_parameter_list','yacc.py',289),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','yacc.py',290),
  ('parameter_list -> parameter_declaration , parameter_list','parameter_list',3,'p_parameter_list','yacc.py',291),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration','yacc.py',297),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration','yacc.py',298),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration','yacc.py',299),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','yacc.py',306),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression','yacc.py',313),
  ('conditional_expression -> logical_or_expression ? expression : conditional_expression','conditional_expression',5,'p_conditional_expression','yacc.py',314),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','yacc.py',321),
  ('logical_or_expression -> logical_or_expression OR logical_and_expression','logical_or_expression',3,'p_logical_or_expression','yacc.py',322),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression','yacc.py',329),
  ('logical_and_expression -> logical_and_expression AND inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression','yacc.py',330),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression','yacc.py',337),
  ('inclusive_or_expression -> inclusive_or_expression | exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression','yacc.py',338),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression','yacc.py',345),
  ('exclusive_or_expression -> exclusive_or_expression ^ and_expression','exclusive_or_expression',3,'p_exclusive_or_expression','yacc.py',346),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression','yacc.py',353),
  ('and_expression -> and_expression & equality_expression','and_expression',3,'p_and_expression','yacc.py',354),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','yacc.py',361),
  ('equality_expression -> equality_expression EQUAL relational_expression','equality_expression',3,'p_equality_expression','yacc.py',362),
  ('equality_expression -> equality_expression NE relational_expression','equality_expression',3,'p_equality_expression','yacc.py',363),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','yacc.py',370),
  ('relational_expression -> relational_expression < shift_expression','relational_expression',3,'p_relational_expression','yacc.py',371),
  ('relational_expression -> relational_expression > shift_expression','relational_expression',3,'p_relational_expression','yacc.py',372),
  ('relational_expression -> relational_expression LE shift_expression','relational_expression',3,'p_relational_expression','yacc.py',373),
  ('relational_expression -> relational_expression GE shift_expression','relational_expression',3,'p_relational_expression','yacc.py',374),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','yacc.py',381),
  ('shift_expression -> shift_expression SHIFT_LEFT additive_expression','shift_expression',3,'p_shift_expression','yacc.py',382),
  ('shift_expression -> shift_expression SHIFT_RIGHT additive_expression','shift_expression',3,'p_shift_expression','yacc.py',383),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','yacc.py',390),
  ('additive_expression -> additive_expression + multiplicative_expression','additive_expression',3,'p_additive_expression','yacc.py',391),
  ('additive_expression -> additive_expression - multiplicative_expression','additive_expression',3,'p_additive_expression','yacc.py',392),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression','yacc.py',399),
  ('multiplicative_expression -> multiplicative_expression * cast_expression','multiplicative_expression',3,'p_multiplicative_expression','yacc.py',400),
  ('multiplicative_expression -> multiplicative_expression / cast_expression','multiplicative_expression',3,'p_multiplicative_expression','yacc.py',401),
  ('multiplicative_expression -> multiplicative_expression % cast_expression','multiplicative_expression',3,'p_multiplicative_expression','yacc.py',402),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression','yacc.py',409),
  ('cast_expression -> ( type_name ) cast_expression','cast_expression',4,'p_cast_expression','yacc.py',410),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name','yacc.py',417),
  ('type_name -> specifier_qualifier_list brace_pointer','type_name',2,'p_type_name','yacc.py',418),
  ('brace_pointer -> *','brace_pointer',1,'p_brace_pointer','yacc.py',425),
  ('brace_pointer -> * type_qualifier_list','brace_pointer',2,'p_brace_pointer','yacc.py',426),
  ('brace_pointer -> ( brace_pointer )','brace_pointer',3,'p_brace_pointer','yacc.py',427),
  ('brace_pointer -> * brace_pointer','brace_pointer',2,'p_brace_pointer','yacc.py',428),
  ('brace_pointer -> * type_qualifier_list brace_pointer','brace_pointer',3,'p_brace_pointer','yacc.py',429),
  ('unary_expression -> primary_expression','unary_expression',1,'p_unary_expression','yacc.py',436),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression','yacc.py',437),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression','yacc.py',438),
  ('unary_expression -> SIZEOF ( type_name )','unary_expression',4,'p_unary_expression','yacc.py',439),
  ('unary_operator -> +','unary_operator',1,'p_unary_operator','yacc.py',446),
  ('unary_operator -> -','unary_operator',1,'p_unary_operator','yacc.py',447),
  ('unary_operator -> ~','unary_operator',1,'p_unary_operator','yacc.py',448),
  ('unary_operator -> !','unary_operator',1,'p_unary_operator','yacc.py',449),
  ('primary_expression -> CONSTANCE','primary_expression',1,'p_primary_expression','yacc.py',456),
  ('primary_expression -> STRING_LITERAL','primary_expression',1,'p_primary_expression','yacc.py',457),
  ('primary_expression -> ( expression )','primary_expression',3,'p_primary_expression','yacc.py',458),
  ('expression -> constant_expression','expression',1,'p_expression','yacc.py',465),
  ('expression -> expression , constant_expression','expression',3,'p_expression','yacc.py',466),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator','yacc.py',473),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator','yacc.py',474),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator','yacc.py',475),
  ('direct_abstract_declarator -> ( abstract_declarator )','direct_abstract_declarator',3,'p_direct_abstract_declarator','yacc.py',482),
  ('direct_abstract_declarator -> [ ]','direct_abstract_declarator',2,'p_direct_abstract_declarator','yacc.py',483),
  ('direct_abstract_declarator -> [ constant_expression ]','direct_abstract_declarator',3,'p_direct_abstract_declarator','yacc.py',484),
  ('direct_abstract_declarator -> direct_abstract_declarator [ constant_expression ]','direct_abstract_declarator',4,'p_direct_abstract_declarator','yacc.py',485),
  ('direct_abstract_declarator -> parameter_type_list_definition','direct_abstract_declarator',1,'p_direct_abstract_declarator','yacc.py',486),
  ('function_definition -> declaration_specifiers pointer direct_function_declarator compound_statement','function_definition',4,'p_function_definition','yacc.py',495),
  ('function_definition -> declaration_specifiers direct_function_declarator compound_statement','function_definition',3,'p_function_definition','yacc.py',496),
  ('direct_function_declarator -> ( pointer direct_function_declarator )','direct_function_declarator',4,'p_direct_function_declarator','yacc.py',503),
  ('direct_function_declarator -> ( direct_function_declarator )','direct_function_declarator',3,'p_direct_function_declarator','yacc.py',504),
  ('direct_function_declarator -> identifier parameter_type_list_definition','direct_function_declarator',2,'p_direct_function_declarator','yacc.py',505),
  ('identifier -> ( identifier )','identifier',3,'p_identifier','yacc.py',510),
  ('identifier -> ID','identifier',1,'p_identifier','yacc.py',511),
  ('parameter_type_list_definition -> ( )','parameter_type_list_definition',2,'p_parameter_type_list_definition','yacc.py',520),
  ('parameter_type_list_definition -> ( parameter_type_list_definition )','parameter_type_list_definition',3,'p_parameter_type_list_definition','yacc.py',521),
  ('parameter_type_list_definition -> ( parameter_list )','parameter_type_list_definition',3,'p_parameter_type_list_definition','yacc.py',522),
  ('parameter_list_definition -> parameter_declaration = constant_expression , parameter_list_definition','parameter_list_definition',5,'p_parameter_list_definition','yacc.py',529),
  ('parameter_list_definition -> parameter_declaration = constant_expression','parameter_list_definition',3,'p_parameter_list_definition','yacc.py',530),
  ('parameter_list_definition -> ELLIPSIS','parameter_list_definition',1,'p_parameter_list_definition','yacc.py',531),
  ('compound_statement -> { }','compound_statement',2,'p_compound_statement','yacc.py',537),
  ('compound_statement -> { block_item_list }','compound_statement',3,'p_compound_statement','yacc.py',538),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','yacc.py',544),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','yacc.py',545),
  ('block_item -> declaration','block_item',1,'p_block_item','yacc.py',551),
  ('block_item -> statement','block_item',1,'p_block_item','yacc.py',552),
  ('statement -> labeled_statement','statement',1,'p_statement','yacc.py',560),
  ('statement -> compound_statement','statement',1,'p_statement','yacc.py',561),
  ('statement -> expression_statement','statement',1,'p_statement','yacc.py',562),
  ('statement -> selection_statement','statement',1,'p_statement','yacc.py',563),
  ('statement -> iteration_statement','statement',1,'p_statement','yacc.py',564),
  ('statement -> jump_statement','statement',1,'p_statement','yacc.py',565),
  ('labeled_statement -> identifier :','labeled_statement',2,'p_labeled_statement','yacc.py',572),
  ('expression_statement -> ;','expression_statement',1,'p_expression_statement','yacc.py',579),
  ('expression_statement -> expression_variable ;','expression_statement',2,'p_expression_statement','yacc.py',580),
  ('expression_variable -> assignment_expression','expression_variable',1,'p_expression_variable','yacc.py',587),
  ('expression_variable -> expression_variable , assignment_expression','expression_variable',3,'p_expression_variable','yacc.py',588),
  ('assignment_expression -> conditional_expression_v','assignment_expression',1,'p_assignment_expression','yacc.py',595),
  ('assignment_expression -> unary_expression_v assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','yacc.py',596),
  ('assignment_operator -> =','assignment_operator',1,'p_assignment_operator','yacc.py',603),
  ('assignment_operator -> AO_MUL','assignment_operator',1,'p_assignment_operator','yacc.py',604),
  ('assignment_operator -> AO_DIV','assignment_operator',1,'p_assignment_operator','yacc.py',605),
  ('assignment_operator -> AO_MOD','assignment_operator',1,'p_assignment_operator','yacc.py',606),
  ('assignment_operator -> AO_PLUS','assignment_operator',1,'p_assignment_operator','yacc.py',607),
  ('assignment_operator -> AO_SUB','assignment_operator',1,'p_assignment_operator','yacc.py',608),
  ('assignment_operator -> AO_SL','assignment_operator',1,'p_assignment_operator','yacc.py',609),
  ('assignment_operator -> AO_SR','assignment_operator',1,'p_assignment_operator','yacc.py',610),
  ('assignment_operator -> AO_AND','assignment_operator',1,'p_assignment_operator','yacc.py',611),
  ('assignment_operator -> AO_XOR','assignment_operator',1,'p_assignment_operator','yacc.py',612),
  ('assignment_operator -> AO_OR','assignment_operator',1,'p_assignment_operator','yacc.py',613),
  ('conditional_expression_v -> logical_or_expression_v','conditional_expression_v',1,'p_conditional_expression_v','yacc.py',620),
  ('conditional_expression_v -> logical_or_expression_v ? expression_variable : conditional_expression_v','conditional_expression_v',5,'p_conditional_expression_v','yacc.py',621),
  ('logical_or_expression_v -> logical_and_expression_v','logical_or_expression_v',1,'p_logical_or_expression_v','yacc.py',627),
  ('logical_or_expression_v -> logical_or_expression_v OR logical_and_expression_v','logical_or_expression_v',3,'p_logical_or_expression_v','yacc.py',628),
  ('logical_and_expression_v -> inclusive_or_expression_v','logical_and_expression_v',1,'p_logical_and_expression_v','yacc.py',634),
  ('logical_and_expression_v -> logical_and_expression_v AND inclusive_or_expression_v','logical_and_expression_v',3,'p_logical_and_expression_v','yacc.py',635),
  ('inclusive_or_expression_v -> exclusive_or_expression_v','inclusive_or_expression_v',1,'p_inclusive_or_expression_v','yacc.py',641),
  ('inclusive_or_expression_v -> inclusive_or_expression_v | exclusive_or_expression_v','inclusive_or_expression_v',3,'p_inclusive_or_expression_v','yacc.py',642),
  ('exclusive_or_expression_v -> and_expression_v','exclusive_or_expression_v',1,'p_exclusive_or_expression_v','yacc.py',648),
  ('exclusive_or_expression_v -> exclusive_or_expression_v ^ and_expression_v','exclusive_or_expression_v',3,'p_exclusive_or_expression_v','yacc.py',649),
  ('and_expression_v -> equality_expression_v','and_expression_v',1,'p_and_expression_v','yacc.py',655),
  ('and_expression_v -> and_expression_v & equality_expression_v','and_expression_v',3,'p_and_expression_v','yacc.py',656),
  ('equality_expression_v -> relational_expression_v','equality_expression_v',1,'p_equality_expression_v','yacc.py',662),
  ('equality_expression_v -> equality_expression_v EQUAL relational_expression_v','equality_expression_v',3,'p_equality_expression_v','yacc.py',663),
  ('equality_expression_v -> equality_expression_v NE relational_expression_v','equality_expression_v',3,'p_equality_expression_v','yacc.py',664),
  ('relational_expression_v -> shift_expression_v','relational_expression_v',1,'p_relational_expression_v','yacc.py',670),
  ('relational_expression_v -> relational_expression_v < shift_expression_v','relational_expression_v',3,'p_relational_expression_v','yacc.py',671),
  ('relational_expression_v -> relational_expression_v > shift_expression_v','relational_expression_v',3,'p_relational_expression_v','yacc.py',672),
  ('relational_expression_v -> relational_expression_v LE shift_expression_v','relational_expression_v',3,'p_relational_expression_v','yacc.py',673),
  ('relational_expression_v -> relational_expression_v GE shift_expression_v','relational_expression_v',3,'p_relational_expression_v','yacc.py',674),
  ('shift_expression_v -> additive_expression_v','shift_expression_v',1,'p_shift_expression_v','yacc.py',680),
  ('shift_expression_v -> shift_expression_v SHIFT_LEFT additive_expression_v','shift_expression_v',3,'p_shift_expression_v','yacc.py',681),
  ('shift_expression_v -> shift_expression_v SHIFT_RIGHT additive_expression_v','shift_expression_v',3,'p_shift_expression_v','yacc.py',682),
  ('additive_expression_v -> multiplicative_expression_v','additive_expression_v',1,'p_additive_expression_v','yacc.py',688),
  ('additive_expression_v -> additive_expression_v + multiplicative_expression_v','additive_expression_v',3,'p_additive_expression_v','yacc.py',689),
  ('additive_expression_v -> additive_expression_v - multiplicative_expression_v','additive_expression_v',3,'p_additive_expression_v','yacc.py',690),
  ('multiplicative_expression_v -> cast_expression_v','multiplicative_expression_v',1,'p_multiplicative_expression_v','yacc.py',696),
  ('multiplicative_expression_v -> multiplicative_expression_v * cast_expression_v','multiplicative_expression_v',3,'p_multiplicative_expression_v','yacc.py',697),
  ('multiplicative_expression_v -> multiplicative_expression_v / cast_expression_v','multiplicative_expression_v',3,'p_multiplicative_expression_v','yacc.py',698),
  ('multiplicative_expression_v -> multiplicative_expression_v % cast_expression_v','multiplicative_expression_v',3,'p_multiplicative_expression_v','yacc.py',699),
  ('cast_expression_v -> unary_expression_v','cast_expression_v',1,'p_cast_expression_v','yacc.py',705),
  ('cast_expression_v -> unary_expression_v_constance','cast_expression_v',1,'p_cast_expression_v','yacc.py',706),
  ('cast_expression_v -> ( type_name ) cast_expression_v','cast_expression_v',4,'p_cast_expression_v','yacc.py',707),
  ('unary_expression_v_constance -> primary_expression_v','unary_expression_v_constance',1,'p_unary_expression_v_constance','yacc.py',714),
  ('unary_expression_v_constance -> SIZEOF unary_expression_v_constance','unary_expression_v_constance',2,'p_unary_expression_v_constance','yacc.py',715),
  ('unary_expression_v_constance -> SIZEOF ( type_name )','unary_expression_v_constance',4,'p_unary_expression_v_constance','yacc.py',716),
  ('unary_expression_v -> postfix_expression_v','unary_expression_v',1,'p_unary_expression_v','yacc.py',723),
  ('unary_expression_v -> INC unary_expression_v','unary_expression_v',2,'p_unary_expression_v','yacc.py',724),
  ('unary_expression_v -> DEC unary_expression_v','unary_expression_v',2,'p_unary_expression_v','yacc.py',725),
  ('unary_expression_v -> unary_operator_v cast_expression_v','unary_expression_v',2,'p_unary_expression_v','yacc.py',726),
  ('unary_expression_v -> SIZEOF unary_expression_v','unary_expression_v',2,'p_unary_expression_v','yacc.py',727),
  ('unary_operator_v -> &','unary_operator_v',1,'p_unary_operator_v','yacc.py',733),
  ('unary_operator_v -> *','unary_operator_v',1,'p_unary_operator_v','yacc.py',734),
  ('unary_operator_v -> +','unary_operator_v',1,'p_unary_operator_v','yacc.py',735),
  ('unary_operator_v -> -','unary_operator_v',1,'p_unary_operator_v','yacc.py',736),
  ('unary_operator_v -> ~','unary_operator_v',1,'p_unary_operator_v','yacc.py',737),
  ('unary_operator_v -> !','unary_operator_v',1,'p_unary_operator_v','yacc.py',738),
  ('postfix_expression_v -> postfix_expression_v_no_func','postfix_expression_v',1,'p_postfix_expression_v','yacc.py',745),
  ('postfix_expression_v -> postfix_expression_v [ expression ]','postfix_expression_v',4,'p_postfix_expression_v','yacc.py',746),
  ('postfix_expression_v -> identifier ( )','postfix_expression_v',3,'p_postfix_expression_v','yacc.py',747),
  ('postfix_expression_v -> identifier ( argument_expression_list )','postfix_expression_v',4,'p_postfix_expression_v','yacc.py',748),
  ('postfix_expression_v -> postfix_expression_v . ID','postfix_expression_v',3,'p_postfix_expression_v','yacc.py',749),
  ('postfix_expression_v -> postfix_expression_v PTR ID','postfix_expression_v',3,'p_postfix_expression_v','yacc.py',750),
  ('postfix_expression_v -> postfix_expression_v_no_func INC','postfix_expression_v',2,'p_postfix_expression_v','yacc.py',751),
  ('postfix_expression_v -> postfix_expression_v_no_func DEC','postfix_expression_v',2,'p_postfix_expression_v','yacc.py',752),
  ('postfix_expression_v_no_func -> identifier','postfix_expression_v_no_func',1,'p_postfix_expression_v_no_func','yacc.py',761),
  ('postfix_expression_v_no_func -> ( postfix_expression_v_no_func )','postfix_expression_v_no_func',3,'p_postfix_expression_v_no_func','yacc.py',762),
  ('postfix_expression_v_no_func -> postfix_expression_v_no_func [ expression ]','postfix_expression_v_no_func',4,'p_postfix_expression_v_no_func','yacc.py',763),
  ('postfix_expression_v_no_func -> postfix_expression_v_no_func . ID','postfix_expression_v_no_func',3,'p_postfix_expression_v_no_func','yacc.py',764),
  ('postfix_expression_v_no_func -> postfix_expression_v_no_func PTR ID','postfix_expression_v_no_func',3,'p_postfix_expression_v_no_func','yacc.py',765),
  ('primary_expression_v -> CONSTANCE','primary_expression_v',1,'p_primary_expression_v','yacc.py',774),
  ('primary_expression_v -> STRING_LITERAL','primary_expression_v',1,'p_primary_expression_v','yacc.py',775),
  ('primary_expression_v -> ( expression_variable )','primary_expression_v',3,'p_primary_expression_v','yacc.py',776),
  ('selection_statement -> IF ( expression_variable ) statement ELSE statement','selection_statement',7,'p_selection_statement','yacc.py',783),
  ('selection_statement -> IF ( expression_variable ) statement','selection_statement',5,'p_selection_statement','yacc.py',784),
  ('selection_statement -> SWITCH ( expression_variable ) statement_switch','selection_statement',5,'p_selection_statement','yacc.py',785),
  ('selection_statement_while -> IF ( expression_variable ) statement_while ELSE statement_while','selection_statement_while',7,'p_selection_statement_while','yacc.py',792),
  ('selection_statement_while -> IF ( expression_variable ) statement_while','selection_statement_while',5,'p_selection_statement_while','yacc.py',793),
  ('selection_statement_while -> SWITCH ( expression_variable ) statement_while_switch','selection_statement_while',5,'p_selection_statement_while','yacc.py',794),
  ('compound_statement_switch -> { }','compound_statement_switch',2,'p_compound_statement_switch','yacc.py',801),
  ('compound_statement_switch -> { block_item_list_switch }','compound_statement_switch',3,'p_compound_statement_switch','yacc.py',802),
  ('block_item_list_switch -> block_item_switch','block_item_list_switch',1,'p_block_item_list_switch','yacc.py',808),
  ('block_item_list_switch -> block_item_list_switch block_item_switch','block_item_list_switch',2,'p_block_item_list_switch','yacc.py',809),
  ('block_item_switch -> declaration','block_item_switch',1,'p_block_item_switch','yacc.py',815),
  ('block_item_switch -> statement_switch','block_item_switch',1,'p_block_item_switch','yacc.py',816),
  ('statement_switch -> labeled_statement_switch','statement_switch',1,'p_statement_switch','yacc.py',824),
  ('statement_switch -> compound_statement_switch','statement_switch',1,'p_statement_switch','yacc.py',825),
  ('statement_switch -> expression_statement','statement_switch',1,'p_statement_switch','yacc.py',826),
  ('statement_switch -> selection_statement','statement_switch',1,'p_statement_switch','yacc.py',827),
  ('statement_switch -> iteration_statement_switch','statement_switch',1,'p_statement_switch','yacc.py',828),
  ('statement_switch -> jump_statement','statement_switch',1,'p_statement_switch','yacc.py',829),
  ('labeled_statement_switch -> ID :','labeled_statement_switch',2,'p_labeled_statement_switch','yacc.py',836),
  ('labeled_statement_switch -> CASE constant_expression : statement','labeled_statement_switch',4,'p_labeled_statement_switch','yacc.py',837),
  ('labeled_statement_switch -> DEFAULT : statement','labeled_statement_switch',3,'p_labeled_statement_switch','yacc.py',838),
  ('compound_statement_while -> { }','compound_statement_while',2,'p_compound_statement_while','yacc.py',847),
  ('compound_statement_while -> { block_item_list_while }','compound_statement_while',3,'p_compound_statement_while','yacc.py',848),
  ('block_item_list_while -> block_item_while','block_item_list_while',1,'p_block_item_list_while','yacc.py',854),
  ('block_item_list_while -> block_item_list_while block_item_while','block_item_list_while',2,'p_block_item_list_while','yacc.py',855),
  ('block_item_while -> declaration','block_item_while',1,'p_block_item_while','yacc.py',861),
  ('block_item_while -> statement_while','block_item_while',1,'p_block_item_while','yacc.py',862),
  ('statement_while -> labeled_statement','statement_while',1,'p_statement_while','yacc.py',870),
  ('statement_while -> compound_statement_while','statement_while',1,'p_statement_while','yacc.py',871),
  ('statement_while -> expression_statement','statement_while',1,'p_statement_while','yacc.py',872),
  ('statement_while -> selection_statement_while','statement_while',1,'p_statement_while','yacc.py',873),
  ('statement_while -> iteration_statement','statement_while',1,'p_statement_while','yacc.py',874),
  ('statement_while -> jump_statement_while','statement_while',1,'p_statement_while','yacc.py',875),
  ('iteration_statement -> WHILE ( expression_variable ) statement_while','iteration_statement',5,'p_iteration_statement','yacc.py',882),
  ('iteration_statement -> DO statement_while WHILE ( expression_variable ) ;','iteration_statement',7,'p_iteration_statement','yacc.py',883),
  ('iteration_statement -> FOR ( expression_statement expression_statement ) statement_while','iteration_statement',6,'p_iteration_statement','yacc.py',884),
  ('iteration_statement -> FOR ( expression_statement expression_statement expression_variable ) statement_while','iteration_statement',7,'p_iteration_statement','yacc.py',885),
  ('iteration_statement -> FOR ( declaration expression_statement ) statement_while','iteration_statement',6,'p_iteration_statement','yacc.py',886),
  ('iteration_statement -> FOR ( declaration expression_statement expression_variable ) statement_while','iteration_statement',7,'p_iteration_statement','yacc.py',887),
  ('iteration_statement_switch -> WHILE ( expression_variable ) statement_while_switch','iteration_statement_switch',5,'p_iteration_statement_switch','yacc.py',894),
  ('iteration_statement_switch -> DO statement_while_switch WHILE ( expression_variable ) ;','iteration_statement_switch',7,'p_iteration_statement_switch','yacc.py',895),
  ('iteration_statement_switch -> FOR ( expression_statement expression_statement ) statement_while_switch','iteration_statement_switch',6,'p_iteration_statement_switch','yacc.py',896),
  ('iteration_statement_switch -> FOR ( expression_statement expression_statement expression_variable ) statement_while_switch','iteration_statement_switch',7,'p_iteration_statement_switch','yacc.py',897),
  ('iteration_statement_switch -> FOR ( declaration expression_statement ) statement_while_switch','iteration_statement_switch',6,'p_iteration_statement_switch','yacc.py',898),
  ('iteration_statement_switch -> FOR ( declaration expression_statement expression_variable ) statement_while_switch','iteration_statement_switch',7,'p_iteration_statement_switch','yacc.py',899),
  ('compound_statement_while_switch -> { }','compound_statement_while_switch',2,'p_compound_statement_while_switch','yacc.py',906),
  ('compound_statement_while_switch -> { block_item_list_while_switch }','compound_statement_while_switch',3,'p_compound_statement_while_switch','yacc.py',907),
  ('block_item_list_while_switch -> block_item_while_switch','block_item_list_while_switch',1,'p_block_item_list_while_switch','yacc.py',913),
  ('block_item_list_while_switch -> block_item_list_while_switch block_item_while_switch','block_item_list_while_switch',2,'p_block_item_list_while_switch','yacc.py',914),
  ('block_item_while_switch -> declaration','block_item_while_switch',1,'p_block_item_while_switch','yacc.py',920),
  ('block_item_while_switch -> statement_while_switch','block_item_while_switch',1,'p_block_item_while_switch','yacc.py',921),
  ('statement_while_switch -> labeled_statement_switch','statement_while_switch',1,'p_statement_while_switch','yacc.py',929),
  ('statement_while_switch -> compound_statement_while_switch','statement_while_switch',1,'p_statement_while_switch','yacc.py',930),
  ('statement_while_switch -> expression_statement','statement_while_switch',1,'p_statement_while_switch','yacc.py',931),
  ('statement_while_switch -> selection_statement_while','statement_while_switch',1,'p_statement_while_switch','yacc.py',932),
  ('statement_while_switch -> iteration_statement_switch','statement_while_switch',1,'p_statement_while_switch','yacc.py',933),
  ('statement_while_switch -> jump_statement_while','statement_while_switch',1,'p_statement_while_switch','yacc.py',934),
  ('jump_statement -> GOTO ID ;','jump_statement',3,'p_jump_statement','yacc.py',941),
  ('jump_statement -> RETURN ;','jump_statement',2,'p_jump_statement','yacc.py',942),
  ('jump_statement -> RETURN expression_variable ;','jump_statement',3,'p_jump_statement','yacc.py',943),
  ('jump_statement_while -> GOTO ID ;','jump_statement_while',3,'p_jump_statement_while','yacc.py',952),
  ('jump_statement_while -> CONTINUE ;','jump_statement_while',2,'p_jump_statement_while','yacc.py',953),
  ('jump_statement_while -> BREAK ;','jump_statement_while',2,'p_jump_statement_while','yacc.py',954),
  ('jump_statement_while -> RETURN ;','jump_statement_while',2,'p_jump_statement_while','yacc.py',955),
  ('jump_statement_while -> RETURN expression_variable ;','jump_statement_while',3,'p_jump_statement_while','yacc.py',956),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','yacc.py',968),
  ('argument_expression_list -> argument_expression_list , assignment_expression','argument_expression_list',3,'p_argument_expression_list','yacc.py',969),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list','yacc.py',974),
  ('initializer_list -> designation initializer','initializer_list',2,'p_initializer_list','yacc.py',975),
  ('initializer_list -> initializer_list , initializer','initializer_list',3,'p_initializer_list','yacc.py',976),
  ('initializer_list -> initializer_list , designation initializer','initializer_list',4,'p_initializer_list','yacc.py',977),
  ('initializer -> assignment_expression','initializer',1,'p_initializer','yacc.py',983),
  ('initializer -> { initializer_list }','initializer',3,'p_initializer','yacc.py',984),
  ('initializer -> { initializer_list , }','initializer',4,'p_initializer','yacc.py',985),
  ('designation -> designator_list =','designation',2,'p_designation','yacc.py',990),
  ('designator_list -> designator','designator_list',1,'p_designator_list','yacc.py',996),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','yacc.py',997),
  ('designator -> [ constant_expression ]','designator',3,'p_designator','yacc.py',1004),
  ('designator -> . ID','designator',2,'p_designator','yacc.py',1005),
]
